; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27050.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__FF24E80D_stdafx@h DB 01H
__84F95A01_denveremu@pch DB 01H
__122CF1B0_xstddef DB 01H
__FB7583FD_xstring DB 01H
__5B4F5DFF_mapper_002@h DB 01H
__F5916C5F_mapper_002@cpp DB 01H
__F007F164_stdexcept DB 01H
__C334353D_xatomic0@h DB 01H
__1CE3C767_xmemory0 DB 01H
__CDB00636_xutility DB 01H
__7E39D651_iosfwd DB 01H
__BEFE0DB4_string@h DB 01H
__1F77EA16_corecrt_memory@h DB 01H
__7949CB39_exception DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__ACA0BEE6_malloc@h DB 01H
__5ECFF36E_type_traits DB 01H
__B2D003D7_limits DB 01H
__3736D25A_xtgmath@h DB 01H
__824D367B_cmath DB 01H
__D23EE329_cstdlib DB 01H
__AF9067BE_corecrt_math@h DB 01H
__388D9910_stdlib@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
msvcjmc	ENDS
PUBLIC	??0uxrom@@QEAA@XZ				; uxrom::uxrom
PUBLIC	?read@uxrom@@UEAAEHH@Z				; uxrom::read
PUBLIC	?write@uxrom@@UEAAXHHE@Z			; uxrom::write
PUBLIC	?set_rom_data@uxrom@@UEAAXPEAE_K@Z		; uxrom::set_rom_data
PUBLIC	??1uxrom@@UEAA@XZ				; uxrom::~uxrom
PUBLIC	??_Guxrom@@UEAAPEAXI@Z				; uxrom::`scalar deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7uxrom@@6B@					; uxrom::`vftable'
PUBLIC	??_C@_0BK@HMMLMB@Denver?5UxROM?5?$CImapper?5002?$CJ@ ; `string'
PUBLIC	??_R4uxrom@@6B@					; uxrom::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVuxrom@@@8				; uxrom `RTTI Type Descriptor'
PUBLIC	??_R3uxrom@@8					; uxrom::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2uxrom@@8					; uxrom::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@uxrom@@8				; uxrom::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@rom@@8				; rom::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVrom@@@8					; rom `RTTI Type Descriptor'
PUBLIC	??_R3rom@@8					; rom::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2rom@@8					; rom::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bus_device@@8			; bus_device::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbus_device@@@8				; bus_device `RTTI Type Descriptor'
PUBLIC	??_R3bus_device@@8				; bus_device::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bus_device@@8				; bus_device::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@device@@8				; device::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVdevice@@@8				; device `RTTI Type Descriptor'
PUBLIC	??_R3device@@8					; device::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2device@@8					; device::`RTTI Base Class Array'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp_strcpy_s:PROC
EXTRN	?rundevice@device@@UEAAHH@Z:PROC		; device::rundevice
EXTRN	?get_device_descriptor@device@@QEAAPEADXZ:PROC	; device::get_device_descriptor
EXTRN	?dma@device@@UEAAXPEAE_N1@Z:PROC		; device::dma
EXTRN	??0rom@@QEAA@XZ:PROC				; rom::rom
EXTRN	??1rom@@UEAA@XZ:PROC				; rom::~rom
EXTRN	?set_rom_data@rom@@UEAAXPEAEH@Z:PROC		; rom::set_rom_data
EXTRN	??_Euxrom@@UEAAPEAXI@Z:PROC			; uxrom::`vector deleting destructor'
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0uxrom@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+146
	DD	imagerel $unwind$??0uxrom@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0uxrom@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0uxrom@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0uxrom@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0uxrom@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?read@uxrom@@UEAAEHH@Z DD imagerel $LN5
	DD	imagerel $LN5+181
	DD	imagerel $unwind$?read@uxrom@@UEAAEHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@uxrom@@UEAAXHHE@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$?write@uxrom@@UEAAXHHE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?set_rom_data@uxrom@@UEAAXPEAE_K@Z DD imagerel $LN3
	DD	imagerel $LN3+175
	DD	imagerel $unwind$?set_rom_data@uxrom@@UEAAXPEAE_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1uxrom@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1uxrom@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Guxrom@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Guxrom@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2device@@8
rdata$r	SEGMENT
??_R2device@@8 DD imagerel ??_R1A@?0A@EA@device@@8	; device::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3device@@8
rdata$r	SEGMENT
??_R3device@@8 DD 00H					; device::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2device@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVdevice@@@8
data$r	SEGMENT
??_R0?AVdevice@@@8 DQ FLAT:??_7type_info@@6B@		; device `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVdevice@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@device@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@device@@8 DD imagerel ??_R0?AVdevice@@@8	; device::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3device@@8
rdata$r	ENDS
;	COMDAT ??_R2bus_device@@8
rdata$r	SEGMENT
??_R2bus_device@@8 DD imagerel ??_R1A@?0A@EA@bus_device@@8 ; bus_device::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@device@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bus_device@@8
rdata$r	SEGMENT
??_R3bus_device@@8 DD 00H				; bus_device::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bus_device@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbus_device@@@8
data$r	SEGMENT
??_R0?AVbus_device@@@8 DQ FLAT:??_7type_info@@6B@	; bus_device `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbus_device@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bus_device@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bus_device@@8 DD imagerel ??_R0?AVbus_device@@@8 ; bus_device::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bus_device@@8
rdata$r	ENDS
;	COMDAT ??_R2rom@@8
rdata$r	SEGMENT
??_R2rom@@8 DD	imagerel ??_R1A@?0A@EA@rom@@8		; rom::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bus_device@@8
	DD	imagerel ??_R1A@?0A@EA@device@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3rom@@8
rdata$r	SEGMENT
??_R3rom@@8 DD	00H					; rom::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2rom@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVrom@@@8
data$r	SEGMENT
??_R0?AVrom@@@8 DQ FLAT:??_7type_info@@6B@		; rom `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVrom@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@rom@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@rom@@8 DD imagerel ??_R0?AVrom@@@8	; rom::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3rom@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@uxrom@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@uxrom@@8 DD imagerel ??_R0?AVuxrom@@@8	; uxrom::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3uxrom@@8
rdata$r	ENDS
;	COMDAT ??_R2uxrom@@8
rdata$r	SEGMENT
??_R2uxrom@@8 DD imagerel ??_R1A@?0A@EA@uxrom@@8	; uxrom::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@rom@@8
	DD	imagerel ??_R1A@?0A@EA@bus_device@@8
	DD	imagerel ??_R1A@?0A@EA@device@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3uxrom@@8
rdata$r	SEGMENT
??_R3uxrom@@8 DD 00H					; uxrom::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2uxrom@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVuxrom@@@8
data$r	SEGMENT
??_R0?AVuxrom@@@8 DQ FLAT:??_7type_info@@6B@		; uxrom `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVuxrom@@', 00H
data$r	ENDS
;	COMDAT ??_R4uxrom@@6B@
rdata$r	SEGMENT
??_R4uxrom@@6B@ DD 01H					; uxrom::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVuxrom@@@8
	DD	imagerel ??_R3uxrom@@8
	DD	imagerel ??_R4uxrom@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BK@HMMLMB@Denver?5UxROM?5?$CImapper?5002?$CJ@
CONST	SEGMENT
??_C@_0BK@HMMLMB@Denver?5UxROM?5?$CImapper?5002?$CJ@ DB 'Denver UxROM (ma'
	DB	'pper 002)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7uxrom@@6B@
CONST	SEGMENT
??_7uxrom@@6B@ DQ FLAT:??_R4uxrom@@6B@			; uxrom::`vftable'
	DQ	FLAT:?rundevice@device@@UEAAHH@Z
	DQ	FLAT:?dma@device@@UEAAXPEAE_N1@Z
	DQ	FLAT:??_Euxrom@@UEAAPEAXI@Z
	DQ	FLAT:?write@uxrom@@UEAAXHHE@Z
	DQ	FLAT:?read@uxrom@@UEAAEHH@Z
	DQ	FLAT:?set_rom_data@rom@@UEAAXPEAEH@Z
	DQ	FLAT:?set_rom_data@uxrom@@UEAAXPEAE_K@Z
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Guxrom@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1uxrom@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?set_rom_data@uxrom@@UEAAXPEAE_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@uxrom@@UEAAXHHE@Z DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?read@uxrom@@UEAAEHH@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0uxrom@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0uxrom@@QEAA@XZ DD imagerel ??0uxrom@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0uxrom@@QEAA@XZ+78
	DD	00H
	DD	imagerel ??0uxrom@@QEAA@XZ+129
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0uxrom@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0uxrom@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0uxrom@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0uxrom@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0uxrom@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0uxrom@@QEAA@XZ DD 025053511H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0uxrom@@QEAA@XZ
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Guxrom@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Guxrom@@UEAAPEAXI@Z PROC				; uxrom::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1uxrom@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 96					; 00000060H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Guxrom@@UEAAPEAXI@Z ENDP				; uxrom::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1uxrom@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1uxrom@@UEAA@XZ PROC					; uxrom::~uxrom, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1rom@@UEAA@XZ				; rom::~rom
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1uxrom@@UEAA@XZ ENDP					; uxrom::~uxrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\mapper_002.cpp
;	COMDAT ?set_rom_data@uxrom@@UEAAXPEAE_K@Z
_TEXT	SEGMENT
this$ = 224
data$ = 232
size$ = 240
?set_rom_data@uxrom@@UEAAXPEAE_K@Z PROC			; uxrom::set_rom_data, COMDAT

; 24   : {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__F5916C5F_mapper_002@cpp
	call	__CheckForDebuggerJustMyCode

; 25   : 	devicestart = 0x8000;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+44], 32768		; 00008000H

; 26   : 	deviceend = 0xFFFF;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+48], 65535		; 0000ffffH

; 27   : 	devicemask = 0xFFFF;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+52], 65535		; 0000ffffH

; 28   : 	romdata = data;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR data$[rbp]
	mov	QWORD PTR [rax+72], rcx

; 29   : 	romsize = (int)size;

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR size$[rbp]
	mov	DWORD PTR [rax+80], ecx

; 30   : 	lastbank = romsize - 16384;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+80]
	sub	eax, 16384				; 00004000H
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+92], eax

; 31   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?set_rom_data@uxrom@@UEAAXPEAE_K@Z ENDP			; uxrom::set_rom_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\mapper_002.cpp
;	COMDAT ?write@uxrom@@UEAAXHHE@Z
_TEXT	SEGMENT
this$ = 224
addr$ = 232
addr_from_base$ = 240
data$ = 248
?write@uxrom@@UEAAXHHE@Z PROC				; uxrom::write, COMDAT

; 18   : {

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__F5916C5F_mapper_002@cpp
	call	__CheckForDebuggerJustMyCode

; 19   : 	// we just look @ data, address is irrelevant.
; 20   : 	bank = data & 0x07;	// last 3 bits.

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 7
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+88], al

; 21   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?write@uxrom@@UEAAXHHE@Z ENDP				; uxrom::write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\mapper_002.cpp
;	COMDAT ?read@uxrom@@UEAAEHH@Z
_TEXT	SEGMENT
tv90 = 192
this$ = 240
addr$ = 248
addr_from_base$ = 256
?read@uxrom@@UEAAEHH@Z PROC				; uxrom::read, COMDAT

; 11   : {

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__F5916C5F_mapper_002@cpp
	call	__CheckForDebuggerJustMyCode

; 12   : 	return addr_from_base >= 0x4000 ? 

	cmp	DWORD PTR addr_from_base$[rbp], 16384	; 00004000H
	jl	SHORT $LN3@read
	mov	eax, DWORD PTR addr$[rbp]
	and	eax, 16383				; 00003fffH
	mov	rcx, QWORD PTR this$[rbp]
	or	eax, DWORD PTR [rcx+92]
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+72]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR tv90[rbp], al
	jmp	SHORT $LN4@read
$LN3@read:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+88]
	shl	eax, 14
	or	eax, DWORD PTR addr_from_base$[rbp]
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+72]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR tv90[rbp], al
$LN4@read:
	movzx	eax, BYTE PTR tv90[rbp]

; 13   : 		romdata[(addr & 0x3FFF) | lastbank] : 
; 14   : 		romdata[(bank << 14) | addr_from_base];
; 15   : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?read@uxrom@@UEAAEHH@Z ENDP				; uxrom::read
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\mapper_002.cpp
;	COMDAT ??0uxrom@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0uxrom@@QEAA@XZ PROC					; uxrom::uxrom, COMDAT

; 6    : uxrom::uxrom() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__F5916C5F_mapper_002@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0rom@@QEAA@XZ				; rom::rom
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7uxrom@@6B@
	mov	QWORD PTR [rax], rcx

; 7    : 	strcpy_s(this->get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "Denver UxROM (mapper 002)");

	mov	rcx, QWORD PTR this$[rbp]
	call	?get_device_descriptor@device@@QEAAPEADXZ ; device::get_device_descriptor
	lea	r8, OFFSET FLAT:??_C@_0BK@HMMLMB@Denver?5UxROM?5?$CImapper?5002?$CJ@
	mov	edx, 128				; 00000080H
	mov	rcx, rax
	call	QWORD PTR __imp_strcpy_s
	npad	1

; 8    : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0uxrom@@QEAA@XZ ENDP					; uxrom::uxrom
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???0uxrom@@QEAA@XZ@4HA PROC			; `uxrom::uxrom'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1rom@@UEAA@XZ				; rom::~rom
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0uxrom@@QEAA@XZ@4HA ENDP			; `uxrom::uxrom'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???0uxrom@@QEAA@XZ@4HA PROC			; `uxrom::uxrom'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1rom@@UEAA@XZ				; rom::~rom
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0uxrom@@QEAA@XZ@4HA ENDP			; `uxrom::uxrom'::`1'::dtor$0
text$x	ENDS
END
