; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27050.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__FF24E80D_stdafx@h DB 01H
__84F95A01_denveremu@pch DB 01H
__8FA60561_xmemory DB 01H
__122CF1B0_xstddef DB 01H
__E53366A2_utility DB 01H
__F2A749D8_streambuf DB 01H
__375B2D08_ostream DB 01H
__548B1832_istream DB 01H
__FB7583FD_xstring DB 01H
__FF7D7337_vector DB 01H
__A57BBCE6_stdio@h DB 01H
__D40DD59F_corecrt_stdio_config@h DB 01H
__05861537_clock@h DB 01H
__8EB5A672_clock@cpp DB 01H
__D1FEDD45_ios DB 01H
__5B5D5F1B_wchar@h DB 01H
__BACC91DB_xlocnum DB 01H
__9B0361F4_xiosbase DB 01H
__FD5040F3_system_error DB 01H
__420D52D3_xcall_once@h DB 01H
__244BF7CC_xlocale DB 01H
__223B5856_xfacet DB 01H
__0E7E0F59_memory DB 01H
__A2E616E7_xlocinfo DB 01H
__7A53EED8_ctype@h DB 01H
__C42C8B73_vcruntime_typeinfo@h DB 01H
__F007F164_stdexcept DB 01H
__C334353D_xatomic0@h DB 01H
__1CE3C767_xmemory0 DB 01H
__CDB00636_xutility DB 01H
__7E39D651_iosfwd DB 01H
__BEFE0DB4_string@h DB 01H
__1F77EA16_corecrt_memory@h DB 01H
__7949CB39_exception DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__ACA0BEE6_malloc@h DB 01H
__5ECFF36E_type_traits DB 01H
__B2D003D7_limits DB 01H
__3736D25A_xtgmath@h DB 01H
__824D367B_cmath DB 01H
__D23EE329_cstdlib DB 01H
__AF9067BE_corecrt_math@h DB 01H
__388D9910_stdlib@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0_Container_proxy@std@@QEAA@XZ		; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Clrcont@_Iterator_base12@std@@QEAAXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??0?$allocator@PEAVdevice@@@std@@QEAA@XZ	; std::allocator<device *>::allocator<device *>
PUBLIC	?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z ; std::allocator<device *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z ; std::allocator<device *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z ; std::_Default_allocator_traits<std::allocator<device *> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::~_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<device *> >::_Vector_val<std::_Simple_types<device *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second
PUBLIC	??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ ; std::vector<device *,std::allocator<device *> >::vector<device *,std::allocator<device *> >
PUBLIC	??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ ; std::vector<device *,std::allocator<device *> >::~vector<device *,std::allocator<device *> >
PUBLIC	?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z ; std::vector<device *,std::allocator<device *> >::push_back
PUBLIC	?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
PUBLIC	?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::size
PUBLIC	?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::max_size
PUBLIC	?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::capacity
PUBLIC	?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ ; std::vector<device *,std::allocator<device *> >::_Has_unused_capacity
PUBLIC	?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z ; std::vector<device *,std::allocator<device *> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z ; std::vector<device *,std::allocator<device *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z ; std::vector<device *,std::allocator<device *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ ; std::vector<device *,std::allocator<device *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ ; std::vector<device *,std::allocator<device *> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Orphan_range
PUBLIC	??0clock@@QEAA@XZ				; clock::clock
PUBLIC	??1clock@@QEAA@XZ				; clock::~clock
PUBLIC	?registerdevice@clock@@QEAAXPEAVdevice@@@Z	; clock::registerdevice
PUBLIC	?step@clock@@QEAAXXZ				; clock::step
PUBLIC	?run@clock@@QEAAXXZ				; clock::run
PUBLIC	??0fastclock@@QEAA@XZ				; fastclock::fastclock
PUBLIC	??1fastclock@@QEAA@XZ				; fastclock::~fastclock
PUBLIC	?step@fastclock@@QEAAXXZ			; fastclock::step
PUBLIC	?run@fastclock@@QEAAXXZ				; fastclock::run
PUBLIC	?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z	; fastclock::setdevices
PUBLIC	??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z ; std::vector<device *,std::allocator<device *> >::emplace_back<device * const &>
PUBLIC	??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ; std::forward<device * const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z ; std::vector<device *,std::allocator<device *> >::_Emplace_back_with_unused_capacity<device * const &>
PUBLIC	??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z ; std::_Unfancy<device *>
PUBLIC	??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<device *> >::construct<device *,device * const &>
PUBLIC	??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1><>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><device *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<device *> > >
PUBLIC	??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z ; std::_Destroy_range<std::allocator<device *> >
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<device *> >
PUBLIC	??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z ; std::_Get_unwrapped<device *>
PUBLIC	??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z ; std::_Idl_distance<device * *,device * *>
PUBLIC	??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<device * *,device * *>
PUBLIC	??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z ; std::_Get_unwrapped_n<device *,__int64,0>
PUBLIC	??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z ; std::_Ptr_move_cat<device *,device *>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<device *,device *,std::allocator<device *> >
PUBLIC	??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z ; std::_Seek_wrapped<device *>
PUBLIC	??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z ; std::_Copy_memmove<device * *,device * *>
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memmove:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+248
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clrcont@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Clrcont@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+476
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+154
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+292
	DD	imagerel $unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+215
	DD	imagerel $unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+153
	DD	imagerel $unwind$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+142
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+200
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+363
	DD	imagerel $unwind$?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+289
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z DD imagerel $LN10
	DD	imagerel $LN10+286
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA+37
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0clock@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??0clock@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1clock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??1clock@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?registerdevice@clock@@QEAAXPEAVdevice@@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?registerdevice@clock@@QEAAXPEAVdevice@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?step@clock@@QEAAXXZ DD imagerel $LN28
	DD	imagerel $LN28+1203
	DD	imagerel $unwind$?step@clock@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?run@clock@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+85
	DD	imagerel $unwind$?run@clock@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0fastclock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0fastclock@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1fastclock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??1fastclock@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?step@fastclock@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+493
	DD	imagerel $unwind$?step@fastclock@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?run@fastclock@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+85
	DD	imagerel $unwind$?run@fastclock@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z DD imagerel $LN4
	DD	imagerel $LN4+177
	DD	imagerel $unwind$??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z DD imagerel $LN3
	DD	imagerel $LN3+273
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN13
	DD	imagerel $LN13+620
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA+94
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+121
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+303
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+281
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+124
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xmemory0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 072H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z DD 025053401H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z DD 035054a19H
	DD	011d3322H
	DD	070160033H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0188H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcName$1 DB 05fH ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcName$2 DB 05fH ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
	DB	055H
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+9
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcVarDesc DD 078H ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
	DD	08H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcName$0
	ORG $+144
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcFrameData DD 03H ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z DD imagerel ??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035052a01H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z DD imagerel ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z DD 025063501H
	DD	0119231eH
	DD	070120020H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z DD imagerel ??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA DD 031019H
	DD	0700c4210H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD imagerel ??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z+260
	DD	00H
	DD	imagerel ??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z+555
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA+20
	DD	01H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA+79
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
	DD	06H
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
	DD	01e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z DD 025053f19H
	DD	0118231dH
	DD	070110041H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z DD imagerel ??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?run@fastclock@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?step@fastclock@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070027H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0128H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?step@fastclock@@QEAAXXZ$rtcName$0 DB 064H		; fastclock::step
	DB	06dH
	DB	061H
	DB	062H
	DB	079H
	DB	074H
	DB	065H
	DB	00H
	ORG $+8
?step@fastclock@@QEAAXXZ$rtcVarDesc DD 024H		; fastclock::step
	DD	01H
	DQ	FLAT:?step@fastclock@@QEAAXXZ$rtcName$0
	ORG $+48
?step@fastclock@@QEAAXXZ$rtcFrameData DD 01H		; fastclock::step
	DD	00H
	DQ	FLAT:?step@fastclock@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1fastclock@@QEAA@XZ DD imagerel ??1fastclock@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1fastclock@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1fastclock@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1fastclock@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1fastclock@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0fastclock@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?run@clock@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?step@clock@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	07007009bH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	04c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?step@clock@@QEAAXXZ$rtcName$0 DB 064H			; clock::step
	DB	06dH
	DB	061H
	DB	062H
	DB	079H
	DB	074H
	DB	065H
	DB	00H
	ORG $+8
?step@clock@@QEAAXXZ$rtcVarDesc DD 0104H		; clock::step
	DD	01H
	DQ	FLAT:?step@clock@@QEAAXXZ$rtcName$0
	ORG $+48
?step@clock@@QEAAXXZ$rtcFrameData DD 01H		; clock::step
	DD	00H
	DQ	FLAT:?step@clock@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?registerdevice@clock@@QEAAXPEAVdevice@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1clock@@QEAA@XZ DD imagerel ??1clock@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1clock@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1clock@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1clock@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1clock@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0clock@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z DD imagerel ?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z
	DD	0ffffffffH
	DD	imagerel ?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z+108
	DD	00H
	DD	imagerel ?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z+235
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z DD 025055019H
	DD	0118231dH
	DD	070110029H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z
	DD	013aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z$rtcName$0 DB 05fH ; std::vector<device *,std::allocator<device *> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z$rtcVarDesc DD 024H ; std::vector<device *,std::allocator<device *> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z$rtcFrameData DD 01H ; std::vector<device *,std::allocator<device *> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z$rtcVarDesc
$cppxdata$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z
	DD	0128H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z DD 025053901H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z DD 035053901H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ DD imagerel ?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ DD 025053519H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD imagerel ?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD imagerel ?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
	DD	0128H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD 025053519H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD imagerel ?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD imagerel ?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD imagerel ?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD imagerel ??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD imagerel ??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD imagerel ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD imagerel ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD imagerel ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD imagerel ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD imagerel ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD imagerel ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD imagerel ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD imagerel ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD imagerel ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	05fH
	DB	061H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	061H
	DB	074H
	DB	06fH
	DB	072H
	DB	00H
	ORG $+15
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy
	DD	01H
	DQ	FLAT:?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy
	DD	00H
	DQ	FLAT:?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	05fH
	DB	061H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	061H
	DB	074H
	DB	06fH
	DB	072H
	DB	00H
	ORG $+15
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy
	DD	01H
	DQ	FLAT:?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy
	DD	00H
	DQ	FLAT:?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z DD imagerel ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ DD imagerel ??0?$allocator@PEAVdevice@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$allocator@PEAVdevice@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
	DD	0108H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 025053a19H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035052f01H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ DD imagerel ?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Clrcont@_Iterator_base12@std@@QEAAXXZ DD imagerel ?_Clrcont@_Iterator_base12@std@@QEAAXXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Clrcont@_Iterator_base12@std@@QEAAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Clrcont@_Iterator_base12@std@@QEAAXXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clrcont@_Iterator_base12@std@@QEAAXXZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Clrcont@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025054619H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	0128H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel ?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Container_proxy@std@@QEAA@XZ DD imagerel ??0_Container_proxy@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0_Container_proxy@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0_Container_proxy@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0_Container_proxy@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel ?max@?$numeric_limits@_J@std@@SA_JXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025052919H
	DD	010a230fH
	DD	070030021H
	DD	05002H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??2@YAPEAX_KPEAX@Z DD imagerel ??2@YAPEAX_KPEAX@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??2@YAPEAX_KPEAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??2@YAPEAX_KPEAX@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_First_ch$ = 8
_Last_ch$ = 40
_Dest_ch$ = 72
_Count$ = 104
_First$ = 352
_Last$ = 360
_Dest$ = 368
??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<device * *,device * *>, COMDAT

; 2398 : 	{	// implement copy-like function as memmove

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 2399 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));

	mov	rax, QWORD PTR _First$[rbp]
	mov	QWORD PTR _First_ch$[rbp], rax

; 2400 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));

	mov	rax, QWORD PTR _Last$[rbp]
	mov	QWORD PTR _Last_ch$[rbp], rax

; 2401 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));

	mov	rax, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR _Dest_ch$[rbp], rax

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	add	rcx, rax
	mov	rax, rcx

; 2405 : 	}

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<device * *,device * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z
_TEXT	SEGMENT
_It$ = 224
_UIt$ = 232
??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z PROC ; std::_Seek_wrapped<device *>, COMDAT

; 871  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 872  : 	_It = _UIt;

	mov	rax, QWORD PTR _It$[rbp]
	mov	rcx, QWORD PTR _UIt$[rbp]
	mov	QWORD PTR [rax], rcx

; 873  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z ENDP ; std::_Seek_wrapped<device *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Dest$ = 240
__formal$ = 248
__formal$ = 256
__formal$ = 264
??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<device *,device *,std::allocator<device *> >, COMDAT

; 243  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8FA60561_xmemory
	call	__CheckForDebuggerJustMyCode

; 244  : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Copy_memmove@PEAPEAVdevice@@PEAPEAV1@@std@@YAPEAPEAVdevice@@PEAPEAV1@00@Z ; std::_Copy_memmove<device * *,device * *>

; 245  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<device *,device *,std::allocator<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
__formal$ = 232
__formal$ = 240
??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z PROC ; std::_Ptr_move_cat<device *,device *>, COMDAT

; 1086 : 	{	// return pointer move optimization category for pointers

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 1087 : 	return {};

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 1088 : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z ENDP ; std::_Ptr_move_cat<device *,device *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z
_TEXT	SEGMENT
_Src$ = 224
__formal$ = 232
??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z PROC ; std::_Get_unwrapped_n<device *,__int64,0>, COMDAT

; 808  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 809  : 	return (_Src);

	mov	rax, QWORD PTR _Src$[rbp]

; 810  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z ENDP ; std::_Get_unwrapped_n<device *,__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
__formal$ = 240
??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<device * *,device * *>, COMDAT

; 967  : 	{	// _Idl_distance for random-access iterators

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3

; 969  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<device * *,device * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z
_TEXT	SEGMENT
$T1 = 196
_First$ = 256
_Last$ = 264
??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z PROC ; std::_Idl_distance<device * *,device * *>, COMDAT

; 974  : 	{	// tries to get the distance between _First and _Last if they are random-access iterators

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));

	movzx	r8d, BYTE PTR $T1[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Idl_distance1@PEAPEAVdevice@@PEAPEAV1@@std@@YA_JAEBQEAPEAVdevice@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<device * *,device * *>

; 976  : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z ENDP ; std::_Idl_distance<device * *,device * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z PROC ; std::_Get_unwrapped<device *>, COMDAT

; 662  : 	{	// special case already-unwrapped pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 663  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]

; 664  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z ENDP ; std::_Get_unwrapped<device *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Max_possible$ = 8
_Result$ = 40
_Count$ = 288
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 23   : 	{	// gets the size of _Count copies of a type sized _Ty_size

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$[rbp], rax

; 25   : 	size_t _Result = _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	QWORD PTR _Result$[rbp], rax

; 26   : 	if (_Max_possible < _Count)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

	mov	QWORD PTR _Result$[rbp], -1
$LN2@Get_size_o:

; 30   : 		}
; 31   : 
; 32   : 	return (_Result);

	mov	rax, QWORD PTR _Result$[rbp]

; 33   : 	}

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T6 = 292
$T7 = 324
__$ArrayPad$ = 344
_First$ = 384
_Last$ = 392
_Dest$ = 400
_Al$ = 408
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z PROC ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >, COMDAT

; 251  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__8FA60561_xmemory
	call	__CheckForDebuggerJustMyCode

; 252  : 		// note: only called internally from elsewhere in the STL
; 253  : 	const auto _UFirst = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z ; std::_Get_unwrapped<device *>
	mov	QWORD PTR _UFirst$[rbp], rax

; 254  : 	const auto _ULast = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@PEAVdevice@@@std@@YAPEAPEAVdevice@@QEAPEAV1@@Z ; std::_Get_unwrapped<device *>
	mov	QWORD PTR _ULast$[rbp], rax

; 255  : 	const auto _UDest = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	rdx, QWORD PTR _ULast$[rbp]
	lea	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Idl_distance@PEAPEAVdevice@@PEAPEAV1@@std@@YA@AEBQEAPEAVdevice@@0@Z ; std::_Idl_distance<device * *,device * *>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Get_unwrapped_n@PEAVdevice@@_J$0A@@std@@YAPEAPEAVdevice@@QEAPEAV1@_J@Z ; std::_Get_unwrapped_n<device *,__int64,0>
	mov	QWORD PTR _UDest$[rbp], rax

; 256  : 	_Seek_wrapped(_Dest,

	lea	r8, QWORD PTR _UDest$[rbp]
	lea	rdx, QWORD PTR _UFirst$[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??$_Ptr_move_cat@PEAVdevice@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVdevice@@0@Z ; std::_Ptr_move_cat<device *,device *>
	movzx	ecx, BYTE PTR $T6[rbp]
	mov	BYTE PTR [rsp+40], cl
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, QWORD PTR _UDest$[rbp]
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Uninitialized_move_al_unchecked@PEAVdevice@@PEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@00AEAV?$allocator@PEAVdevice@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<device *,device *,std::allocator<device *> >
	mov	rdx, rax
	lea	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Seek_wrapped@PEAVdevice@@@std@@YAXAEAPEAPEAVdevice@@QEAPEAV1@@Z ; std::_Seek_wrapped<device *>

; 257  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 258  : 			_Ptr_move_cat(_UFirst, _UDest),
; 259  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>()));
; 260  : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rbp]

; 261  : 	}

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z ENDP ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
__formal$ = 248
??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<device *> >, COMDAT

; 1145 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 1146 : 		// nothing to do
; 1147 : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
$T1 = 200
_Arg$ = 256
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__5ECFF36E_type_traits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rbp]

; 1575 : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 92   : 	{	// allocate _Bytes manually aligned to at least _Big_allocation_alignment

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rbp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rbp], rax

; 94   : 	if (_Block_size <= _Bytes)

	mov	rax, QWORD PTR _Bytes$[rbp]
	cmp	QWORD PTR _Block_size$[rbp], rax
	ja	SHORT $LN8@Allocate_m

; 95   : 		{	// add overflow, try allocating all of memory and assume the
; 96   : 			// allocation function will throw bad_alloc
; 97   : 		_Block_size = static_cast<size_t>(-1);

	mov	QWORD PTR _Block_size$[rbp], -1
$LN8@Allocate_m:

; 98   : 		}
; 99   : 
; 100  : 	const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rbp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 101				; 00000065H
	lea	rdx, OFFSET FLAT:??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 101				; 00000065H
	lea	r8, OFFSET FLAT:??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rbp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rbp], rax

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rcx+rax], rdx

; 105  : 
; 106  :   #ifdef _DEBUG
; 107  : 	static_cast<uintptr_t *>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 108  :   #endif /* _DEBUG */
; 109  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]

; 110  : 	}

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Max_possible$ = 8
_Result$ = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 23   : 	{	// gets the size of _Count copies of a type sized _Ty_size

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$[rbp], rax

; 25   : 	size_t _Result = _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	QWORD PTR _Result$[rbp], rax

; 26   : 	if (_Max_possible < _Count)

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

	mov	QWORD PTR _Result$[rbp], -1
$LN2@Get_size_o:

; 30   : 		}
; 31   : 
; 32   : 	return (_Result);

	mov	rax, QWORD PTR _Result$[rbp]

; 33   : 	}

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z
_TEXT	SEGMENT
$T1 = 196
_First$ = 256
_Last$ = 264
_Al$ = 272
??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z PROC ; std::_Destroy_range<std::allocator<device *> >, COMDAT

; 1154 : 	{	// destroy [_First, _Last), choose optimization

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	r9d, BYTE PTR $T1[rbp]
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range1@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<device *> >

; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
$T1 = 200
_Val$ = 256
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<device *> > >, COMDAT

; 329  : 	{	// return address of _Val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__122CF1B0_xstddef
	call	__CheckForDebuggerJustMyCode
	npad	1

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rbp]

; 331  : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<device *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	rdi, QWORD PTR $T1[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))
; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 345  : 	{	// do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__122CF1B0_xstddef
	call	__CheckForDebuggerJustMyCode

; 346  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]

; 347  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>, COMDAT

; 1212 : 	{	// deallocate a plain pointer using an allocator, non-fancy pointers special case

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 1213 : 	allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate

; 1214 : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 886  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 871  : 		{	// deallocate _Count elements at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 872  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 874  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
__formal$ = 264
??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><device *>, COMDAT

; 986  : 		{	// construct from a related allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode
	npad	1

; 987  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><device *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 998  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 199  : 	{	// deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 200  :  #if defined(_M_IX86) || defined(_M_X64)
; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 202  : 		{	// boost the alignment of big allocations to help autovectorization
; 203  : 		_Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rbp]
	lea	rcx, QWORD PTR _Ptr$[rbp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 204  : 		}
; 205  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 206  : 
; 207  : 	::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete

; 208  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 180  : 	{	// allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 181  :  #if defined(_M_IX86) || defined(_M_X64)
; 182  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 183  : 		{	// boost the alignment of big allocations to help autovectorization
; 184  : 		return (_Allocate_manually_vector_aligned<_Traits>(_Bytes));

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 185  : 		}
; 186  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 187  : 
; 188  : 	if (_Bytes != 0)

	cmp	QWORD PTR _Bytes$[rbp], 0
	je	SHORT $LN3@Allocate

; 189  : 		{
; 190  : 		return (_Traits::_Allocate(_Bytes));

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);

	xor	eax, eax
$LN1@Allocate:

; 194  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1><>, COMDAT

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@PEAVdevice@@@std@@QEAA@XZ ; std::allocator<device *>::allocator<device *>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<device *> >::_Vector_val<std::_Simple_types<device *> >

; 278  : 		{	// construct from forwarded values
; 279  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z
_TEXT	SEGMENT
_Whereoff$ = 8
_Al$ = 40
_Oldsize$ = 72
_Newsize$ = 104
_Newcapacity$ = 136
_Newvec$ = 168
_Constructed_last$ = 200
_Constructed_first$ = 232
$T1 = 456
tv207 = 472
tv176 = 472
tv153 = 472
this$ = 512
_Whereptr$ = 520
<_Val_0>$ = 528
??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z PROC ; std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>, COMDAT

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+552]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 943  : 			// pre: !_Has_unused_capacity()
; 944  : 		const size_type _Whereoff = static_cast<size_type>(_Whereptr - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Whereoff$[rbp], rax

; 945  : 		_Alty& _Al = this->_Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 946  : 		const size_type _Oldsize = size();

	mov	rcx, QWORD PTR this$[rbp]
	call	?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::size
	mov	QWORD PTR _Oldsize$[rbp], rax

; 947  : 
; 948  : 		if (_Oldsize == max_size())

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::max_size
	cmp	QWORD PTR _Oldsize$[rbp], rax
	jne	SHORT $LN2@Emplace_re

; 949  : 			{
; 950  : 			_Xlength();

	call	?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ ; std::vector<device *,std::allocator<device *> >::_Xlength
$LN2@Emplace_re:

; 951  : 			}
; 952  : 
; 953  : 		const size_type _Newsize = _Oldsize + 1;

	mov	rax, QWORD PTR _Oldsize$[rbp]
	inc	rax
	mov	QWORD PTR _Newsize$[rbp], rax

; 954  : 		const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z ; std::vector<device *,std::allocator<device *> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rbp], rax

; 955  : 
; 956  : 		const pointer _Newvec = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z ; std::allocator<device *>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax

; 957  : 		const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	QWORD PTR _Constructed_last$[rbp], rax

; 958  : 		pointer _Constructed_first = _Constructed_last;

	mov	rax, QWORD PTR _Constructed_last$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 959  : 
; 960  : 		_TRY_BEGIN
; 961  : 		_Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, rax
	call	??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z ; std::_Unfancy<device *>
	mov	QWORD PTR tv207[rbp], rax
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ; std::forward<device * const &>
	mov	r8, rax
	mov	rdx, QWORD PTR tv207[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<device *> >::construct<device *,device * const &>

; 962  : 		_Constructed_first = _Newvec + _Whereoff;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 963  : 
; 964  : 		if (_Whereptr == this->_Mylast())

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Whereptr$[rbp], rax
	jne	SHORT $LN4@Emplace_re

; 965  : 			{	// at back, provide strong guarantee
; 966  : 			_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	QWORD PTR tv153[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	r9, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR tv153[rbp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept

; 967  : 			}
; 968  : 		else

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 969  : 			{	// provide basic guarantee
; 970  : 			_Umove(this->_Myfirst(), _Whereptr, _Newvec);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	r9, QWORD PTR _Newvec$[rbp]
	mov	r8, QWORD PTR _Whereptr$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z ; std::vector<device *,std::allocator<device *> >::_Umove

; 971  : 			_Constructed_first = _Newvec;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	QWORD PTR tv176[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rcx, QWORD PTR tv176[rbp]
	mov	r9, rcx
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z ; std::vector<device *,std::allocator<device *> >::_Umove
	npad	1
$LN5@Emplace_re:
	jmp	SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);
; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);
; 977  : 		_RERAISE;
; 978  : 		_CATCH_END
; 979  : 
; 980  : 		_Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rbp]
	mov	r8, QWORD PTR _Newsize$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z ; std::vector<device *,std::allocator<device *> >::_Change_array

; 981  : 		return (this->_Myfirst() + _Whereoff);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]

; 982  : 		}

	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereoff$ = 8
_Al$ = 40
_Oldsize$ = 72
_Newsize$ = 104
_Newcapacity$ = 136
_Newvec$ = 168
_Constructed_last$ = 200
_Constructed_first$ = 232
$T1 = 456
tv207 = 472
tv176 = 472
tv153 = 472
this$ = 512
_Whereptr$ = 520
<_Val_0>$ = 528
?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA PROC ; `std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>'::`1'::catch$0

; 973  : 			}
; 974  : 		_CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z$0:

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);

	mov	r8, QWORD PTR _Constructed_last$[rbp]
	mov	rdx, QWORD PTR _Constructed_first$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Destroy

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);
; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z ; std::allocator<device *>::deallocate

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);
; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);
; 977  : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);
; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);
; 977  : 		_RERAISE;
; 978  : 		_CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA ENDP ; `std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Whereoff$ = 8
_Al$ = 40
_Oldsize$ = 72
_Newsize$ = 104
_Newcapacity$ = 136
_Newvec$ = 168
_Constructed_last$ = 200
_Constructed_first$ = 232
$T1 = 456
tv207 = 472
tv176 = 472
tv153 = 472
this$ = 512
_Whereptr$ = 520
<_Val_0>$ = 528
?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA PROC ; `std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>'::`1'::catch$0

; 974  : 		_CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z$0:

; 975  : 		_Destroy(_Constructed_first, _Constructed_last);

	mov	r8, QWORD PTR _Constructed_last$[rbp]
	mov	rdx, QWORD PTR _Constructed_first$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Destroy

; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z ; std::allocator<device *>::deallocate

; 977  : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 978  : 		_CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z@4HA ENDP ; `std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<device *> >::construct<device *,device * const &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ; std::forward<device * const &>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))
; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<device *> >::construct<device *,device * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z PROC ; std::_Unfancy<device *>, COMDAT

; 345  : 	{	// do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__122CF1B0_xstddef
	call	__CheckForDebuggerJustMyCode

; 346  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]

; 347  : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z ENDP ; std::_Unfancy<device *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z
_TEXT	SEGMENT
_Result$ = 8
tv142 = 216
tv89 = 216
tv64 = 216
tv67 = 224
this$ = 272
<_Val_0>$ = 280
??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z PROC ; std::vector<device *,std::allocator<device *> >::_Emplace_back_with_unused_capacity<device * const &>, COMDAT

; 900  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 901  : 			// pre: _Has_unused_capacity()
; 902  : 		_Alty_traits::construct(this->_Getal(), _Unfancy(this->_Mylast()), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ; std::forward<device * const &>
	mov	QWORD PTR tv64[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@PEAVdevice@@@std@@YAPEAPEAVdevice@@PEAPEAV1@@Z ; std::_Unfancy<device *>
	mov	QWORD PTR tv67[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv67[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@PEAVdevice@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SAXAEAV?$allocator@PEAVdevice@@@1@QEAPEAVdevice@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<device *> >::construct<device *,device * const &>

; 903  : 		_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	QWORD PTR tv89[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rcx, QWORD PTR tv89[rbp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Orphan_range

; 904  : 		_Ty& _Result = *this->_Mylast();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Result$[rbp], rax

; 905  : 		++this->_Mylast();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	QWORD PTR tv142[rbp], rax
	mov	rax, QWORD PTR tv142[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	rcx, QWORD PTR tv142[rbp]
	mov	QWORD PTR [rcx], rax

; 906  : #if _HAS_CXX17
; 907  : 		return (_Result);
; 908  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 909  : 		(void)_Result;
; 910  : #endif /* _HAS_CXX17 */
; 911  : 		}

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Emplace_back_with_unused_capacity<device * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z
_TEXT	SEGMENT
$T1 = 200
_Arg$ = 256
??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z PROC ; std::forward<device * const &>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__5ECFF36E_type_traits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rbp]

; 1575 : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ENDP ; std::forward<device * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z
_TEXT	SEGMENT
_Result$ = 8
tv74 = 216
this$ = 256
<_Val_0>$ = 264
??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z PROC ; std::vector<device *,std::allocator<device *> >::emplace_back<device * const &>, COMDAT

; 916  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 917  : 		if (_Has_unused_capacity())

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ ; std::vector<device *,std::allocator<device *> >::_Has_unused_capacity
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@emplace_ba

; 918  : 			{
; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ; std::forward<device * const &>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_back_with_unused_capacity@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAA@AEBQEAVdevice@@@Z ; std::vector<device *,std::allocator<device *> >::_Emplace_back_with_unused_capacity<device * const &>
	jmp	SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVdevice@@@std@@YAAEBQEAVdevice@@AEBQEAV1@@Z ; std::forward<device * const &>
	mov	QWORD PTR tv74[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rcx, QWORD PTR tv74[rbp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_reallocate@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<device *,std::allocator<device *> >::_Emplace_reallocate<device * const &>
	mov	QWORD PTR _Result$[rbp], rax
$LN1@emplace_ba:

; 923  : #if _HAS_CXX17
; 924  : 		return (_Result);
; 925  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 926  : 		(void)_Result;
; 927  : #endif /* _HAS_CXX17 */
; 928  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z ENDP ; std::vector<device *,std::allocator<device *> >::emplace_back<device * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z
_TEXT	SEGMENT
this$ = 224
cpu$ = 232
ppu$ = 240
apu$ = 248
?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z PROC	; fastclock::setdevices, COMDAT

; 85   : void fastclock::setdevices(device *cpu, device *ppu, device *apu) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode

; 86   : 	this->cpudevice = cpu;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR cpu$[rbp]
	mov	QWORD PTR [rax], rcx

; 87   : 	this->ppudevice = ppu;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR ppu$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 88   : 	this->apudevice = apu;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR apu$[rbp]
	mov	QWORD PTR [rax+16], rcx

; 89   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?setdevices@fastclock@@QEAAXPEAVdevice@@00@Z ENDP	; fastclock::setdevices
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?run@fastclock@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?run@fastclock@@QEAAXXZ PROC				; fastclock::run, COMDAT

; 109  : void fastclock::run() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@run:

; 110  : 	// make it all run.
; 111  : 	while (1) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN3@run

; 112  : 		step();

	mov	rcx, QWORD PTR this$[rbp]
	call	?step@fastclock@@QEAAXXZ		; fastclock::step

; 113  : 	}

	jmp	SHORT $LN2@run
$LN3@run:

; 114  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?run@fastclock@@QEAAXXZ ENDP				; fastclock::run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?step@fastclock@@QEAAXXZ
_TEXT	SEGMENT
dmabyte$ = 4
actualcputicks$ = 36
tv88 = 248
tv177 = 256
__$ArrayPad$ = 264
this$ = 304
?step@fastclock@@QEAAXXZ PROC				; fastclock::step, COMDAT

; 91   : void fastclock::step() {

$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode

; 92   : 	//  run cpu 1 step.
; 93   : 	byte dmabyte;
; 94   : 	if (this->cpudevice == NULL) return;

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN4@step
	jmp	$LN1@step
$LN4@step:

; 95   : 	if (this->cpudevice->in_dma_mode) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	$LN5@step
$LN2@step:

; 96   : 		while (this->cpudevice->in_dma_mode) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	$LN3@step

; 97   : 			this->cpudevice->dma(&dmabyte, false, false);

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR dmabyte$[rbp]
	call	QWORD PTR [rax+8]

; 98   : 			this->ppudevice->dma(&dmabyte, true, cpudevice->dma_start);

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	mov	QWORD PTR tv88[rbp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv177[rbp], rcx
	movzx	r9d, BYTE PTR [rax+37]
	mov	r8b, 1
	lea	rdx, QWORD PTR dmabyte$[rbp]
	mov	rax, QWORD PTR tv88[rbp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv177[rbp]
	call	QWORD PTR [rax+8]

; 99   : 			cpudevice->dma_start = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	BYTE PTR [rax+37], 0

; 100  : 			this->cpudevice->rundevice(1);

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	call	QWORD PTR [rax]

; 101  : 		}

	jmp	$LN2@step
$LN3@step:

; 102  : 		this->ppudevice->rundevice(1536);

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1536				; 00000600H
	call	QWORD PTR [rax]
$LN5@step:

; 103  : 	}
; 104  : 	int actualcputicks = this->cpudevice->rundevice(1);	

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	call	QWORD PTR [rax]
	mov	DWORD PTR actualcputicks$[rbp], eax

; 105  : 	if (this->ppudevice != NULL) this->ppudevice->rundevice(actualcputicks);

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN6@step
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR actualcputicks$[rbp]
	call	QWORD PTR [rax]
$LN6@step:

; 106  : 	if (this->apudevice != NULL) this->apudevice->rundevice(actualcputicks);

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@step
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR actualcputicks$[rbp]
	call	QWORD PTR [rax]
$LN7@step:
$LN1@step:

; 107  : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?step@fastclock@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?step@fastclock@@QEAAXXZ ENDP				; fastclock::step
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ??1fastclock@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1fastclock@@QEAA@XZ PROC				; fastclock::~fastclock, COMDAT

; 82   : fastclock::~fastclock() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1

; 83   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1fastclock@@QEAA@XZ ENDP				; fastclock::~fastclock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ??0fastclock@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0fastclock@@QEAA@XZ PROC				; fastclock::fastclock, COMDAT

; 79   : fastclock::fastclock() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode

; 80   : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0fastclock@@QEAA@XZ ENDP				; fastclock::fastclock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?run@clock@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?run@clock@@QEAAXXZ PROC				; clock::run, COMDAT

; 71   : void clock::run() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@run:

; 72   : 	// make it all run.
; 73   : 	while (1) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN3@run

; 74   : 		step();

	mov	rcx, QWORD PTR this$[rbp]
	call	?step@clock@@QEAAXXZ			; clock::step

; 75   : 	}

	jmp	SHORT $LN2@run
$LN3@run:

; 76   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?run@clock@@QEAAXXZ ENDP				; clock::run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?step@clock@@QEAAXXZ
_TEXT	SEGMENT
cticks$ = 4
maxticks$ = 36
dmadevice$ = 72
<range>$L0$4 = 104
<begin>$L0$5 = 136
<end>$L0$6 = 168
device$7 = 200
dmabyte$ = 228
<range>$L1$8 = 264
<begin>$L1$9 = 296
<end>$L1$10 = 328
device$11 = 360
<range>$L2$12 = 392
<begin>$L2$13 = 424
<end>$L2$14 = 456
device$15 = 488
resync$ = 516
<range>$L3$16 = 552
<begin>$L3$17 = 584
<end>$L3$18 = 616
device$19 = 648
<range>$L4$20 = 680
<begin>$L4$21 = 712
<end>$L4$22 = 744
device$23 = 776
tv181 = 1176
__$ArrayPad$ = 1184
this$ = 1232
?step@clock@@QEAAXXZ PROC				; clock::step, COMDAT

; 17   : void clock::step() {

$LN28:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1240				; 000004d8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 310				; 00000136H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1272]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode

; 18   : 	int cticks;
; 19   : 	int	maxticks = 0;

	mov	DWORD PTR maxticks$[rbp], 0

; 20   : 
; 21   : 	// get device in dma mode.
; 22   : 	device *dmadevice = nullptr;

	mov	QWORD PTR dmadevice$[rbp], 0

; 23   : 	for (auto device : this->devices) if (device->in_dma_mode) dmadevice = device;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L0$4[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$4[rbp]
	call	?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L0$5[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$4[rbp]
	call	?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
	mov	QWORD PTR <end>$L0$6[rbp], rax
	jmp	SHORT $LN4@step
$LN2@step:
	mov	rax, QWORD PTR <begin>$L0$5[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L0$5[rbp], rax
$LN4@step:
	mov	rax, QWORD PTR <end>$L0$6[rbp]
	cmp	QWORD PTR <begin>$L0$5[rbp], rax
	je	SHORT $LN3@step
	mov	rax, QWORD PTR <begin>$L0$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR device$7[rbp], rax
	mov	rax, QWORD PTR device$7[rbp]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	SHORT $LN19@step
	mov	rax, QWORD PTR device$7[rbp]
	mov	QWORD PTR dmadevice$[rbp], rax
$LN19@step:

; 24   : 
; 25   : 	// DMA buffer.
; 26   : 	byte dmabyte;

	jmp	SHORT $LN2@step
$LN3@step:

; 27   : 
; 28   : 	// execute one step of devices.. may be multiple clockticks to complete.
; 29   : 	for (auto device : this->devices) {

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L1$8[rbp], rax
	mov	rcx, QWORD PTR <range>$L1$8[rbp]
	call	?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L1$9[rbp], rax
	mov	rcx, QWORD PTR <range>$L1$8[rbp]
	call	?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
	mov	QWORD PTR <end>$L1$10[rbp], rax
	jmp	SHORT $LN7@step
$LN5@step:
	mov	rax, QWORD PTR <begin>$L1$9[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L1$9[rbp], rax
$LN7@step:
	mov	rax, QWORD PTR <end>$L1$10[rbp]
	cmp	QWORD PTR <begin>$L1$9[rbp], rax
	je	$LN6@step
	mov	rax, QWORD PTR <begin>$L1$9[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR device$11[rbp], rax

; 30   : 		device->ticker--;

	mov	rax, QWORD PTR device$11[rbp]
	mov	eax, DWORD PTR [rax+24]
	dec	eax
	mov	rcx, QWORD PTR device$11[rbp]
	mov	DWORD PTR [rcx+24], eax

; 31   : 		if (!device->ticker) {

	mov	rax, QWORD PTR device$11[rbp]
	cmp	DWORD PTR [rax+24], 0
	jne	$LN20@step

; 32   : 			// check dma
; 33   : 			if (dmadevice == device) {

	mov	rax, QWORD PTR device$11[rbp]
	cmp	QWORD PTR dmadevice$[rbp], rax
	jne	$LN22@step

; 34   : 				device->dma(&dmabyte, false, device->dma_start);

	mov	rax, QWORD PTR device$11[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR device$11[rbp]
	movzx	r9d, BYTE PTR [rcx+37]
	xor	r8d, r8d
	lea	rdx, QWORD PTR dmabyte$[rbp]
	mov	rcx, QWORD PTR device$11[rbp]
	call	QWORD PTR [rax+8]

; 35   : 				for (auto device : this->devices) if (device != dmadevice) device->dma(&dmabyte, true, device->dma_start);

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L2$12[rbp], rax
	mov	rcx, QWORD PTR <range>$L2$12[rbp]
	call	?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L2$13[rbp], rax
	mov	rcx, QWORD PTR <range>$L2$12[rbp]
	call	?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
	mov	QWORD PTR <end>$L2$14[rbp], rax
	jmp	SHORT $LN10@step
$LN8@step:
	mov	rax, QWORD PTR <begin>$L2$13[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L2$13[rbp], rax
$LN10@step:
	mov	rax, QWORD PTR <end>$L2$14[rbp]
	cmp	QWORD PTR <begin>$L2$13[rbp], rax
	je	SHORT $LN9@step
	mov	rax, QWORD PTR <begin>$L2$13[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR device$15[rbp], rax
	mov	rax, QWORD PTR dmadevice$[rbp]
	cmp	QWORD PTR device$15[rbp], rax
	je	SHORT $LN23@step
	mov	rax, QWORD PTR device$15[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR device$15[rbp]
	movzx	r9d, BYTE PTR [rcx+37]
	mov	r8b, 1
	lea	rdx, QWORD PTR dmabyte$[rbp]
	mov	rcx, QWORD PTR device$15[rbp]
	call	QWORD PTR [rax+8]
$LN23@step:

; 36   : 				device->dma_start = false;

	jmp	SHORT $LN8@step
$LN9@step:
	mov	rax, QWORD PTR device$11[rbp]
	mov	BYTE PTR [rax+37], 0
$LN22@step:

; 37   : 			}
; 38   : 			device->ticker = device->tick_rate;

	mov	rax, QWORD PTR device$11[rbp]
	mov	rcx, QWORD PTR device$11[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax+24], ecx

; 39   : 			cticks = device->rundevice(1);	// always run one tick. problem is.. not all device do 1 tick so we always need to sync afterwards.

	mov	rax, QWORD PTR device$11[rbp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR device$11[rbp]
	call	QWORD PTR [rax]
	mov	DWORD PTR cticks$[rbp], eax

; 40   : 			device->ticksdone += cticks;

	mov	rax, QWORD PTR device$11[rbp]
	mov	eax, DWORD PTR [rax+32]
	add	eax, DWORD PTR cticks$[rbp]
	mov	rcx, QWORD PTR device$11[rbp]
	mov	DWORD PTR [rcx+32], eax

; 41   : 			if (cticks > maxticks) maxticks = cticks;

	mov	eax, DWORD PTR maxticks$[rbp]
	cmp	DWORD PTR cticks$[rbp], eax
	jle	SHORT $LN24@step
	mov	eax, DWORD PTR cticks$[rbp]
	mov	DWORD PTR maxticks$[rbp], eax
$LN24@step:

; 42   : 			device->tickstodo += cticks;	// 1/2 of todo.		(negative is good, it means we are done, 0 is best, means we are synced!)

	mov	rax, QWORD PTR device$11[rbp]
	mov	eax, DWORD PTR [rax+28]
	add	eax, DWORD PTR cticks$[rbp]
	mov	rcx, QWORD PTR device$11[rbp]
	mov	DWORD PTR [rcx+28], eax
$LN20@step:

; 43   : 		}
; 44   : 		else {
; 45   : 			// sleeper device.
; 46   : 			//device->tickstodo++;	// we sleep. therefor we needed to catch up (1 tick away)
; 47   : 			//device->ticksdone++;		// count those clocks as well!
; 48   : 		}
; 49   : 	}

	jmp	$LN5@step
$LN6@step:

; 50   : 	// one device has done something maximal. we compute this to all devices.
; 51   : 	bool	resync = true;

	mov	BYTE PTR resync$[rbp], 1
$LN11@step:

; 52   : 	while (resync) {

	movzx	eax, BYTE PTR resync$[rbp]
	test	eax, eax
	je	$LN12@step

; 53   : 		resync = false;

	mov	BYTE PTR resync$[rbp], 0

; 54   : 		for (auto device : this->devices) {

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L3$16[rbp], rax
	mov	rcx, QWORD PTR <range>$L3$16[rbp]
	call	?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L3$17[rbp], rax
	mov	rcx, QWORD PTR <range>$L3$16[rbp]
	call	?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
	mov	QWORD PTR <end>$L3$18[rbp], rax
	jmp	SHORT $LN15@step
$LN13@step:
	mov	rax, QWORD PTR <begin>$L3$17[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L3$17[rbp], rax
$LN15@step:
	mov	rax, QWORD PTR <end>$L3$18[rbp]
	cmp	QWORD PTR <begin>$L3$17[rbp], rax
	je	SHORT $LN14@step
	mov	rax, QWORD PTR <begin>$L3$17[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR device$19[rbp], rax

; 55   : 			device->tickstodo -= maxticks;	// sync clock to all devices.

	mov	rax, QWORD PTR device$19[rbp]
	mov	ecx, DWORD PTR maxticks$[rbp]
	mov	eax, DWORD PTR [rax+28]
	sub	eax, ecx
	mov	rcx, QWORD PTR device$19[rbp]
	mov	DWORD PTR [rcx+28], eax

; 56   : 		}

	jmp	SHORT $LN13@step
$LN14@step:

; 57   : 		maxticks = 0;

	mov	DWORD PTR maxticks$[rbp], 0

; 58   : 		for (auto device : this->devices) {

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L4$20[rbp], rax
	mov	rcx, QWORD PTR <range>$L4$20[rbp]
	call	?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L4$21[rbp], rax
	mov	rcx, QWORD PTR <range>$L4$20[rbp]
	call	?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
	mov	QWORD PTR <end>$L4$22[rbp], rax
	jmp	SHORT $LN18@step
$LN16@step:
	mov	rax, QWORD PTR <begin>$L4$21[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L4$21[rbp], rax
$LN18@step:
	mov	rax, QWORD PTR <end>$L4$22[rbp]
	cmp	QWORD PTR <begin>$L4$21[rbp], rax
	je	$LN17@step
	mov	rax, QWORD PTR <begin>$L4$21[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR device$23[rbp], rax

; 59   : 			if (device->tickstodo <= -device->tick_rate) {

	mov	rax, QWORD PTR device$23[rbp]
	mov	eax, DWORD PTR [rax+16]
	neg	eax
	mov	rcx, QWORD PTR device$23[rbp]
	cmp	DWORD PTR [rcx+28], eax
	jg	$LN25@step

; 60   : 				// we are getting seriously desynced! resync
; 61   : 				cticks = device->rundevice(-device->tickstodo);

	mov	rax, QWORD PTR device$23[rbp]
	mov	eax, DWORD PTR [rax+28]
	neg	eax
	mov	rcx, QWORD PTR device$23[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv181[rbp], rcx
	mov	edx, eax
	mov	rcx, QWORD PTR device$23[rbp]
	mov	rax, QWORD PTR tv181[rbp]
	call	QWORD PTR [rax]
	mov	DWORD PTR cticks$[rbp], eax

; 62   : 				device->ticksdone += cticks;

	mov	rax, QWORD PTR device$23[rbp]
	mov	eax, DWORD PTR [rax+32]
	add	eax, DWORD PTR cticks$[rbp]
	mov	rcx, QWORD PTR device$23[rbp]
	mov	DWORD PTR [rcx+32], eax

; 63   : 				if (cticks + device->tickstodo > maxticks) maxticks = cticks + device->tickstodo;

	mov	rax, QWORD PTR device$23[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	ecx, DWORD PTR cticks$[rbp]
	add	ecx, eax
	mov	eax, ecx
	cmp	eax, DWORD PTR maxticks$[rbp]
	jle	SHORT $LN26@step
	mov	rax, QWORD PTR device$23[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	ecx, DWORD PTR cticks$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR maxticks$[rbp], eax
$LN26@step:

; 64   : 				device->tickstodo += cticks;

	mov	rax, QWORD PTR device$23[rbp]
	mov	eax, DWORD PTR [rax+28]
	add	eax, DWORD PTR cticks$[rbp]
	mov	rcx, QWORD PTR device$23[rbp]
	mov	DWORD PTR [rcx+28], eax

; 65   : 				resync = true;

	mov	BYTE PTR resync$[rbp], 1
$LN25@step:

; 66   : 			}
; 67   : 		}

	jmp	$LN16@step
$LN17@step:

; 68   : 	}

	jmp	$LN11@step
$LN12@step:

; 69   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?step@clock@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1208]
	pop	rdi
	pop	rbp
	ret	0
?step@clock@@QEAAXXZ ENDP				; clock::step
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?registerdevice@clock@@QEAAXPEAVdevice@@@Z
_TEXT	SEGMENT
this$ = 224
adevice$ = 232
?registerdevice@clock@@QEAAXPEAVdevice@@@Z PROC		; clock::registerdevice, COMDAT

; 12   : void clock::registerdevice(device *adevice) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode

; 13   : 	this->devices.push_back(adevice);

	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR adevice$[rbp]
	mov	rcx, rax
	call	?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z ; std::vector<device *,std::allocator<device *> >::push_back

; 14   : 	adevice->ticker = adevice->tick_rate;

	mov	rax, QWORD PTR adevice$[rbp]
	mov	rcx, QWORD PTR adevice$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax+24], ecx

; 15   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?registerdevice@clock@@QEAAXPEAVdevice@@@Z ENDP		; clock::registerdevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ??1clock@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1clock@@QEAA@XZ PROC					; clock::~clock, COMDAT

; 9    : clock::~clock() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1

; 10   : }

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ ; std::vector<device *,std::allocator<device *> >::~vector<device *,std::allocator<device *> >
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1clock@@QEAA@XZ ENDP					; clock::~clock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ??0clock@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0clock@@QEAA@XZ PROC					; clock::clock, COMDAT

; 5    : clock::clock() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ ; std::vector<device *,std::allocator<device *> >::vector<device *,std::allocator<device *> >

; 6    : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0clock@@QEAA@XZ ENDP					; clock::clock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z
_TEXT	SEGMENT
_Lock$ = 4
_Pnext$ = 40
$T4 = 264
__$ArrayPad$ = 280
this$ = 320
_First$ = 328
_Last$ = 336
?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z PROC ; std::vector<device *,std::allocator<device *> >::_Orphan_range, COMDAT

; 1936 : 		{	// orphan iterators within specified (inclusive) range

$LN10:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	QWORD PTR $T4[rbp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1937 : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1938 : 
; 1939 : 		const_iterator ** _Pnext = reinterpret_cast<const_iterator **>(this->_Getpfirst());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getpfirst
	mov	QWORD PTR _Pnext$[rbp], rax

; 1940 : 
; 1941 : 		if (_Pnext)

	cmp	QWORD PTR _Pnext$[rbp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1942 : 			{
; 1943 : 			while (*_Pnext)

	mov	rax, QWORD PTR _Pnext$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN4@Orphan_ran

; 1944 : 				{
; 1945 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _First$[rbp]
	cmp	QWORD PTR [rax+16], rcx
	jb	SHORT $LN7@Orphan_ran
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	cmp	QWORD PTR _Last$[rbp], rax
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1946 : 					{	// skip the iterator
; 1947 : 					_Pnext = reinterpret_cast<const_iterator **>((*_Pnext)->_Getpnext());

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	QWORD PTR _Pnext$[rbp], rax

; 1948 : 					}
; 1949 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1950 : 					{	// orphan the iterator
; 1951 : 					(*_Pnext)->_Clrcont();

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Clrcont@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Clrcont

; 1952 : 					*_Pnext = *reinterpret_cast<const_iterator **>((*_Pnext)->_Getpnext());

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	rcx, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN6@Orphan_ran:

; 1953 : 					}
; 1954 : 				}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1955 : 			}
; 1956 : 		}

	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 4
_Pnext$ = 40
$T4 = 264
__$ArrayPad$ = 280
this$ = 320
_First$ = 328
_Last$ = 336
?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA PROC ; `std::vector<device *,std::allocator<device *> >::_Orphan_range'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA ENDP ; `std::vector<device *,std::allocator<device *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 4
_Pnext$ = 40
$T4 = 264
__$ArrayPad$ = 280
this$ = 320
_First$ = 328
_Last$ = 336
?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA PROC ; `std::vector<device *,std::allocator<device *> >::_Orphan_range'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBAXPEAPEAVdevice@@0@Z@4HA ENDP ; `std::vector<device *,std::allocator<device *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ PROC ; std::vector<device *,std::allocator<device *> >::_Xlength, COMDAT

; 1925 : 		{	// report a length_error

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1926 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1927 : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlength@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@CAXXZ ENDP ; std::vector<device *,std::allocator<device *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
tv131 = 192
tv82 = 192
tv138 = 200
this$ = 240
?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ PROC ; std::vector<device *,std::allocator<device *> >::_Tidy, COMDAT

; 1910 : 		{	// free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1911 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Orphan_all

; 1912 : 
; 1913 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1914 : 			{	// destroy and deallocate old array
; 1915 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Destroy

; 1916 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::capacity
	mov	QWORD PTR tv131[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	QWORD PTR tv138[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	rcx, QWORD PTR tv131[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv138[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z ; std::allocator<device *>::deallocate

; 1917 : 
; 1918 : 			this->_Myfirst() = pointer();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 1919 : 			this->_Mylast() = pointer();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	QWORD PTR [rax], 0

; 1920 : 			this->_Myend() = pointer();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1921 : 			}
; 1922 : 		}

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ ENDP ; std::vector<device *,std::allocator<device *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z
_TEXT	SEGMENT
tv161 = 192
tv153 = 192
tv131 = 192
tv82 = 192
tv138 = 200
this$ = 240
_Newvec$ = 248
_Newsize$ = 256
_Newcapacity$ = 264
?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z PROC ; std::vector<device *,std::allocator<device *> >::_Change_array, COMDAT

; 1895 : 		{	// orphan all iterators, discard old array, acquire new array

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1896 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Orphan_all

; 1897 : 
; 1898 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN2@Change_arr

; 1899 : 			{	// destroy and deallocate old array
; 1900 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z ; std::vector<device *,std::allocator<device *> >::_Destroy

; 1901 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::capacity
	mov	QWORD PTR tv131[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	QWORD PTR tv138[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	rcx, QWORD PTR tv131[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv138[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z ; std::allocator<device *>::deallocate
$LN2@Change_arr:

; 1902 : 			}
; 1903 : 
; 1904 : 		this->_Myfirst() = _Newvec;

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1905 : 		this->_Mylast() = _Newvec + _Newsize;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newsize$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR tv153[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	mov	rcx, QWORD PTR tv153[rbp]
	mov	QWORD PTR [rax], rcx

; 1906 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newcapacity$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR tv161[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
	mov	rcx, QWORD PTR tv161[rbp]
	mov	QWORD PTR [rax], rcx

; 1907 : 		}

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?_Change_array@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXQEAPEAVdevice@@_K1@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 8
_Geometric$ = 40
tv67 = 248
this$ = 288
_Newsize$ = 296
?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<device *,std::allocator<device *> >::_Calculate_growth, COMDAT

; 1853 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1854 : 		const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::capacity
	mov	QWORD PTR _Oldcapacity$[rbp], rax

; 1855 : 
; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ; std::vector<device *,std::allocator<device *> >::max_size
	mov	QWORD PTR tv67[rbp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv67[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rbp], rax
	jbe	SHORT $LN2@Calculate_

; 1857 : 			{
; 1858 : 			return (_Newsize);	// geometric growth would overflow

	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1859 : 			}
; 1860 : 
; 1861 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rbp], rax

; 1862 : 
; 1863 : 		if (_Geometric < _Newsize)

	mov	rax, QWORD PTR _Newsize$[rbp]
	cmp	QWORD PTR _Geometric$[rbp], rax
	jae	SHORT $LN3@Calculate_

; 1864 : 			{
; 1865 : 			return (_Newsize);	// geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1866 : 			}
; 1867 : 
; 1868 : 		return (_Geometric);	// geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1869 : 		}

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z PROC ; std::vector<device *,std::allocator<device *> >::_Destroy, COMDAT

; 1848 : 		{	// destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@PEAVdevice@@@std@@@std@@YAXPEAPEAVdevice@@0AEAV?$allocator@PEAVdevice@@@0@@Z ; std::_Destroy_range<std::allocator<device *> >

; 1850 : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@0@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_First$ = 264
_Last$ = 272
_Dest$ = 280
?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z PROC ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept, COMDAT

; 1842 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1843 : 		_Umove_if_noexcept1(_First, _Last, _Dest,

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	eax, BYTE PTR $T1[rbp]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Dest$[rbp]
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept1

; 1844 : 			bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1845 : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Umove_if_noexcept@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
__formal$ = 256
?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept1, COMDAT

; 1832 : 		{	// move [_First, _Last) to raw _Dest, using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1833 : 		_Uninitialized_move(_First, _Last, _Dest, this->_Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >

; 1834 : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Umove_if_noexcept1@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXPEAPEAVdevice@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z PROC ; std::vector<device *,std::allocator<device *> >::_Umove, COMDAT

; 1827 : 		{	// move [_First, _Last) to raw _Dest, using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 1828 : 		return (_Uninitialized_move(_First, _Last, _Dest, this->_Getal()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_move@PEAPEAVdevice@@PEAPEAV1@V?$allocator@PEAVdevice@@@std@@@std@@YAPEAPEAVdevice@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVdevice@@@0@@Z ; std::_Uninitialized_move<device * *,device * *,std::allocator<device *> >

; 1829 : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Umove@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAPEAPEAVdevice@@PEAPEAV3@00@Z ENDP ; std::vector<device *,std::allocator<device *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ
_TEXT	SEGMENT
$T1 = 200
tv69 = 216
tv77 = 224
this$ = 272
?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ PROC ; std::vector<device *,std::allocator<device *> >::_Has_unused_capacity, COMDAT

; 1725 : 		{	// micro-optimization for capacity() != size()

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
	npad	1
	mov	QWORD PTR tv69[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	npad	1
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rbp]
	cmp	QWORD PTR [rcx], rax
	je	SHORT $LN3@Has_unused
	mov	DWORD PTR tv77[rbp], 1
	jmp	SHORT $LN4@Has_unused
$LN3@Has_unused:
	mov	DWORD PTR tv77[rbp], 0
$LN4@Has_unused:
	movzx	eax, BYTE PTR tv77[rbp]

; 1727 : 		}

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?_Has_unused_capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEBA_NXZ ENDP ; std::vector<device *,std::allocator<device *> >::_Has_unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
tv69 = 216
this$ = 256
?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ PROC ; std::vector<device *,std::allocator<device *> >::capacity, COMDAT

; 1714 : 		{	// return current length of allocated storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
	npad	1
	mov	QWORD PTR tv69[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	npad	1
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rbp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3

; 1716 : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?capacity@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<device *,std::allocator<device *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
this$ = 320
?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ PROC ; std::vector<device *,std::allocator<device *> >::max_size, COMDAT

; 1708 : 		{	// return maximum possible length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	QWORD PTR $T3[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1709 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	npad	1
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z ; std::_Default_allocator_traits<std::allocator<device *> >::max_size
	npad	1
	mov	QWORD PTR $T1[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	npad	1
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z	; std::_Min_value<unsigned __int64>
	npad	1
	mov	rax, QWORD PTR [rax]

; 1710 : 			_Alty_traits::max_size(this->_Getal())));
; 1711 : 		}

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<device *,std::allocator<device *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
tv69 = 216
this$ = 256
?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ PROC ; std::vector<device *,std::allocator<device *> >::size, COMDAT

; 1703 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	npad	1
	mov	QWORD PTR tv69[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	npad	1
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rbp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3

; 1705 : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?size@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<device *,std::allocator<device *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ PROC ; std::vector<device *,std::allocator<device *> >::_Unchecked_end, COMDAT

; 1688 : 		{	// return pointer for end of mutable sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1689 : 		return (this->_Mylast());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
	npad	1
	mov	rax, QWORD PTR [rax]

; 1690 : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_end@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ENDP ; std::vector<device *,std::allocator<device *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ PROC ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin, COMDAT

; 1678 : 		{	// return pointer for beginning of mutable sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1679 : 		return (this->_Myfirst());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
	npad	1
	mov	rax, QWORD PTR [rax]

; 1680 : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_begin@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAPEAPEAVdevice@@XZ ENDP ; std::vector<device *,std::allocator<device *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z PROC ; std::vector<device *,std::allocator<device *> >::push_back, COMDAT

; 931  : 		{	// insert element at end, provide strong guarantee

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 932  : 		emplace_back(_Val);

	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$emplace_back@AEBQEAVdevice@@@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@AEBQEAVdevice@@@Z ; std::vector<device *,std::allocator<device *> >::emplace_back<device * const &>

; 933  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAAXAEBQEAVdevice@@@Z ENDP ; std::vector<device *,std::allocator<device *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ PROC ; std::vector<device *,std::allocator<device *> >::~vector<device *,std::allocator<device *> >, COMDAT

; 893  : 		{	// destroy the object

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 894  : 		_Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@AEAAXXZ ; std::vector<device *,std::allocator<device *> >::_Tidy
	npad	1

; 895  : 		}

	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::~_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ ENDP ; std::vector<device *,std::allocator<device *> >::~vector<device *,std::allocator<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ PROC ; std::vector<device *,std::allocator<device *> >::vector<device *,std::allocator<device *> >, COMDAT

; 651  : 		{	// construct empty vector

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 650  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >
	npad	1

; 652  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@QEAA@XZ ENDP ; std::vector<device *,std::allocator<device *> >::vector<device *,std::allocator<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second, COMDAT

; 306  : 		{	// return const reference to second

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 307  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rbp]

; 308  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second, COMDAT

; 301  : 		{	// return reference to second

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 302  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rbp]

; 303  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first, COMDAT

; 296  : 		{	// return const reference to first

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 297  : 		return (*this);

	mov	rax, QWORD PTR this$[rbp]

; 298  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first, COMDAT

; 291  : 		{	// return reference to first

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 292  : 		return (*this);

	mov	rax, QWORD PTR this$[rbp]

; 293  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<device *> >::_Vector_val<std::_Simple_types<device *> >, COMDAT

; 392  : 		{	// initialize values

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12

; 389  : 		: _Myfirst(),

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0

; 390  : 		_Mylast(),

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0

; 391  : 		_Myend()

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0

; 393  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<device *> >::_Vector_val<std::_Simple_types<device *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend, COMDAT

; 600  : 		{	// return const reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 601  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1
	add	rax, 24

; 602  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend, COMDAT

; 595  : 		{	// return reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 596  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1
	add	rax, 24

; 597  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast, COMDAT

; 590  : 		{	// return const reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 591  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1
	add	rax, 16

; 592  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast, COMDAT

; 585  : 		{	// return reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 586  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1
	add	rax, 16

; 587  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst, COMDAT

; 580  : 		{	// return const reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 581  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1
	add	rax, 8

; 582  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBQEAPEAVdevice@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst, COMDAT

; 575  : 		{	// return reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 576  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1
	add	rax, 8

; 577  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAPEAVdevice@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data, COMDAT

; 559  : 		{	// return const reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 560  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second
	npad	1

; 561  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data, COMDAT

; 554  : 		{	// return reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 555  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_second
	npad	1

; 556  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal, COMDAT

; 549  : 		{	// return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 550  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first
	npad	1

; 551  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVdevice@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal, COMDAT

; 544  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 545  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Get_first
	npad	1

; 546  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Orphan_all, COMDAT

; 534  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 535  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 536  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy, COMDAT

; 523  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 524  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	npad	1

; 525  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getpfirst, COMDAT

; 518  : 		{	// get address of iterator chain

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 519  : 		return (_Get_data()._Getpfirst());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	mov	rcx, rax
	call	?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 520  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Proxy_allocator$ = 4
__$ArrayPad$ = 216
this$ = 256
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy, COMDAT

; 509  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 510  : 		_Alproxy _Proxy_allocator(_Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Proxy_allocator$[rbp]
	call	??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><device *>

; 511  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Orphan_all

; 512  : 		_Alproxy_traits::destroy(_Proxy_allocator, _Myproxy());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Proxy_allocator$[rbp]
	call	??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 513  : 		_Deallocate_plain(_Proxy_allocator, _Myproxy());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Proxy_allocator$[rbp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>

; 514  : 		_Myproxy() = nullptr;

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 515  : 		}

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Proxy_allocator$ = 4
$T4 = 232
tv91 = 264
tv79 = 264
tv70 = 264
__$ArrayPad$ = 272
this$ = 320
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy, COMDAT

; 501  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 502  : 		_Alproxy _Proxy_allocator(_Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVdevice@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Proxy_allocator$[rbp]
	call	??$?0PEAVdevice@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVdevice@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><device *>

; 503  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Proxy_allocator$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rbp]
	mov	QWORD PTR [rax], rcx

; 504  : 		_Alproxy_traits::construct(_Proxy_allocator, _Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T4[rbp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv79[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
	mov	rcx, QWORD PTR tv79[rbp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Proxy_allocator$[rbp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 505  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Get_data
	mov	rcx, rax
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<device *> > >
	mov	QWORD PTR tv91[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv91[rbp]
	mov	QWORD PTR [rax], rcx

; 506  : 		}

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::~_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >, COMDAT

; 460  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 461  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Free_proxy
	npad	1

; 462  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::~_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
this$ = 256
??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >, COMDAT

; 446  : 		{	// default construct allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__FF7D7337_vector
	call	__CheckForDebuggerJustMyCode

; 445  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVdevice@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVdevice@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1>::_Compressed_pair<std::allocator<device *>,std::_Vector_val<std::_Simple_types<device *> >,1><>

; 447  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Alloc_proxy

; 448  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@PEAVdevice@@V?$allocator@PEAVdevice@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >::_Vector_alloc<std::_Vec_base_types<device *,std::allocator<device *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<device *> >::max_size, COMDAT

; 891  : 		{	// get maximum size

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode
	npad	1

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 893  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVdevice@@@std@@@std@@SA_KAEBV?$allocator@PEAVdevice@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<device *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z PROC ; std::allocator<device *>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 998  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@PEAVdevice@@@std@@QEAAPEAPEAVdevice@@_K@Z ENDP ; std::allocator<device *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z PROC ; std::allocator<device *>::deallocate, COMDAT

; 990  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 993  : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@PEAVdevice@@@std@@QEAAXQEAPEAVdevice@@_K@Z ENDP ; std::allocator<device *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@PEAVdevice@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0?$allocator@PEAVdevice@@@std@@QEAA@XZ PROC		; std::allocator<device *>::allocator<device *>, COMDAT

; 979  : 	constexpr allocator() noexcept

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode
	npad	1

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@PEAVdevice@@@std@@QEAA@XZ ENDP		; std::allocator<device *>::allocator<device *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv65 = 248
_Left$ = 288
_Right$ = 296
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 23   : 	{	// return smaller of _Left and _Right

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	QWORD PTR $T2[rbp], -2
	lea	rcx, OFFSET FLAT:__E53366A2_utility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 24   : 	return (_Right < _Left ? _Right : _Left);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@Min_value
	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR tv65[rbp], rax
	jmp	SHORT $LN4@Min_value
$LN3@Min_value:
	mov	rax, QWORD PTR _Left$[rbp]
	mov	QWORD PTR tv65[rbp], rax
$LN4@Min_value:
	mov	rax, QWORD PTR tv65[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]

; 25   : 	}

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 114  : 	{	// adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 115  : 	_Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rbp]
	mov	QWORD PTR [rcx], rax

; 116  : 
; 117  : 	const uintptr_t * const _Ptr_user = reinterpret_cast<uintptr_t *>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rbp], rax

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 8
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 8
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);

	mov	QWORD PTR _Min_back_shift$[rbp], 16

; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rbp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rbp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 18
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 18
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rax], rcx

; 134  : 	}

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 51   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1CE3C767_xmemory0
	call	__CheckForDebuggerJustMyCode

; 52   : 		return (::operator new(_Bytes));

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??2@YAPEAX_K@Z				; operator new

; 53   : 		}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT

; 186  : 		{	// get address of remaining iterator chain

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 187  : 		return (&_Mynextiter);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8

; 188  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?_Clrcont@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT

; 176  : 		{	// disown owning container

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 177  : 		_Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 178  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Clrcont@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 4
_Pnext$5 = 40
$T6 = 264
__$ArrayPad$ = 280
this$ = 320
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 214  : 	{	// orphan all iterators

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	QWORD PTR $T6[rbp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 215  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 216  : 	if (_Myproxy != nullptr)

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN5@Orphan_all

; 217  : 		{	// proxy allocated, drain it
; 218  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 219  : 
; 220  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$5[rbp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 221  : 			*_Pnext != nullptr; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	rax, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$5[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 222  : 			(*_Pnext)->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 223  : 		_Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 224  : 		}

	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
$LN5@Orphan_all:

; 225  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 226  : 	}

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
$T1 = 200
tv68 = 216
this$ = 256
?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT

; 95   : 		{	// get address of iterator chain

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 96   : 		return (_Myproxy == nullptr ? nullptr : &_Myproxy->_Myfirstiter);

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN3@Getpfirst
	mov	QWORD PTR tv68[rbp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR tv68[rbp], rax
$LN4@Getpfirst:
	mov	rax, QWORD PTR tv68[rbp]

; 97   : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 81   : 		{	// construct childless container

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode

; 80   : 		: _Myproxy(nullptr)

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 82   : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Container_proxy@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0_Container_proxy@std@@QEAA@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT

; 69   : 		{	// construct from pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__CDB00636_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 68   : 		: _Mycont(nullptr), _Myfirstiter(nullptr)

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0

; 70   : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_proxy@std@@QEAA@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
$T1 = 200
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 893  : 		{	// return maximum value

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__B2D003D7_limits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 894  : 		return (LLONG_MAX);

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 895  : 		}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
$T1 = 200
_Size$ = 256
_Where$ = 264
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 185  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__6BC0FD35_vcruntime_new@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 186  :         (void)_Size;
; 187  :         return _Where;

	mov	rax, QWORD PTR _Where$[rbp]

; 188  :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__8EB5A672_clock@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
