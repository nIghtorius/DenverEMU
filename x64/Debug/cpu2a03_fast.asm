; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27050.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__FF24E80D_stdafx@h DB 01H
__84F95A01_denveremu@pch DB 01H
__122CF1B0_xstddef DB 01H
__E53366A2_utility DB 01H
__F2A749D8_streambuf DB 01H
__375B2D08_ostream DB 01H
__548B1832_istream DB 01H
__FB7583FD_xstring DB 01H
__A57BBCE6_stdio@h DB 01H
__D40DD59F_corecrt_stdio_config@h DB 01H
__F017474A_cpu2a03_fast@h DB 01H
__91416480_cpu2a03_fast@cpp DB 01H
__D1FEDD45_ios DB 01H
__5B5D5F1B_wchar@h DB 01H
__BACC91DB_xlocnum DB 01H
__9B0361F4_xiosbase DB 01H
__FD5040F3_system_error DB 01H
__420D52D3_xcall_once@h DB 01H
__244BF7CC_xlocale DB 01H
__223B5856_xfacet DB 01H
__0E7E0F59_memory DB 01H
__A2E616E7_xlocinfo DB 01H
__7A53EED8_ctype@h DB 01H
__C42C8B73_vcruntime_typeinfo@h DB 01H
__F007F164_stdexcept DB 01H
__C334353D_xatomic0@h DB 01H
__1CE3C767_xmemory0 DB 01H
__CDB00636_xutility DB 01H
__7E39D651_iosfwd DB 01H
__BEFE0DB4_string@h DB 01H
__1F77EA16_corecrt_memory@h DB 01H
__7949CB39_exception DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__ACA0BEE6_malloc@h DB 01H
__5ECFF36E_type_traits DB 01H
__B2D003D7_limits DB 01H
__3736D25A_xtgmath@h DB 01H
__824D367B_cmath DB 01H
__D23EE329_cstdlib DB 01H
__AF9067BE_corecrt_math@h DB 01H
__388D9910_stdlib@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QEAA@PEBD@Z		; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	?opc_ora@cpu2a03_fast@@AEAAXE@Z			; cpu2a03_fast::opc_ora
PUBLIC	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z		; cpu2a03_fast::opc_asl
PUBLIC	?opc_and@cpu2a03_fast@@AEAAXE@Z			; cpu2a03_fast::opc_and
PUBLIC	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z		; cpu2a03_fast::opc_rol
PUBLIC	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z		; cpu2a03_fast::opc_ror
PUBLIC	?opc_bit@cpu2a03_fast@@AEAAXE@Z			; cpu2a03_fast::opc_bit
PUBLIC	?opc_xor@cpu2a03_fast@@AEAAXE@Z			; cpu2a03_fast::opc_xor
PUBLIC	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z		; cpu2a03_fast::opc_lsr
PUBLIC	?opc_adc@cpu2a03_fast@@AEAAXE@Z			; cpu2a03_fast::opc_adc
PUBLIC	?opc_sbc@cpu2a03_fast@@AEAAXE@Z			; cpu2a03_fast::opc_sbc
PUBLIC	?opc_dec@cpu2a03_fast@@AEAAEE@Z			; cpu2a03_fast::opc_dec
PUBLIC	?opc_inc@cpu2a03_fast@@AEAAEE@Z			; cpu2a03_fast::opc_inc
PUBLIC	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z		; cpu2a03_fast::opc_ld_
PUBLIC	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z		; cpu2a03_fast::opc_cmp
PUBLIC	?rundevice_internal@cpu2a03_fast@@AEAAHH@Z	; cpu2a03_fast::rundevice_internal
PUBLIC	??0cpu2a03_fast@@QEAA@XZ			; cpu2a03_fast::cpu2a03_fast
PUBLIC	??1cpu2a03_fast@@UEAA@XZ			; cpu2a03_fast::~cpu2a03_fast
PUBLIC	?rundevice@cpu2a03_fast@@UEAAHH@Z		; cpu2a03_fast::rundevice
PUBLIC	?reset@cpu2a03_fast@@QEAAXXZ			; cpu2a03_fast::reset
PUBLIC	?coldboot@cpu2a03_fast@@QEAAXXZ			; cpu2a03_fast::coldboot
PUBLIC	?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z	; cpu2a03_fast::definememorybus
PUBLIC	?pushstack_word@cpu2a03_fast@@QEAAXG@Z		; cpu2a03_fast::pushstack_word
PUBLIC	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z		; cpu2a03_fast::pushstack_byte
PUBLIC	?pullstack_byte@cpu2a03_fast@@QEAAEXZ		; cpu2a03_fast::pullstack_byte
PUBLIC	?pullstack_word@cpu2a03_fast@@QEAAGXZ		; cpu2a03_fast::pullstack_word
PUBLIC	?write@cpu2a03_fast@@UEAAXHHE@Z			; cpu2a03_fast::write
PUBLIC	?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z		; cpu2a03_fast::dma
PUBLIC	?log_register@cpu2a03_fast@@QEAAXXZ		; cpu2a03_fast::log_register
PUBLIC	?set_pc@cpu2a03_fast@@QEAAXG@Z			; cpu2a03_fast::set_pc
PUBLIC	??_Gcpu2a03_fast@@UEAAPEAXI@Z			; cpu2a03_fast::`scalar deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7cpu2a03_fast@@6B@				; cpu2a03_fast::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_C@_0CB@COBPCPJC@Denver?52a03?5CPU?5?$CIfast?5emulation@ ; `string'
PUBLIC	_TI3PEAVruntime_error@std@@
PUBLIC	_CTA3PEAVruntime_error@std@@
PUBLIC	??_R0PEAVruntime_error@std@@@8			; std::runtime_error * `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAVruntime_error@std@@@88
PUBLIC	??_R0PEAVexception@std@@@8			; std::exception * `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAVexception@std@@@88
PUBLIC	??_R0PEAX@8					; void * `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAX@88
PUBLIC	??_C@_0HA@FGLJHMJI@cpu2a03_fast?3?3coldboot?$CI?$CJ?5called@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4cpu2a03_fast@@6B@				; cpu2a03_fast::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVcpu2a03_fast@@@8			; cpu2a03_fast `RTTI Type Descriptor'
PUBLIC	??_R3cpu2a03_fast@@8				; cpu2a03_fast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2cpu2a03_fast@@8				; cpu2a03_fast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@cpu2a03_fast@@8			; cpu2a03_fast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bus_device@@8			; bus_device::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbus_device@@@8				; bus_device `RTTI Type Descriptor'
PUBLIC	??_R3bus_device@@8				; bus_device::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bus_device@@8				; bus_device::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@device@@8				; device::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVdevice@@@8				; device `RTTI Type Descriptor'
PUBLIC	??_R3device@@8					; device::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2device@@8					; device::`RTTI Base Class Array'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	__imp_strcpy_s:PROC
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?get_device_descriptor@device@@QEAAPEADXZ:PROC	; device::get_device_descriptor
EXTRN	??0bus_device@@QEAA@XZ:PROC			; bus_device::bus_device
EXTRN	??1bus_device@@UEAA@XZ:PROC			; bus_device::~bus_device
EXTRN	?read@bus_device@@UEAAEHH@Z:PROC		; bus_device::read
EXTRN	?writememory@bus@@QEAAXHE@Z:PROC		; bus::writememory
EXTRN	?readmemory@bus@@QEAAEH@Z:PROC			; bus::readmemory
EXTRN	?readmemory_as_word@bus@@QEAAGH@Z:PROC		; bus::readmemory_as_word
EXTRN	?readmemory_as_word_wrap@bus@@QEAAGH@Z:PROC	; bus::readmemory_as_word_wrap
EXTRN	?nmi_pulled@bus@@QEAA_NXZ:PROC			; bus::nmi_pulled
EXTRN	?irq_pulled@bus@@QEAA_NXZ:PROC			; bus::irq_pulled
EXTRN	??_Ecpu2a03_fast@@UEAAPEAXI@Z:PROC		; cpu2a03_fast::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+223
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1runtime_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1runtime_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_ora@cpu2a03_fast@@AEAAXE@Z DD imagerel $LN7
	DD	imagerel $LN7+272
	DD	imagerel $unwind$?opc_ora@cpu2a03_fast@@AEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_asl@cpu2a03_fast@@AEAAXG_N@Z DD imagerel $LN13
	DD	imagerel $LN13+443
	DD	imagerel $unwind$?opc_asl@cpu2a03_fast@@AEAAXG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_and@cpu2a03_fast@@AEAAXE@Z DD imagerel $LN7
	DD	imagerel $LN7+272
	DD	imagerel $unwind$?opc_and@cpu2a03_fast@@AEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_rol@cpu2a03_fast@@AEAAXG_N@Z DD imagerel $LN14
	DD	imagerel $LN14+477
	DD	imagerel $unwind$?opc_rol@cpu2a03_fast@@AEAAXG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_ror@cpu2a03_fast@@AEAAXG_N@Z DD imagerel $LN14
	DD	imagerel $LN14+478
	DD	imagerel $unwind$?opc_ror@cpu2a03_fast@@AEAAXG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_bit@cpu2a03_fast@@AEAAXE@Z DD imagerel $LN9
	DD	imagerel $LN9+315
	DD	imagerel $unwind$?opc_bit@cpu2a03_fast@@AEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_xor@cpu2a03_fast@@AEAAXE@Z DD imagerel $LN7
	DD	imagerel $LN7+272
	DD	imagerel $unwind$?opc_xor@cpu2a03_fast@@AEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z DD imagerel $LN13
	DD	imagerel $LN13+441
	DD	imagerel $unwind$?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_adc@cpu2a03_fast@@AEAAXE@Z DD imagerel $LN13
	DD	imagerel $LN13+503
	DD	imagerel $unwind$?opc_adc@cpu2a03_fast@@AEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_sbc@cpu2a03_fast@@AEAAXE@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$?opc_sbc@cpu2a03_fast@@AEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_dec@cpu2a03_fast@@AEAAEE@Z DD imagerel $LN7
	DD	imagerel $LN7+242
	DD	imagerel $unwind$?opc_dec@cpu2a03_fast@@AEAAEE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_inc@cpu2a03_fast@@AEAAEE@Z DD imagerel $LN7
	DD	imagerel $LN7+242
	DD	imagerel $unwind$?opc_inc@cpu2a03_fast@@AEAAEE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z DD imagerel $LN7
	DD	imagerel $LN7+254
	DD	imagerel $unwind$?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?opc_cmp@cpu2a03_fast@@AEAAXEE@Z DD imagerel $LN9
	DD	imagerel $LN9+330
	DD	imagerel $unwind$?opc_cmp@cpu2a03_fast@@AEAAXEE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rundevice_internal@cpu2a03_fast@@AEAAHH@Z DD imagerel $LN370
	DD	imagerel $LN370+36844
	DD	imagerel $unwind$?rundevice_internal@cpu2a03_fast@@AEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0cpu2a03_fast@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+295
	DD	imagerel $unwind$??0cpu2a03_fast@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1cpu2a03_fast@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??1cpu2a03_fast@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rundevice@cpu2a03_fast@@UEAAHH@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?rundevice@cpu2a03_fast@@UEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@cpu2a03_fast@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+142
	DD	imagerel $unwind$?reset@cpu2a03_fast@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?coldboot@cpu2a03_fast@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+314
	DD	imagerel $unwind$?coldboot@cpu2a03_fast@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA+44
	DD	imagerel $unwind$?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pushstack_word@cpu2a03_fast@@QEAAXG@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$?pushstack_word@cpu2a03_fast@@QEAAXG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pushstack_byte@cpu2a03_fast@@QEAAXE@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$?pushstack_byte@cpu2a03_fast@@QEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pullstack_byte@cpu2a03_fast@@QEAAEXZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?pullstack_byte@cpu2a03_fast@@QEAAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pullstack_word@cpu2a03_fast@@QEAAGXZ DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$?pullstack_word@cpu2a03_fast@@QEAAGXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@cpu2a03_fast@@UEAAXHHE@Z DD imagerel $LN4
	DD	imagerel $LN4+140
	DD	imagerel $unwind$?write@cpu2a03_fast@@UEAAXHHE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z DD imagerel $LN5
	DD	imagerel $LN5+224
	DD	imagerel $unwind$?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?log_register@cpu2a03_fast@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?log_register@cpu2a03_fast@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?set_pc@cpu2a03_fast@@QEAAXG@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?set_pc@cpu2a03_fast@@QEAAXG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gcpu2a03_fast@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gcpu2a03_fast@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2device@@8
rdata$r	SEGMENT
??_R2device@@8 DD imagerel ??_R1A@?0A@EA@device@@8	; device::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3device@@8
rdata$r	SEGMENT
??_R3device@@8 DD 00H					; device::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2device@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVdevice@@@8
data$r	SEGMENT
??_R0?AVdevice@@@8 DQ FLAT:??_7type_info@@6B@		; device `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVdevice@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@device@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@device@@8 DD imagerel ??_R0?AVdevice@@@8	; device::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3device@@8
rdata$r	ENDS
;	COMDAT ??_R2bus_device@@8
rdata$r	SEGMENT
??_R2bus_device@@8 DD imagerel ??_R1A@?0A@EA@bus_device@@8 ; bus_device::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@device@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bus_device@@8
rdata$r	SEGMENT
??_R3bus_device@@8 DD 00H				; bus_device::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bus_device@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbus_device@@@8
data$r	SEGMENT
??_R0?AVbus_device@@@8 DQ FLAT:??_7type_info@@6B@	; bus_device `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbus_device@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bus_device@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bus_device@@8 DD imagerel ??_R0?AVbus_device@@@8 ; bus_device::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bus_device@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@cpu2a03_fast@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@cpu2a03_fast@@8 DD imagerel ??_R0?AVcpu2a03_fast@@@8 ; cpu2a03_fast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3cpu2a03_fast@@8
rdata$r	ENDS
;	COMDAT ??_R2cpu2a03_fast@@8
rdata$r	SEGMENT
??_R2cpu2a03_fast@@8 DD imagerel ??_R1A@?0A@EA@cpu2a03_fast@@8 ; cpu2a03_fast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bus_device@@8
	DD	imagerel ??_R1A@?0A@EA@device@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3cpu2a03_fast@@8
rdata$r	SEGMENT
??_R3cpu2a03_fast@@8 DD 00H				; cpu2a03_fast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2cpu2a03_fast@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVcpu2a03_fast@@@8
data$r	SEGMENT
??_R0?AVcpu2a03_fast@@@8 DQ FLAT:??_7type_info@@6B@	; cpu2a03_fast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVcpu2a03_fast@@', 00H
data$r	ENDS
;	COMDAT ??_R4cpu2a03_fast@@6B@
rdata$r	SEGMENT
??_R4cpu2a03_fast@@6B@ DD 01H				; cpu2a03_fast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVcpu2a03_fast@@@8
	DD	imagerel ??_R3cpu2a03_fast@@8
	DD	imagerel ??_R4cpu2a03_fast@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0HA@FGLJHMJI@cpu2a03_fast?3?3coldboot?$CI?$CJ?5called@
CONST	SEGMENT
??_C@_0HA@FGLJHMJI@cpu2a03_fast?3?3coldboot?$CI?$CJ?5called@ DB 'cpu2a03_'
	DB	'fast::coldboot() called without defined memory bus!', 0dH, 0aH
	DB	'Please assign memory bus before calling coldboot()', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0PEAX@88
xdata$x	SEGMENT
_CT??_R0PEAX@88 DD 01H
	DD	imagerel ??_R0PEAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAX@8
data$r	SEGMENT
??_R0PEAX@8 DQ	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAX', 00H
data$r	ENDS
;	COMDAT _CT??_R0PEAVexception@std@@@88
xdata$x	SEGMENT
_CT??_R0PEAVexception@std@@@88 DD 01H
	DD	imagerel ??_R0PEAVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAVexception@std@@@8
data$r	SEGMENT
??_R0PEAVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0PEAVruntime_error@std@@@88
xdata$x	SEGMENT
_CT??_R0PEAVruntime_error@std@@@88 DD 01H
	DD	imagerel ??_R0PEAVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAVruntime_error@std@@@8
data$r	SEGMENT
??_R0PEAVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3PEAVruntime_error@std@@
xdata$x	SEGMENT
_CTA3PEAVruntime_error@std@@ DD 03H
	DD	imagerel _CT??_R0PEAVruntime_error@std@@@88
	DD	imagerel _CT??_R0PEAVexception@std@@@88
	DD	imagerel _CT??_R0PEAX@88
xdata$x	ENDS
;	COMDAT _TI3PEAVruntime_error@std@@
xdata$x	SEGMENT
_TI3PEAVruntime_error@std@@ DD 00H
	DD	00H
	DD	00H
	DD	imagerel _CTA3PEAVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0CB@COBPCPJC@Denver?52a03?5CPU?5?$CIfast?5emulation@
CONST	SEGMENT
??_C@_0CB@COBPCPJC@Denver?52a03?5CPU?5?$CIfast?5emulation@ DB 'Denver 2a0'
	DB	'3 CPU (fast emulation)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7cpu2a03_fast@@6B@
CONST	SEGMENT
??_7cpu2a03_fast@@6B@ DQ FLAT:??_R4cpu2a03_fast@@6B@	; cpu2a03_fast::`vftable'
	DQ	FLAT:?rundevice@cpu2a03_fast@@UEAAHH@Z
	DQ	FLAT:?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z
	DQ	FLAT:??_Ecpu2a03_fast@@UEAAPEAXI@Z
	DQ	FLAT:?write@cpu2a03_fast@@UEAAXHHE@Z
	DQ	FLAT:?read@bus_device@@UEAAEHH@Z
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gcpu2a03_fast@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?set_pc@cpu2a03_fast@@QEAAXG@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?log_register@cpu2a03_fast@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@cpu2a03_fast@@UEAAXHHE@Z DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pullstack_word@cpu2a03_fast@@QEAAGXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pullstack_byte@cpu2a03_fast@@QEAAEXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pushstack_byte@cpu2a03_fast@@QEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pushstack_word@cpu2a03_fast@@QEAAXG@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?coldboot@cpu2a03_fast@@QEAAXXZ DD imagerel ?coldboot@cpu2a03_fast@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?coldboot@cpu2a03_fast@@QEAAXXZ+96
	DD	00H
	DD	imagerel ?coldboot@cpu2a03_fast@@QEAAXXZ+159
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?coldboot@cpu2a03_fast@@QEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?coldboot@cpu2a03_fast@@QEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?coldboot@cpu2a03_fast@@QEAAXXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?coldboot@cpu2a03_fast@@QEAAXXZ
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?coldboot@cpu2a03_fast@@QEAAXXZ DD 025053511H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?coldboot@cpu2a03_fast@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@cpu2a03_fast@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rundevice@cpu2a03_fast@@UEAAHH@Z DD 025052e01H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1cpu2a03_fast@@UEAA@XZ DD imagerel ??1cpu2a03_fast@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1cpu2a03_fast@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1cpu2a03_fast@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1cpu2a03_fast@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1cpu2a03_fast@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0cpu2a03_fast@@QEAA@XZ DD imagerel ??0cpu2a03_fast@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0cpu2a03_fast@@QEAA@XZ+78
	DD	00H
	DD	imagerel ??0cpu2a03_fast@@QEAA@XZ+278
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0cpu2a03_fast@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0cpu2a03_fast@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0cpu2a03_fast@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0cpu2a03_fast@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0cpu2a03_fast@@QEAA@XZ DD 025053511H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0cpu2a03_fast@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rundevice_internal@cpu2a03_fast@@AEAAHH@Z DD 025052e01H
	DD	01122317H
	DD	0700b008bH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_cmp@cpu2a03_fast@@AEAAXEE@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_inc@cpu2a03_fast@@AEAAEE@Z DD 025052e01H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_dec@cpu2a03_fast@@AEAAEE@Z DD 025052e01H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_sbc@cpu2a03_fast@@AEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_adc@cpu2a03_fast@@AEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_xor@cpu2a03_fast@@AEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_bit@cpu2a03_fast@@AEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_ror@cpu2a03_fast@@AEAAXG_N@Z DD 025053401H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_rol@cpu2a03_fast@@AEAAXG_N@Z DD 025053401H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_and@cpu2a03_fast@@AEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_asl@cpu2a03_fast@@AEAAXG_N@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?opc_ora@cpu2a03_fast@@AEAAXE@Z DD 025052e01H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1runtime_error@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@PEBD@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBD@Z DD imagerel ??0exception@std@@QEAA@QEBD@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 025054b19H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBD@Z
	DD	012bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0exception@std@@QEAA@QEBD@Z$rtcName$0 DB 05fH		; std::exception::exception
	DB	049H
	DB	06eH
	DB	069H
	DB	074H
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+6
??0exception@std@@QEAA@QEBD@Z$rtcVarDesc DD 028H	; std::exception::exception
	DD	010H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+48
??0exception@std@@QEAA@QEBD@Z$rtcFrameData DD 01H	; std::exception::exception
	DD	00H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcVarDesc
$cppxdata$??0exception@std@@QEAA@QEBD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBD@Z
	DD	0118H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gcpu2a03_fast@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gcpu2a03_fast@@UEAAPEAXI@Z PROC			; cpu2a03_fast::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1cpu2a03_fast@@UEAA@XZ		; cpu2a03_fast::~cpu2a03_fast
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gcpu2a03_fast@@UEAAPEAXI@Z ENDP			; cpu2a03_fast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?set_pc@cpu2a03_fast@@QEAAXG@Z
_TEXT	SEGMENT
this$ = 224
addr$ = 232
?set_pc@cpu2a03_fast@@QEAAXG@Z PROC			; cpu2a03_fast::set_pc, COMDAT

; 31   : void cpu2a03_fast::set_pc(word addr) {

$LN3:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 32   : 	regs.pc = addr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR addr$[rbp]
	mov	WORD PTR [rax+72], cx

; 33   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?set_pc@cpu2a03_fast@@QEAAXG@Z ENDP			; cpu2a03_fast::set_pc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?log_register@cpu2a03_fast@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?log_register@cpu2a03_fast@@QEAAXXZ PROC		; cpu2a03_fast::log_register, COMDAT

; 28   : void cpu2a03_fast::log_register() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 29   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?log_register@cpu2a03_fast@@QEAAXXZ ENDP		; cpu2a03_fast::log_register
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z
_TEXT	SEGMENT
this$ = 224
data$ = 232
is_output$ = 240
started$ = 248
?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z PROC			; cpu2a03_fast::dma, COMDAT

; 1762 : void cpu2a03_fast::dma(byte *data, bool is_output, bool started) {

$LN5:
	mov	BYTE PTR [rsp+32], r9b
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1763 : 	if ((dma_cycle > 0) && (dma_cycle < 0x100) && (dma_count == 0xFF)) __debugbreak();

	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+80], 0
	jle	SHORT $LN2@dma
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+80], 256			; 00000100H
	jge	SHORT $LN2@dma
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+85]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN2@dma
	int	3
$LN2@dma:

; 1764 : 	if (!is_output) {

	movzx	eax, BYTE PTR is_output$[rbp]
	test	eax, eax
	jne	SHORT $LN3@dma

; 1765 : 		//std::cout << "dma(" << std::dec << (int)dma_count << ") -- addr: " << std::hex << "0x" << (int)(dma_high << 8 | (255 - dma_count)); 
; 1766 : 		*data = mbus->readmemory(dma_high << 8 | (255 - dma_count));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+84]
	shl	eax, 8
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+85]
	mov	edx, 255				; 000000ffH
	sub	edx, ecx
	mov	ecx, edx
	or	eax, ecx
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR data$[rbp]
	mov	BYTE PTR [rcx], al

; 1767 : 		//std::cout << ", read byte : 0x" << (int)*data << std::dec << " | dma_cycle: " << dma_cycle << std::endl;
; 1768 : 		dma_count--;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+85]
	dec	al
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+85], al
$LN3@dma:

; 1769 : 	}
; 1770 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?dma@cpu2a03_fast@@UEAAXPEAE_N1@Z ENDP			; cpu2a03_fast::dma
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?write@cpu2a03_fast@@UEAAXHHE@Z
_TEXT	SEGMENT
this$ = 224
addr$ = 232
addr_from_base$ = 240
data$ = 248
?write@cpu2a03_fast@@UEAAXHHE@Z PROC			; cpu2a03_fast::write, COMDAT

; 1750 : void cpu2a03_fast::write(int addr, int addr_from_base, byte data) {

$LN4:
	mov	BYTE PTR [rsp+32], r9b
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1751 : 	if (addr_from_base == 0x14) {

	cmp	DWORD PTR addr_from_base$[rbp], 20
	jne	SHORT $LN2@write

; 1752 : 		// DMA request.
; 1753 : 		in_dma_mode = true;	// chip is outputting DMA

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+36], 1

; 1754 : 		dma_cycle = 512;		// 512 cpu ticks = 1536 ppu ticks. (*3)

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+80], 512			; 00000200H

; 1755 : 		//if (ticksdone % 2) dma_cycle++;
; 1756 : 		dma_count = 255;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+85], 255			; 000000ffH

; 1757 : 		dma_high = data;

	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	mov	BYTE PTR [rax+84], cl
$LN2@write:

; 1758 : 		return; // done processing.
; 1759 : 	}
; 1760 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?write@cpu2a03_fast@@UEAAXHHE@Z ENDP			; cpu2a03_fast::write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?pullstack_word@cpu2a03_fast@@QEAAGXZ
_TEXT	SEGMENT
t$ = 4
this$ = 256
?pullstack_word@cpu2a03_fast@@QEAAGXZ PROC		; cpu2a03_fast::pullstack_word, COMDAT

; 51   : word cpu2a03_fast::pullstack_word() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 52   : 	word t;
; 53   : 	t = pullstack_byte();

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_byte@cpu2a03_fast@@QEAAEXZ	; cpu2a03_fast::pullstack_byte
	movzx	eax, al
	mov	WORD PTR t$[rbp], ax

; 54   : 	t |= (pullstack_byte() << 8);

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_byte@cpu2a03_fast@@QEAAEXZ	; cpu2a03_fast::pullstack_byte
	movzx	eax, al
	shl	eax, 8
	movzx	ecx, WORD PTR t$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	WORD PTR t$[rbp], ax

; 55   : 	return t;

	movzx	eax, WORD PTR t$[rbp]

; 56   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?pullstack_word@cpu2a03_fast@@QEAAGXZ ENDP		; cpu2a03_fast::pullstack_word
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?pullstack_byte@cpu2a03_fast@@QEAAEXZ
_TEXT	SEGMENT
this$ = 224
?pullstack_byte@cpu2a03_fast@@QEAAEXZ PROC		; cpu2a03_fast::pullstack_byte, COMDAT

; 46   : byte cpu2a03_fast::pullstack_byte() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 47   : 	regs.sp++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+77]
	inc	al
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+77], al

; 48   : 	return mbus->readmemory(0x0100 + regs.sp);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+77]
	add	eax, 256				; 00000100H
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory

; 49   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pullstack_byte@cpu2a03_fast@@QEAAEXZ ENDP		; cpu2a03_fast::pullstack_byte
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?pushstack_byte@cpu2a03_fast@@QEAAXE@Z
_TEXT	SEGMENT
this$ = 224
data$ = 232
?pushstack_byte@cpu2a03_fast@@QEAAXE@Z PROC		; cpu2a03_fast::pushstack_byte, COMDAT

; 35   : void cpu2a03_fast::pushstack_byte(byte data) {

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 36   : 	// puts a byte on the stack.
; 37   : 	mbus->writememory(0x0100 + regs.sp, data);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+77]
	add	eax, 256				; 00000100H
	movzx	r8d, BYTE PTR data$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 38   : 	regs.sp--;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+77]
	dec	al
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+77], al

; 39   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pushstack_byte@cpu2a03_fast@@QEAAXE@Z ENDP		; cpu2a03_fast::pushstack_byte
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?pushstack_word@cpu2a03_fast@@QEAAXG@Z
_TEXT	SEGMENT
this$ = 224
data$ = 232
?pushstack_word@cpu2a03_fast@@QEAAXG@Z PROC		; cpu2a03_fast::pushstack_word, COMDAT

; 41   : void cpu2a03_fast::pushstack_word(word data) {

$LN3:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 42   : 	pushstack_byte((data & 0xFF00) >> 8);

	movzx	eax, WORD PTR data$[rbp]
	and	eax, 65280				; 0000ff00H
	sar	eax, 8
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 43   : 	pushstack_byte((data & 0x00FF));

	movzx	eax, WORD PTR data$[rbp]
	and	eax, 255				; 000000ffH
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 44   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pushstack_word@cpu2a03_fast@@QEAAXG@Z ENDP		; cpu2a03_fast::pushstack_word
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z
_TEXT	SEGMENT
this$ = 224
membus$ = 232
?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z PROC	; cpu2a03_fast::definememorybus, COMDAT

; 1772 : void cpu2a03_fast::definememorybus(bus *membus) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1773 : 	mbus = membus;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR membus$[rbp]
	mov	QWORD PTR [rax+88], rcx

; 1774 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?definememorybus@cpu2a03_fast@@QEAAXPEAVbus@@@Z ENDP	; cpu2a03_fast::definememorybus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?coldboot@cpu2a03_fast@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
tv78 = 312
this$ = 352
?coldboot@cpu2a03_fast@@QEAAXXZ PROC			; cpu2a03_fast::coldboot, COMDAT

; 1735 : void cpu2a03_fast::coldboot() {

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	QWORD PTR $T4[rbp], -2
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1736 : 	if (!mbus) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+88], 0
	jne	SHORT $LN2@coldboot

; 1737 : 		throw new std::runtime_error("cpu2a03_fast::coldboot() called without defined memory bus!\r\nPlease assign memory bus before calling coldboot()");

	mov	ecx, 24
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T3[rbp], rax
	cmp	QWORD PTR $T3[rbp], 0
	je	SHORT $LN4@coldboot
	lea	rdx, OFFSET FLAT:??_C@_0HA@FGLJHMJI@cpu2a03_fast?3?3coldboot?$CI?$CJ?5called@
	mov	rcx, QWORD PTR $T3[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	mov	QWORD PTR tv78[rbp], rax
	jmp	SHORT $LN5@coldboot
$LN4@coldboot:
	mov	QWORD PTR tv78[rbp], 0
$LN5@coldboot:
	mov	rax, QWORD PTR tv78[rbp]
	mov	QWORD PTR $T2[rbp], rax
	mov	rax, QWORD PTR $T2[rbp]
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, OFFSET FLAT:_TI3PEAVruntime_error@std@@
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
	npad	1

; 1738 : 		return;

	jmp	SHORT $LN3@coldboot
$LN2@coldboot:

; 1739 : 	}
; 1740 : 	regs.pc = mbus->readmemory_as_word(vector_reset);

	mov	edx, 65532				; 0000fffcH
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1741 : 	regs.sp = 0xFD;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+77], 253			; 000000fdH

; 1742 : 	regs.sr = cf_interrupt | cf_break | 0x20;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+78], 52			; 00000034H

; 1743 : 	regs.sr = 0x24;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+78], 36			; 00000024H

; 1744 : 	regs.x = 0x00;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+75], 0

; 1745 : 	regs.y = 0x00;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+76], 0

; 1746 : 	regs.ac = 0x00;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+74], 0

; 1747 : 	error_state = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 0
$LN3@coldboot:

; 1748 : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
$LN7@coldboot:
?coldboot@cpu2a03_fast@@QEAAXXZ ENDP			; cpu2a03_fast::coldboot
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
tv78 = 312
this$ = 352
?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA PROC	; `cpu2a03_fast::coldboot'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	edx, 24
	mov	rcx, QWORD PTR $T3[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA ENDP	; `cpu2a03_fast::coldboot'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
tv78 = 312
this$ = 352
?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA PROC	; `cpu2a03_fast::coldboot'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	edx, 24
	mov	rcx, QWORD PTR $T3[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??coldboot@cpu2a03_fast@@QEAAXXZ@4HA ENDP	; `cpu2a03_fast::coldboot'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?reset@cpu2a03_fast@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?reset@cpu2a03_fast@@QEAAXXZ PROC			; cpu2a03_fast::reset, COMDAT

; 1728 : void cpu2a03_fast::reset() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1729 : 	regs.pc = mbus->readmemory_as_word(vector_reset);		// load reset vector @ 0xFFFC

	mov	edx, 65532				; 0000fffcH
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1730 : 	regs.sp = 0xFD;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+77], 253			; 000000fdH

; 1731 : 	regs.sr |= cf_interrupt;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 4
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1732 : 	error_state = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 0

; 1733 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?reset@cpu2a03_fast@@QEAAXXZ ENDP			; cpu2a03_fast::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?rundevice@cpu2a03_fast@@UEAAHH@Z
_TEXT	SEGMENT
tickcount$ = 4
this$ = 256
ticks$ = 264
?rundevice@cpu2a03_fast@@UEAAHH@Z PROC			; cpu2a03_fast::rundevice, COMDAT

; 58   : int cpu2a03_fast::rundevice(int ticks) {

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 59   : 	int tickcount = 0;

	mov	DWORD PTR tickcount$[rbp], 0
$LN2@rundevice:

; 60   : 	while (tickcount < ticks) {

	mov	eax, DWORD PTR ticks$[rbp]
	cmp	DWORD PTR tickcount$[rbp], eax
	jge	SHORT $LN3@rundevice

; 61   : 		tickcount += rundevice_internal(ticks);

	mov	edx, DWORD PTR ticks$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?rundevice_internal@cpu2a03_fast@@AEAAHH@Z ; cpu2a03_fast::rundevice_internal
	mov	ecx, DWORD PTR tickcount$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tickcount$[rbp], eax

; 62   : 	}

	jmp	SHORT $LN2@rundevice
$LN3@rundevice:

; 63   : 	return tickcount;

	mov	eax, DWORD PTR tickcount$[rbp]

; 64   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?rundevice@cpu2a03_fast@@UEAAHH@Z ENDP			; cpu2a03_fast::rundevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ??1cpu2a03_fast@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1cpu2a03_fast@@UEAA@XZ PROC				; cpu2a03_fast::~cpu2a03_fast, COMDAT

; 25   : cpu2a03_fast::~cpu2a03_fast() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7cpu2a03_fast@@6B@
	mov	QWORD PTR [rax], rcx

; 26   : }

	mov	rcx, QWORD PTR this$[rbp]
	call	??1bus_device@@UEAA@XZ			; bus_device::~bus_device
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1cpu2a03_fast@@UEAA@XZ ENDP				; cpu2a03_fast::~cpu2a03_fast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ??0cpu2a03_fast@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0cpu2a03_fast@@QEAA@XZ PROC				; cpu2a03_fast::cpu2a03_fast, COMDAT

; 6    : cpu2a03_fast::cpu2a03_fast() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bus_device@@QEAA@XZ			; bus_device::bus_device
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7cpu2a03_fast@@6B@
	mov	QWORD PTR [rax], rcx

; 7    : 	// initialize cpu.
; 8    : 	strcpy_s(get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "Denver 2a03 CPU (fast emulation)");

	mov	rcx, QWORD PTR this$[rbp]
	call	?get_device_descriptor@device@@QEAAPEADXZ ; device::get_device_descriptor
	lea	r8, OFFSET FLAT:??_C@_0CB@COBPCPJC@Denver?52a03?5CPU?5?$CIfast?5emulation@
	mov	edx, 128				; 00000080H
	mov	rcx, rax
	call	QWORD PTR __imp_strcpy_s

; 9    : 	regs.pc = 0x0000;

	xor	eax, eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 10   : 	regs.sp = 0xFD;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+77], 253			; 000000fdH

; 11   : 	regs.sr = cf_interrupt | cf_break | 0x20;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+78], 52			; 00000034H

; 12   : 	regs.x = 0x00;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+75], 0

; 13   : 	regs.y = 0x00;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+76], 0

; 14   : 	regs.ac = 0x00;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+74], 0

; 15   : 	mbus = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+88], 0

; 16   : 	tick_rate = 0x3;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+16], 3

; 17   : 	error_state = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 0

; 18   : 
; 19   : 	// CPU also has some HW in it.
; 20   : 	devicestart = 0x4000;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+44], 16384		; 00004000H

; 21   : 	deviceend = 0x401F;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+48], 16415		; 0000401fH

; 22   : 	devicemask = 0x401F;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+52], 16415		; 0000401fH

; 23   : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0cpu2a03_fast@@QEAA@XZ ENDP				; cpu2a03_fast::cpu2a03_fast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA PROC		; `cpu2a03_fast::cpu2a03_fast'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bus_device@@UEAA@XZ			; bus_device::~bus_device
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA ENDP		; `cpu2a03_fast::cpu2a03_fast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA PROC		; `cpu2a03_fast::cpu2a03_fast'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bus_device@@UEAA@XZ			; bus_device::~bus_device
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0cpu2a03_fast@@QEAA@XZ@4HA ENDP		; `cpu2a03_fast::cpu2a03_fast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?rundevice_internal@cpu2a03_fast@@AEAAHH@Z
_TEXT	SEGMENT
actualticks$ = 4
opcode$ = 36
data$1 = 68
hb$2 = 100
hb$3 = 132
t$4 = 164
t$5 = 196
data$6 = 228
c$7 = 260
t$8 = 292
t$9 = 324
t$10 = 356
t$11 = 388
t$12 = 420
t$13 = 452
t$14 = 484
t$15 = 516
t$16 = 548
t$17 = 580
t$18 = 612
t$19 = 644
tv7735 = 1044
tv7631 = 1044
tv7379 = 1044
tv7306 = 1044
tv7262 = 1044
tv6994 = 1044
tv6934 = 1044
tv6882 = 1044
tv6846 = 1044
tv6782 = 1044
tv6749 = 1044
tv6736 = 1044
tv6700 = 1044
tv6660 = 1044
tv6639 = 1044
tv6383 = 1044
tv6299 = 1044
tv6255 = 1044
tv6095 = 1044
tv6081 = 1044
tv6067 = 1044
tv5729 = 1044
tv5668 = 1044
tv5611 = 1044
tv5554 = 1044
tv5512 = 1044
tv5497 = 1044
tv5453 = 1044
tv5261 = 1044
tv5186 = 1044
tv5102 = 1044
tv5058 = 1044
tv4905 = 1044
tv4890 = 1044
tv4842 = 1044
tv4827 = 1044
tv4556 = 1044
tv4485 = 1044
tv4432 = 1044
tv4417 = 1044
tv4366 = 1044
tv4208 = 1044
tv4164 = 1044
tv4121 = 1044
tv4044 = 1044
tv4029 = 1044
tv3975 = 1044
tv3871 = 1044
tv3737 = 1044
tv3631 = 1044
tv3422 = 1044
tv3341 = 1044
tv3297 = 1044
tv3177 = 1044
tv3155 = 1044
tv3138 = 1044
tv3122 = 1044
tv3055 = 1044
tv3039 = 1044
tv2757 = 1044
tv2658 = 1044
tv2442 = 1044
tv2361 = 1044
tv2317 = 1044
tv1909 = 1044
tv1810 = 1044
tv1594 = 1044
tv1513 = 1044
tv1467 = 1044
tv1037 = 1044
tv938 = 1044
tv714 = 1044
tv633 = 1044
tv585 = 1044
tv483 = 1044
tv222 = 1044
tv7332 = 1048
tv7289 = 1048
tv6325 = 1048
tv6282 = 1048
tv5128 = 1048
tv5085 = 1048
tv4234 = 1048
tv4191 = 1048
tv3367 = 1048
tv3324 = 1048
tv2387 = 1048
tv2344 = 1048
tv1539 = 1048
tv1496 = 1048
tv659 = 1048
tv612 = 1048
tv7319 = 1052
tv7275 = 1052
tv6312 = 1052
tv6268 = 1052
tv5115 = 1052
tv5071 = 1052
tv4221 = 1052
tv4177 = 1052
tv3354 = 1052
tv3310 = 1052
tv2374 = 1052
tv2330 = 1052
tv1526 = 1052
tv1480 = 1052
tv646 = 1052
tv598 = 1052
tv1495 = 1056
this$ = 1104
ticks$ = 1112
?rundevice_internal@cpu2a03_fast@@AEAAHH@Z PROC		; cpu2a03_fast::rundevice_internal, COMDAT

; 66   : int	cpu2a03_fast::rundevice_internal (int ticks) {

$LN370:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1112				; 00000458H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 278				; 00000116H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1144]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 67   : 	int	actualticks = 0;

	mov	DWORD PTR actualticks$[rbp], 0

; 68   : 	
; 69   : 	// check dma mode
; 70   : 	if (in_dma_mode) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	SHORT $LN4@rundevice_

; 71   : 		if (dma_cycle == 1) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+80], 1
	jne	SHORT $LN5@rundevice_

; 72   : 			dma_cycle = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+80], 0

; 73   : 			in_dma_mode = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+36], 0

; 74   : 			return tick_rate;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	jmp	$LN1@rundevice_
$LN5@rundevice_:

; 75   : 		}
; 76   : 		dma_cycle -= 2;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+80]
	sub	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+80], eax

; 77   : 		if (dma_cycle == 0) in_dma_mode = false;

	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+80], 0
	jne	SHORT $LN6@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+36], 0
$LN6@rundevice_:

; 78   : 		return 2 * tick_rate;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	shl	eax, 1
	jmp	$LN1@rundevice_
$LN4@rundevice_:

; 79   : 	}
; 80   : 
; 81   : 	// check nmi/irq.
; 82   : 	// NMI
; 83   : 	if (mbus->nmi_pulled()) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?nmi_pulled@bus@@QEAA_NXZ		; bus::nmi_pulled
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@rundevice_

; 84   : 		pushstack_word(regs.pc);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, WORD PTR [rax+72]
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_word@cpu2a03_fast@@QEAAXG@Z	; cpu2a03_fast::pushstack_word

; 85   : 		pushstack_byte(regs.sr & ~0x10);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, -17
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 86   : 		regs.sr |= cf_interrupt;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 4
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 87   : 		regs.pc = mbus->readmemory_as_word(vector_nmi); // NMI vector.

	mov	edx, 65530				; 0000fffaH
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 88   : 		return 7 * tick_rate;	// NMI takes 7 cycles.

	mov	rax, QWORD PTR this$[rbp]
	imul	eax, DWORD PTR [rax+16], 7
	jmp	$LN1@rundevice_
$LN7@rundevice_:

; 89   : 	}
; 90   : 	// IRQ
; 91   : 	if ((mbus->irq_pulled()) && ((regs.sr & cf_interrupt) == 0)) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?irq_pulled@bus@@QEAA_NXZ		; bus::irq_pulled
	movzx	eax, al
	test	eax, eax
	je	$LN8@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN8@rundevice_

; 92   : 		pushstack_word(regs.pc);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, WORD PTR [rax+72]
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_word@cpu2a03_fast@@QEAAXG@Z	; cpu2a03_fast::pushstack_word

; 93   : 		pushstack_byte(regs.sr & ~0x10);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, -17
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 94   : 		regs.sr |= cf_interrupt;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 4
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 95   : 		regs.pc = mbus->readmemory_as_word(vector_irq); // IRQ vector.

	mov	edx, 65534				; 0000fffeH
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 96   : 		return 7 * tick_rate;	// IRQ takes 7 cycles.

	mov	rax, QWORD PTR this$[rbp]
	imul	eax, DWORD PTR [rax+16], 7
	jmp	$LN1@rundevice_
$LN8@rundevice_:

; 97   : 	}	
; 98   : 
; 99   : 	byte opcode = mbus->readmemory(regs.pc);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR opcode$[rbp], al

; 100  : 	regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 101  : 	switch (opcode) {

	movzx	eax, BYTE PTR opcode$[rbp]
	mov	DWORD PTR tv222[rbp], eax
	cmp	DWORD PTR tv222[rbp], 255		; 000000ffH
	ja	$LN2@rundevice_
	movsxd	rax, DWORD PTR tv222[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN369@rundevice_[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN9@rundevice_:

; 102  : 		case 0x00: {	// BRK instruction
; 103  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 104  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 105  : 			pushstack_word(regs.pc);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, WORD PTR [rax+72]
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_word@cpu2a03_fast@@QEAAXG@Z	; cpu2a03_fast::pushstack_word

; 106  : 			pushstack_byte(regs.sr | cf_break | 0x20);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 16
	or	eax, 32					; 00000020H
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 107  : 			regs.sr |= cf_interrupt;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 4
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 108  : 			regs.pc = mbus->readmemory_as_word(vector_irq);	// load brk vector in regs.pc

	mov	edx, 65534				; 0000fffeH
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 109  : 			break;

	jmp	$LN2@rundevice_
$LN10@rundevice_:

; 110  : 		}
; 111  : 		case 0x01: {
; 112  : 			opc_ora(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 113  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 114  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 115  : 			break;

	jmp	$LN2@rundevice_
$LN11@rundevice_:

; 116  : 		}
; 117  : 		case 0x02: {
; 118  : 			error_state = true;	// invalid undecodable op.

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 119  : 			break;

	jmp	$LN2@rundevice_
$LN12@rundevice_:

; 120  : 		}
; 121  : 		case 0x03: {
; 122  : 			opc_asl(_mem_index_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 123  : 			opc_ora(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 124  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 125  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 126  : 			break;

	jmp	$LN2@rundevice_
$LN13@rundevice_:

; 127  : 		}
; 128  : 		case 0x04: case 0x44: case 0x64: {
; 129  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 130  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 131  : 			break;

	jmp	$LN2@rundevice_
$LN14@rundevice_:

; 132  : 		}
; 133  : 		case 0x05: {
; 134  : 			opc_ora(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 135  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 136  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 137  : 			break;

	jmp	$LN2@rundevice_
$LN15@rundevice_:

; 138  : 		}
; 139  : 		case 0x06: {
; 140  : 			opc_asl(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 141  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 142  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 143  : 			break;

	jmp	$LN2@rundevice_
$LN16@rundevice_:

; 144  : 		}
; 145  : 		case 0x07: {
; 146  : 			opc_asl(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 147  : 			opc_ora(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 148  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 149  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 150  : 			break;

	jmp	$LN2@rundevice_
$LN17@rundevice_:

; 151  : 		}
; 152  : 		case 0x08: {	// PHP
; 153  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 154  : 			pushstack_byte(regs.sr | 0x30);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 48					; 00000030H
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 155  : 			break;

	jmp	$LN2@rundevice_
$LN18@rundevice_:

; 156  : 		}
; 157  : 		case 0x09: {
; 158  : 			opc_ora(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 159  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 160  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 161  : 			break;

	jmp	$LN2@rundevice_
$LN19@rundevice_:

; 162  : 		}
; 163  : 		case 0x0a: {
; 164  : 			opc_asl(0, false);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 165  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 166  : 			break;

	jmp	$LN2@rundevice_
$LN20@rundevice_:

; 167  : 		}
; 168  : 		case 0x0b: case 0x2b: {// aac?
; 169  : 			opc_and(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 170  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 171  : 			regs.sr = regs.sr & cf_negative ? regs.sr | cf_carry : regs.sr & (0xFF - cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN295@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv483[rbp], eax
	jmp	SHORT $LN296@rundevice_
$LN295@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	DWORD PTR tv483[rbp], eax
$LN296@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv483[rbp]
	mov	BYTE PTR [rax+78], cl

; 172  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 173  : 			break;

	jmp	$LN2@rundevice_
$LN21@rundevice_:

; 174  : 		}
; 175  : 		case 0x0c: case 0x1c: case 0x3c: case 0x5c: case 0x7c: case 0xdc: case 0xfc: {
; 176  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 177  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 178  : 			break;

	jmp	$LN2@rundevice_
$LN22@rundevice_:

; 179  : 		}
; 180  : 		case 0x0d: {
; 181  : 			opc_ora(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 182  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 183  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 184  : 			break;

	jmp	$LN2@rundevice_
$LN23@rundevice_:

; 185  : 		}
; 186  : 		case 0x0e: {
; 187  : 			opc_asl(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 188  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 189  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 190  : 			break;

	jmp	$LN2@rundevice_
$LN24@rundevice_:

; 191  : 		}
; 192  : 		case 0x0f: {
; 193  : 			opc_asl(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 194  : 			opc_ora(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 195  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 196  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 197  : 			break;

	jmp	$LN2@rundevice_
$LN25@rundevice_:

; 198  : 		}
; 199  : 		case 0x10: {
; 200  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 201  : 			if (!(regs.sr & cf_negative)) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	$LN26@rundevice_

; 202  : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 203  : 				if ((_mem_relative & 0xFF00) != (regs.pc & 0xFF00)) actualticks++;	// boundary tick

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN297@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv585[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv585[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv612[rbp], eax
	jmp	SHORT $LN298@rundevice_
$LN297@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv598[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv598[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv612[rbp], eax
$LN298@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	DWORD PTR tv612[rbp], eax
	je	SHORT $LN28@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN28@rundevice_:

; 204  : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN299@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv633[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv633[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv659[rbp], eax
	jmp	SHORT $LN300@rundevice_
$LN299@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv646[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv646[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv659[rbp], eax
$LN300@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv659[rbp]
	mov	WORD PTR [rax+72], cx

; 205  : 			}
; 206  : 			else {

	jmp	SHORT $LN27@rundevice_
$LN26@rundevice_:

; 207  : 				regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN27@rundevice_:

; 208  : 			}
; 209  : 			break;

	jmp	$LN2@rundevice_
$LN29@rundevice_:

; 210  : 		}
; 211  : 		case 0x11: {
; 212  : 			opc_ora(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 213  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 214  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 215  : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv714[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv714[rbp]
	cmp	ecx, eax
	je	SHORT $LN30@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN30@rundevice_:

; 216  : 			break;

	jmp	$LN2@rundevice_
$LN31@rundevice_:

; 217  : 		}
; 218  : 		case 0x12: {
; 219  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 220  : 			break;

	jmp	$LN2@rundevice_
$LN32@rundevice_:

; 221  : 		}
; 222  : 		case 0x13: {
; 223  : 			opc_asl(_mem_index_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 224  : 			opc_ora(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 225  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 226  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 227  : 			break;			

	jmp	$LN2@rundevice_
$LN33@rundevice_:

; 228  : 		}
; 229  : 		case 0x14: case 0x34: case 0x54: case 0x74: case 0xd4: case 0xf4: {
; 230  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 231  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 232  : 			break;

	jmp	$LN2@rundevice_
$LN34@rundevice_:

; 233  : 		}
; 234  : 		case 0x15: {
; 235  : 			opc_ora(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 236  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 237  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 238  : 			break;

	jmp	$LN2@rundevice_
$LN35@rundevice_:

; 239  : 		}
; 240  : 		case 0x16: {
; 241  : 			opc_asl(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 242  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 243  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 244  : 			break;

	jmp	$LN2@rundevice_
$LN36@rundevice_:

; 245  : 		}
; 246  : 		case 0x17: {
; 247  : 			opc_asl(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 248  : 			opc_ora(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 249  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 250  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 251  : 			break;

	jmp	$LN2@rundevice_
$LN37@rundevice_:

; 252  : 		}
; 253  : 		case 0x18: {	//clc
; 254  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 255  : 			regs.sr &= 0xFF - cf_carry;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 256  : 			break;

	jmp	$LN2@rundevice_
$LN38@rundevice_:

; 257  : 		}
; 258  : 		case 0x19: {
; 259  : 			opc_ora(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 260  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 261  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 262  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv938[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv938[rbp]
	cmp	ecx, eax
	je	SHORT $LN39@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN39@rundevice_:

; 263  : 			break;

	jmp	$LN2@rundevice_
$LN40@rundevice_:

; 264  : 		}
; 265  : 		case 0x1a: {
; 266  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 267  : 			break;

	jmp	$LN2@rundevice_
$LN41@rundevice_:

; 268  : 		}
; 269  : 		case 0x1b: {
; 270  : 			opc_asl(_mem_absolute_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 271  : 			opc_ora(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 272  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 273  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 274  : 			break;

	jmp	$LN2@rundevice_
$LN42@rundevice_:

; 275  : 		}
; 276  : 		case 0x1d: {
; 277  : 			opc_ora(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 278  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 279  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 280  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv1037[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv1037[rbp]
	cmp	ecx, eax
	je	SHORT $LN43@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN43@rundevice_:

; 281  : 			break;

	jmp	$LN2@rundevice_
$LN44@rundevice_:

; 282  : 		}
; 283  : 		case 0x1e: {
; 284  : 			opc_asl(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 285  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 286  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 287  : 			break;

	jmp	$LN2@rundevice_
$LN45@rundevice_:

; 288  : 		}
; 289  : 		case 0x1f: {
; 290  : 			opc_asl(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_asl@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_asl

; 291  : 			opc_ora(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ora@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_ora

; 292  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 293  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 294  : 			break;

	jmp	$LN2@rundevice_
$LN46@rundevice_:

; 295  : 		}
; 296  : 		case 0x20: { // jsr
; 297  : 			pushstack_word(regs.pc + 1);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	eax
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_word@cpu2a03_fast@@QEAAXG@Z	; cpu2a03_fast::pushstack_word

; 298  : 			regs.pc = _mem_absolute;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 299  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 300  : 			break;

	jmp	$LN2@rundevice_
$LN47@rundevice_:

; 301  : 		}
; 302  : 		case 0x21: {
; 303  : 			opc_and(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 304  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 305  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 306  : 			break;

	jmp	$LN2@rundevice_
$LN48@rundevice_:

; 307  : 		}
; 308  : 		case 0x22: {
; 309  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 310  : 			break;

	jmp	$LN2@rundevice_
$LN49@rundevice_:

; 311  : 		}
; 312  : 		case 0x23: {
; 313  : 			opc_rol(_mem_index_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 314  : 			opc_and(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 315  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 316  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 317  : 			break;

	jmp	$LN2@rundevice_
$LN50@rundevice_:

; 318  : 		}
; 319  : 		case 0x24: {
; 320  : 			opc_bit(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_bit@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_bit

; 321  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 322  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 323  : 			break;

	jmp	$LN2@rundevice_
$LN51@rundevice_:

; 324  : 		}
; 325  : 		case 0x25: {
; 326  : 			opc_and(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 327  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 328  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 329  : 			break;

	jmp	$LN2@rundevice_
$LN52@rundevice_:

; 330  : 		}
; 331  : 		case 0x26: {
; 332  : 			opc_rol(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 333  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 334  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 335  : 			break;

	jmp	$LN2@rundevice_
$LN53@rundevice_:

; 336  : 		}
; 337  : 		case 0x27: {
; 338  : 			opc_rol(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 339  : 			opc_and(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 340  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 341  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 342  : 			break;

	jmp	$LN2@rundevice_
$LN54@rundevice_:

; 343  : 		}
; 344  : 		case 0x28: { // plp
; 345  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 346  : 			regs.sr = pullstack_byte() | 0x20;

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_byte@cpu2a03_fast@@QEAAEXZ	; cpu2a03_fast::pullstack_byte
	movzx	eax, al
	or	eax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 347  : 			break;

	jmp	$LN2@rundevice_
$LN55@rundevice_:

; 348  : 		}
; 349  : 		case 0x29: {
; 350  : 			opc_and(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 351  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 352  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 353  : 			break;

	jmp	$LN2@rundevice_
$LN56@rundevice_:

; 354  : 		}
; 355  : 		case 0x2a: {
; 356  : 			opc_rol(0, false);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 357  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 358  : 			break;

	jmp	$LN2@rundevice_
$LN57@rundevice_:

; 359  : 		}
; 360  : 		case 0x2c: {
; 361  : 			opc_bit(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_bit@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_bit

; 362  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 363  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 364  : 			break;

	jmp	$LN2@rundevice_
$LN58@rundevice_:

; 365  : 		}
; 366  : 		case 0x2d: {
; 367  : 			opc_and(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 368  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 369  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 370  : 			break;

	jmp	$LN2@rundevice_
$LN59@rundevice_:

; 371  : 		}
; 372  : 		case 0x2e: {
; 373  : 			opc_rol(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 374  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 375  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 376  : 			break;

	jmp	$LN2@rundevice_
$LN60@rundevice_:

; 377  : 		}
; 378  : 		case 0x2f: {
; 379  : 			opc_rol(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 380  : 			opc_and(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 381  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 382  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 383  : 			break;

	jmp	$LN2@rundevice_
$LN61@rundevice_:

; 384  : 		}
; 385  : 		case 0x30: { //bmi
; 386  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 387  : 			if (regs.sr & cf_negative) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	$LN62@rundevice_

; 388  : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 389  : 				if ((regs.pc & 0xFF00) != (_mem_relative and 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN303@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv1467[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv1467[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv1496[rbp], eax
	jmp	SHORT $LN304@rundevice_
$LN303@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv1480[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv1480[rbp]
	sub	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN301@rundevice_
	xor	eax, eax
	cmp	eax, 65280				; 0000ff00H
	je	SHORT $LN301@rundevice_
	mov	DWORD PTR tv1495[rbp], 1
	jmp	SHORT $LN302@rundevice_
$LN301@rundevice_:
	mov	DWORD PTR tv1495[rbp], 0
$LN302@rundevice_:
	mov	eax, DWORD PTR tv1495[rbp]
	mov	DWORD PTR tv1496[rbp], eax
$LN304@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv1496[rbp]
	je	SHORT $LN64@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN64@rundevice_:

; 390  : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN305@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv1513[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv1513[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv1539[rbp], eax
	jmp	SHORT $LN306@rundevice_
$LN305@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv1526[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv1526[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv1539[rbp], eax
$LN306@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv1539[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN63@rundevice_
$LN62@rundevice_:

; 391  : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN63@rundevice_:

; 392  : 			break;

	jmp	$LN2@rundevice_
$LN65@rundevice_:

; 393  : 		}
; 394  : 		case 0x31: {
; 395  : 			opc_and(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 396  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 397  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 398  : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv1594[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv1594[rbp]
	cmp	ecx, eax
	je	SHORT $LN66@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN66@rundevice_:

; 399  : 			break;

	jmp	$LN2@rundevice_
$LN67@rundevice_:

; 400  : 		}
; 401  : 		case 0x32: {
; 402  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 403  : 			break;

	jmp	$LN2@rundevice_
$LN68@rundevice_:

; 404  : 		}
; 405  : 		case 0x33: {
; 406  : 			opc_rol(_mem_index_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 407  : 			opc_and(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 408  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 409  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 410  : 			break;

	jmp	$LN2@rundevice_
$LN69@rundevice_:

; 411  : 		}
; 412  : 		case 0x35: {
; 413  : 			opc_and(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 414  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 415  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 416  : 			break;

	jmp	$LN2@rundevice_
$LN70@rundevice_:

; 417  : 		}
; 418  : 		case 0x36: {
; 419  : 			opc_rol(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 420  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 421  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 422  : 			break;

	jmp	$LN2@rundevice_
$LN71@rundevice_:

; 423  : 		}
; 424  : 		case 0x37: {
; 425  : 			opc_rol(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 426  : 			opc_and(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 427  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 428  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 429  : 			break;

	jmp	$LN2@rundevice_
$LN72@rundevice_:

; 430  : 		}
; 431  : 		case 0x38: { //sec
; 432  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 433  : 			regs.sr |= cf_carry;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 434  : 			break;

	jmp	$LN2@rundevice_
$LN73@rundevice_:

; 435  : 		}
; 436  : 		case 0x39: {
; 437  : 			opc_and(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 438  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 439  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 440  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv1810[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv1810[rbp]
	cmp	ecx, eax
	je	SHORT $LN74@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN74@rundevice_:

; 441  : 			break;

	jmp	$LN2@rundevice_
$LN75@rundevice_:

; 442  : 		}
; 443  : 		case 0x3a: {
; 444  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 445  : 			break;

	jmp	$LN2@rundevice_
$LN76@rundevice_:

; 446  : 		}
; 447  : 		case 0x3b: {
; 448  : 			opc_rol(_mem_absolute_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 449  : 			opc_and(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 450  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 451  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 452  : 			break;

	jmp	$LN2@rundevice_
$LN77@rundevice_:

; 453  : 		}
; 454  : 		case 0x3d: {
; 455  : 			opc_and(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 456  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 457  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 458  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv1909[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv1909[rbp]
	cmp	ecx, eax
	je	SHORT $LN78@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN78@rundevice_:

; 459  : 			break;

	jmp	$LN2@rundevice_
$LN79@rundevice_:

; 460  : 		}
; 461  : 		case 0x3e: {
; 462  : 			opc_rol(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 463  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 464  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 465  : 			break;

	jmp	$LN2@rundevice_
$LN80@rundevice_:

; 466  : 		}
; 467  : 		case 0x3f: {
; 468  : 			opc_rol(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_rol@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_rol

; 469  : 			opc_and(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 470  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 471  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 472  : 			break;

	jmp	$LN2@rundevice_
$LN81@rundevice_:

; 473  : 		}
; 474  : 		case 0x40: { // rti
; 475  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 476  : 			regs.sr = pullstack_byte() | 0x20;

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_byte@cpu2a03_fast@@QEAAEXZ	; cpu2a03_fast::pullstack_byte
	movzx	eax, al
	or	eax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 477  : 			regs.pc = pullstack_word();

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_word@cpu2a03_fast@@QEAAGXZ	; cpu2a03_fast::pullstack_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 478  : 			break;

	jmp	$LN2@rundevice_
$LN82@rundevice_:

; 479  : 		}
; 480  : 		case 0x41: {
; 481  : 			opc_xor(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 482  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 483  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 484  : 			break;

	jmp	$LN2@rundevice_
$LN83@rundevice_:

; 485  : 		}
; 486  : 		case 0x42: {
; 487  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 488  : 			break;

	jmp	$LN2@rundevice_
$LN84@rundevice_:

; 489  : 		}
; 490  : 		case 0x43: {
; 491  : 			opc_lsr(_mem_index_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 492  : 			opc_xor(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 493  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 494  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 495  : 			break;

	jmp	$LN2@rundevice_
$LN85@rundevice_:

; 496  : 		}
; 497  : 		case 0x45: {
; 498  : 			opc_xor(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 499  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 500  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 501  : 			break;

	jmp	$LN2@rundevice_
$LN86@rundevice_:

; 502  : 		}
; 503  : 		case 0x46: {
; 504  : 			opc_lsr(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 505  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 506  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 507  : 			break;

	jmp	$LN2@rundevice_
$LN87@rundevice_:

; 508  : 		}
; 509  : 		case 0x47: {
; 510  : 			opc_lsr(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 511  : 			opc_xor(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 512  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 513  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 514  : 			break;

	jmp	$LN2@rundevice_
$LN88@rundevice_:

; 515  : 		}
; 516  : 		case 0x48: { // pha
; 517  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 518  : 			pushstack_byte(regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?pushstack_byte@cpu2a03_fast@@QEAAXE@Z	; cpu2a03_fast::pushstack_byte

; 519  : 			break;

	jmp	$LN2@rundevice_
$LN89@rundevice_:

; 520  : 		}
; 521  : 		case 0x49: {
; 522  : 			opc_xor(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 523  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 524  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 525  : 			break;

	jmp	$LN2@rundevice_
$LN90@rundevice_:

; 526  : 		}
; 527  : 		case 0x4a: {
; 528  : 			opc_lsr(0, false);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 529  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 530  : 			break;

	jmp	$LN2@rundevice_
$LN91@rundevice_:

; 531  : 		}
; 532  : 		case 0x4b: { // alr
; 533  : 			opc_and(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_and@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_and

; 534  : 			opc_lsr(0, false);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 535  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 536  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 537  : 			break;

	jmp	$LN2@rundevice_
$LN92@rundevice_:

; 538  : 		}
; 539  : 		case 0x4c: {	//jmp
; 540  : 			regs.pc = _mem_absolute;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 541  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 542  : 			break;

	jmp	$LN2@rundevice_
$LN93@rundevice_:

; 543  : 		}
; 544  : 		case 0x4d: {
; 545  : 			opc_xor(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 546  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 547  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 548  : 			break;

	jmp	$LN2@rundevice_
$LN94@rundevice_:

; 549  : 		}
; 550  : 		case 0x4e: {
; 551  : 			opc_lsr(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 552  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 553  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 554  : 			break;

	jmp	$LN2@rundevice_
$LN95@rundevice_:

; 555  : 		}
; 556  : 		case 0x4f: {
; 557  : 			opc_lsr(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 558  : 			opc_xor(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 559  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 560  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 561  : 			break;

	jmp	$LN2@rundevice_
$LN96@rundevice_:

; 562  : 		}
; 563  : 		case 0x50: {
; 564  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 565  : 			if (!(regs.sr & cf_overflow)) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 64					; 00000040H
	test	eax, eax
	jne	$LN97@rundevice_

; 566  : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 567  : 				if ((regs.pc & 0xFF00) != (_mem_relative & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN307@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv2317[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv2317[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv2344[rbp], eax
	jmp	SHORT $LN308@rundevice_
$LN307@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv2330[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv2330[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv2344[rbp], eax
$LN308@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv2344[rbp]
	je	SHORT $LN99@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN99@rundevice_:

; 568  : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN309@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv2361[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv2361[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv2387[rbp], eax
	jmp	SHORT $LN310@rundevice_
$LN309@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv2374[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv2374[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv2387[rbp], eax
$LN310@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv2387[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN98@rundevice_
$LN97@rundevice_:

; 569  : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN98@rundevice_:

; 570  : 			break;

	jmp	$LN2@rundevice_
$LN100@rundevice_:

; 571  : 		}
; 572  : 		case 0x51: {
; 573  : 			opc_xor(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 574  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 575  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 576  : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv2442[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv2442[rbp]
	cmp	ecx, eax
	je	SHORT $LN101@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN101@rundevice_:

; 577  : 			break;

	jmp	$LN2@rundevice_
$LN102@rundevice_:

; 578  : 		}
; 579  : 		case 0x52: {
; 580  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 581  : 			break;

	jmp	$LN2@rundevice_
$LN103@rundevice_:

; 582  : 		}
; 583  : 		case 0x53: {
; 584  : 			opc_lsr(_mem_index_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 585  : 			opc_xor(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 586  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 587  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 588  : 			break;

	jmp	$LN2@rundevice_
$LN104@rundevice_:

; 589  : 		}
; 590  : 		case 0x55: {
; 591  : 			opc_xor(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 592  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 593  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 594  : 			break;

	jmp	$LN2@rundevice_
$LN105@rundevice_:

; 595  : 		}
; 596  : 		case 0x56: {
; 597  : 			opc_lsr(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 598  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 599  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 600  : 			break;

	jmp	$LN2@rundevice_
$LN106@rundevice_:

; 601  : 		}
; 602  : 		case 0x57: {
; 603  : 			opc_lsr(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 604  : 			opc_xor(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 605  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 606  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 607  : 			break;

	jmp	$LN2@rundevice_
$LN107@rundevice_:

; 608  : 		}
; 609  : 		case 0x58: { // cli
; 610  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 611  : 			regs.sr &= 0xFF - cf_interrupt;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 251				; 000000fbH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 612  : 			break;

	jmp	$LN2@rundevice_
$LN108@rundevice_:

; 613  : 		}
; 614  : 		case 0x59: {
; 615  : 			opc_xor(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 616  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 617  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 618  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv2658[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv2658[rbp]
	cmp	ecx, eax
	je	SHORT $LN109@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN109@rundevice_:

; 619  : 			break;

	jmp	$LN2@rundevice_
$LN110@rundevice_:

; 620  : 		}
; 621  : 		case 0x5a: {
; 622  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 623  : 			break;

	jmp	$LN2@rundevice_
$LN111@rundevice_:

; 624  : 		}
; 625  : 		case 0x5b: {
; 626  : 			opc_lsr(_mem_absolute_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 627  : 			opc_xor(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 628  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 629  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 630  : 			break;

	jmp	$LN2@rundevice_
$LN112@rundevice_:

; 631  : 		}
; 632  : 		case 0x5d: {
; 633  : 			opc_xor(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 634  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 635  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 636  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv2757[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv2757[rbp]
	cmp	ecx, eax
	je	SHORT $LN113@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN113@rundevice_:

; 637  : 			break;

	jmp	$LN2@rundevice_
$LN114@rundevice_:

; 638  : 		}
; 639  : 		case 0x5e: {
; 640  : 			opc_lsr(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 641  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 642  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 643  : 			break;

	jmp	$LN2@rundevice_
$LN115@rundevice_:

; 644  : 		}
; 645  : 		case 0x5f: {
; 646  : 			opc_lsr(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_lsr

; 647  : 			opc_xor(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_xor@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_xor

; 648  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 649  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 650  : 			break;

	jmp	$LN2@rundevice_
$LN116@rundevice_:

; 651  : 		}
; 652  : 		case 0x60: { // rts
; 653  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 654  : 			regs.pc = pullstack_word();

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_word@cpu2a03_fast@@QEAAGXZ	; cpu2a03_fast::pullstack_word
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 655  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 656  : 			break;

	jmp	$LN2@rundevice_
$LN117@rundevice_:

; 657  : 		}
; 658  : 		case 0x61: {
; 659  : 			opc_adc(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 660  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 661  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 662  : 			break;

	jmp	$LN2@rundevice_
$LN118@rundevice_:

; 663  : 		}
; 664  : 		case 0x62: {
; 665  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 666  : 			break;

	jmp	$LN2@rundevice_
$LN119@rundevice_:

; 667  : 		}
; 668  : 		case 0x63: {
; 669  : 			opc_ror(_mem_index_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 670  : 			opc_adc(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 671  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 672  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 673  : 			break;

	jmp	$LN2@rundevice_
$LN120@rundevice_:

; 674  : 		}
; 675  : 		case 0x65: {
; 676  : 			opc_adc(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 677  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 678  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 679  : 			break;

	jmp	$LN2@rundevice_
$LN121@rundevice_:

; 680  : 		}
; 681  : 		case 0x66: {
; 682  : 			opc_ror(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 683  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 684  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 685  : 			break;

	jmp	$LN2@rundevice_
$LN122@rundevice_:

; 686  : 		}
; 687  : 		case 0x67: {
; 688  : 			opc_ror(_mem_zero, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 689  : 			opc_adc(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 690  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 691  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 692  : 			break;

	jmp	$LN2@rundevice_
$LN123@rundevice_:

; 693  : 		}
; 694  : 		case 0x68: { // pla
; 695  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 696  : 			regs.ac = pullstack_byte();

	mov	rcx, QWORD PTR this$[rbp]
	call	?pullstack_byte@cpu2a03_fast@@QEAAEXZ	; cpu2a03_fast::pullstack_byte
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+74], al

; 697  : 			regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 698  : 			regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN311@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv3039[rbp], eax
	jmp	SHORT $LN312@rundevice_
$LN311@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv3039[rbp], eax
$LN312@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv3039[rbp]
	mov	BYTE PTR [rax+78], cl

; 699  : 			regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN313@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv3055[rbp], eax
	jmp	SHORT $LN314@rundevice_
$LN313@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv3055[rbp], eax
$LN314@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv3055[rbp]
	mov	BYTE PTR [rax+78], cl

; 700  : 			break;

	jmp	$LN2@rundevice_
$LN124@rundevice_:

; 701  : 		}
; 702  : 		case 0x69: {
; 703  : 			opc_adc(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 704  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 705  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 706  : 			break;

	jmp	$LN2@rundevice_
$LN125@rundevice_:

; 707  : 		}
; 708  : 		case 0x6a: {
; 709  : 			opc_ror(0, false);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 710  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 711  : 			break;

	jmp	$LN2@rundevice_
$LN126@rundevice_:

; 712  : 		}
; 713  : 		case 0x6b: { //arr  (have no idea how it actually works. but ac & imm, ror (ac) general)
; 714  : 			byte data = mbus->readmemory(_mem_immediate);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR data$1[rbp], al

; 715  : 			data &= regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	movzx	ecx, BYTE PTR data$1[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	BYTE PTR data$1[rbp], al

; 716  : 			regs.ac = (data >> 1) | ((regs.sr & cf_carry) << 7);

	movzx	eax, BYTE PTR data$1[rbp]
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+78]
	and	ecx, 1
	shl	ecx, 7
	or	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+74], al

; 717  : 			regs.sr &= 0xFF - (cf_zero | cf_negative);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 718  : 			regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN315@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv3122[rbp], eax
	jmp	SHORT $LN316@rundevice_
$LN315@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv3122[rbp], eax
$LN316@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv3122[rbp]
	mov	BYTE PTR [rax+78], cl

; 719  : 			regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN317@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv3138[rbp], eax
	jmp	SHORT $LN318@rundevice_
$LN317@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv3138[rbp], eax
$LN318@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv3138[rbp]
	mov	BYTE PTR [rax+78], cl

; 720  : 			regs.sr = regs.ac & 0x40 ? regs.sr | cf_carry : regs.sr & (0xFF - cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN319@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv3155[rbp], eax
	jmp	SHORT $LN320@rundevice_
$LN319@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	DWORD PTR tv3155[rbp], eax
$LN320@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv3155[rbp]
	mov	BYTE PTR [rax+78], cl

; 721  : 			regs.sr = (regs.ac ^ (regs.ac << 1)) & 0x40 ? regs.sr | cf_overflow : regs.sr & (0xFF - cf_overflow);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	shl	ecx, 1
	xor	eax, ecx
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN321@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 64					; 00000040H
	mov	DWORD PTR tv3177[rbp], eax
	jmp	SHORT $LN322@rundevice_
$LN321@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 191				; 000000bfH
	mov	DWORD PTR tv3177[rbp], eax
$LN322@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv3177[rbp]
	mov	BYTE PTR [rax+78], cl

; 722  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 723  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 724  : 			break;

	jmp	$LN2@rundevice_
$LN127@rundevice_:

; 725  : 		}
; 726  : 		case 0x6c: {
; 727  : 			regs.pc = _mem_indexed;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 728  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 729  : 			break;

	jmp	$LN2@rundevice_
$LN128@rundevice_:

; 730  : 		}
; 731  : 		case 0x6d: {
; 732  : 			opc_adc(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 733  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 734  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 735  : 			break;

	jmp	$LN2@rundevice_
$LN129@rundevice_:

; 736  : 		}
; 737  : 		case 0x6e: {
; 738  : 			opc_ror(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 739  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 740  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 741  : 			break;

	jmp	$LN2@rundevice_
$LN130@rundevice_:

; 742  : 		}
; 743  : 		case 0x6f: {
; 744  : 			opc_ror(_mem_absolute, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 745  : 			opc_adc(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 746  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 747  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 748  : 			break;

	jmp	$LN2@rundevice_
$LN131@rundevice_:

; 749  : 		}
; 750  : 		case 0x70: { // bvs
; 751  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 752  : 			if (regs.sr & cf_overflow) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	$LN132@rundevice_

; 753  : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 754  : 				if ((regs.pc & 0xFF00) != (_mem_relative & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN323@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv3297[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv3297[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv3324[rbp], eax
	jmp	SHORT $LN324@rundevice_
$LN323@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv3310[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv3310[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv3324[rbp], eax
$LN324@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv3324[rbp]
	je	SHORT $LN134@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN134@rundevice_:

; 755  : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN325@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv3341[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv3341[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv3367[rbp], eax
	jmp	SHORT $LN326@rundevice_
$LN325@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv3354[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv3354[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv3367[rbp], eax
$LN326@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv3367[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN133@rundevice_
$LN132@rundevice_:

; 756  : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN133@rundevice_:

; 757  : 			break;

	jmp	$LN2@rundevice_
$LN135@rundevice_:

; 758  : 		}
; 759  : 		case 0x71: {
; 760  : 			opc_adc(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 761  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 762  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 763  : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv3422[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv3422[rbp]
	cmp	ecx, eax
	je	SHORT $LN136@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN136@rundevice_:

; 764  : 			break;

	jmp	$LN2@rundevice_
$LN137@rundevice_:

; 765  : 		}
; 766  : 		case 0x72: {
; 767  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 768  : 			break;

	jmp	$LN2@rundevice_
$LN138@rundevice_:

; 769  : 		}
; 770  : 		case 0x73: {
; 771  : 			opc_ror(_mem_index_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 772  : 			opc_adc(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 773  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 774  : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 775  : 			break;

	jmp	$LN2@rundevice_
$LN139@rundevice_:

; 776  : 		}
; 777  : 		case 0x75: {
; 778  : 			opc_adc(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 779  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 780  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 781  : 			break;

	jmp	$LN2@rundevice_
$LN140@rundevice_:

; 782  : 		}
; 783  : 		case 0x76: {
; 784  : 			opc_ror(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 785  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 786  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 787  : 			break;

	jmp	$LN2@rundevice_
$LN141@rundevice_:

; 788  : 		}
; 789  : 		case 0x77: {
; 790  : 			opc_ror(_mem_zero_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 791  : 			opc_adc(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 792  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 793  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 794  : 			break;

	jmp	$LN2@rundevice_
$LN142@rundevice_:

; 795  : 		}
; 796  : 		case 0x78: { // sei
; 797  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 798  : 			regs.sr |= cf_interrupt;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 4
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 799  : 			break;

	jmp	$LN2@rundevice_
$LN143@rundevice_:

; 800  : 		}
; 801  : 		case 0x79: {
; 802  : 			opc_adc(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 803  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 804  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv3631[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv3631[rbp]
	cmp	ecx, eax
	je	SHORT $LN144@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN144@rundevice_:

; 805  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 806  : 			break;

	jmp	$LN2@rundevice_
$LN145@rundevice_:

; 807  : 		}
; 808  : 		case 0x7a: {
; 809  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 810  : 			break;

	jmp	$LN2@rundevice_
$LN146@rundevice_:

; 811  : 		}
; 812  : 		case 0x7b: {
; 813  : 			opc_ror(_mem_absolute_y, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 814  : 			opc_adc(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 815  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 816  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 817  : 			break;

	jmp	$LN2@rundevice_
$LN147@rundevice_:

; 818  : 		}
; 819  : 		case 0x7d: {
; 820  : 			opc_adc(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 821  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 822  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 823  : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv3737[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv3737[rbp]
	cmp	ecx, eax
	je	SHORT $LN148@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN148@rundevice_:

; 824  : 			break;

	jmp	$LN2@rundevice_
$LN149@rundevice_:

; 825  : 		}
; 826  : 		case 0x7e: {
; 827  : 			opc_ror(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 828  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 829  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 830  : 			break;

	jmp	$LN2@rundevice_
$LN150@rundevice_:

; 831  : 		}
; 832  : 		case 0x7f: {
; 833  : 			opc_ror(_mem_absolute_x, true);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	mov	r8b, 1
	movzx	edx, ax
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ror@cpu2a03_fast@@AEAAXG_N@Z	; cpu2a03_fast::opc_ror

; 834  : 			opc_adc(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 835  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 836  : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 837  : 			break;

	jmp	$LN2@rundevice_
$LN151@rundevice_:

; 838  : 		}
; 839  : 		case 0x80: case 0x82: case 0x89: case 0xc2: case 0xe2: {
; 840  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 841  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 842  : 			break;

	jmp	$LN2@rundevice_
$LN152@rundevice_:

; 843  : 		}
; 844  : 		case 0x81: {
; 845  : 			mbus->writememory(_mem_index_x, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 846  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 847  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 848  : 			break;

	jmp	$LN2@rundevice_
$LN153@rundevice_:

; 849  : 		}
; 850  : 		case 0x83: {
; 851  : 			mbus->writememory(_mem_index_x, regs.ac & regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	and	eax, ecx
	mov	DWORD PTR tv3871[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	ecx, DWORD PTR tv3871[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 852  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 853  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 854  : 			break;

	jmp	$LN2@rundevice_
$LN154@rundevice_:

; 855  : 		}
; 856  : 		case 0x84: {
; 857  : 			mbus->writememory(_mem_zero, regs.y);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+76]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 858  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 859  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 860  : 			break;

	jmp	$LN2@rundevice_
$LN155@rundevice_:

; 861  : 		}
; 862  : 		case 0x85: {
; 863  : 			mbus->writememory(_mem_zero, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 864  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 865  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 866  : 			break;

	jmp	$LN2@rundevice_
$LN156@rundevice_:

; 867  : 		}
; 868  : 		case 0x86: {
; 869  : 			mbus->writememory(_mem_zero, regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+75]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 870  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 871  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 872  : 			break;

	jmp	$LN2@rundevice_
$LN157@rundevice_:

; 873  : 		}
; 874  : 		case 0x87: {
; 875  : 			mbus->writememory(_mem_zero, regs.ac & regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	and	eax, ecx
	mov	DWORD PTR tv3975[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv3975[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 876  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 877  : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 878  : 			break;

	jmp	$LN2@rundevice_
$LN158@rundevice_:

; 879  : 		}
; 880  : 		case 0x88: { // dey
; 881  : 			regs.y = opc_dec(regs.y);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+76]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+76], al

; 882  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 883  : 			break;

	jmp	$LN2@rundevice_
$LN159@rundevice_:

; 884  : 		}
; 885  : 		case 0x8a: { // txa
; 886  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 887  : 			regs.ac = regs.x;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	mov	BYTE PTR [rax+74], cl

; 888  : 			regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 889  : 			regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN327@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv4029[rbp], eax
	jmp	SHORT $LN328@rundevice_
$LN327@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4029[rbp], eax
$LN328@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4029[rbp]
	mov	BYTE PTR [rax+78], cl

; 890  : 			regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN329@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv4044[rbp], eax
	jmp	SHORT $LN330@rundevice_
$LN329@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4044[rbp], eax
$LN330@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4044[rbp]
	mov	BYTE PTR [rax+78], cl

; 891  : 			break;

	jmp	$LN2@rundevice_
$LN160@rundevice_:

; 892  : 		}
; 893  : 		case 0x8b: {
; 894  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 895  : 			break;

	jmp	$LN2@rundevice_
$LN161@rundevice_:

; 896  : 		}
; 897  : 		case 0x8c: {
; 898  : 			mbus->writememory(_mem_absolute, regs.y);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+76]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 899  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 900  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 901  : 			break;

	jmp	$LN2@rundevice_
$LN162@rundevice_:

; 902  : 		}
; 903  : 		case 0x8d: {
; 904  : 			mbus->writememory(_mem_absolute, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 905  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 906  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 907  : 			break;

	jmp	$LN2@rundevice_
$LN163@rundevice_:

; 908  : 		}
; 909  : 		case 0x8e: {
; 910  : 			mbus->writememory(_mem_absolute, regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+75]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 911  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 912  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 913  : 			break;

	jmp	$LN2@rundevice_
$LN164@rundevice_:

; 914  : 		}
; 915  : 		case 0x8f: {
; 916  : 			mbus->writememory(_mem_absolute, regs.ac & regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	and	eax, ecx
	mov	DWORD PTR tv4121[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	ecx, DWORD PTR tv4121[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 917  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 918  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 919  : 			break;

	jmp	$LN2@rundevice_
$LN165@rundevice_:

; 920  : 		}
; 921  : 		case 0x90: { // bcc
; 922  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 923  : 			if (!(regs.sr & cf_carry)) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 1
	test	eax, eax
	jne	$LN166@rundevice_

; 924  : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 925  : 				if ((regs.pc & 0xFF00) != (_mem_relative & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN331@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv4164[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv4164[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv4191[rbp], eax
	jmp	SHORT $LN332@rundevice_
$LN331@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv4177[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv4177[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv4191[rbp], eax
$LN332@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv4191[rbp]
	je	SHORT $LN168@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN168@rundevice_:

; 926  : 				regs.pc = _mem_relative;				

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN333@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv4208[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv4208[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv4234[rbp], eax
	jmp	SHORT $LN334@rundevice_
$LN333@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv4221[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv4221[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv4234[rbp], eax
$LN334@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv4234[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN167@rundevice_
$LN166@rundevice_:

; 927  : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN167@rundevice_:

; 928  : 			break;

	jmp	$LN2@rundevice_
$LN169@rundevice_:

; 929  : 		}
; 930  : 		case 0x91: {
; 931  : 			mbus->writememory(_mem_index_y, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 932  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 933  : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 934  : 			break;

	jmp	$LN2@rundevice_
$LN170@rundevice_:

; 935  : 		}
; 936  : 		case 0x92: case 0x93: {
; 937  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 938  : 			break;

	jmp	$LN2@rundevice_
$LN171@rundevice_:

; 939  : 		}
; 940  : 		case 0x94: {
; 941  : 			mbus->writememory(_mem_zero_x, regs.y);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+76]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 942  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 943  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 944  : 			break;

	jmp	$LN2@rundevice_
$LN172@rundevice_:

; 945  : 		}
; 946  : 		case 0x95: {
; 947  : 			mbus->writememory(_mem_zero_x, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 948  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 949  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 950  : 			break;

	jmp	$LN2@rundevice_
$LN173@rundevice_:

; 951  : 		}
; 952  : 		case 0x96: {
; 953  : 			mbus->writememory(_mem_zero_y, regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+75]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 954  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 955  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 956  : 			break;

	jmp	$LN2@rundevice_
$LN174@rundevice_:

; 957  : 		}
; 958  : 		case 0x97: {
; 959  : 			mbus->writememory(_mem_zero_y, regs.ac & regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	and	eax, ecx
	mov	DWORD PTR tv4366[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR tv4366[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 960  : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 961  : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 962  : 			break;

	jmp	$LN2@rundevice_
$LN175@rundevice_:

; 963  : 		}
; 964  : 		case 0x98: { // tya
; 965  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 966  : 			regs.ac = regs.y;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	mov	BYTE PTR [rax+74], cl

; 967  : 			regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 968  : 			regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN335@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv4417[rbp], eax
	jmp	SHORT $LN336@rundevice_
$LN335@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4417[rbp], eax
$LN336@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4417[rbp]
	mov	BYTE PTR [rax+78], cl

; 969  : 			regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN337@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv4432[rbp], eax
	jmp	SHORT $LN338@rundevice_
$LN337@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4432[rbp], eax
$LN338@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4432[rbp]
	mov	BYTE PTR [rax+78], cl

; 970  : 			break;

	jmp	$LN2@rundevice_
$LN176@rundevice_:

; 971  : 		}
; 972  : 		case 0x99: {
; 973  : 			mbus->writememory(_mem_absolute_y, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 974  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 975  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 976  : 			break;

	jmp	$LN2@rundevice_
$LN177@rundevice_:

; 977  : 
; 978  : 		}
; 979  : 		case 0x9a: {	// txs
; 980  : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 981  : 			regs.sp = regs.x;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	mov	BYTE PTR [rax+77], cl

; 982  : 			break;

	jmp	$LN2@rundevice_
$LN178@rundevice_:

; 983  : 		}
; 984  : 		case 0x9b: {
; 985  : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 986  : 			break;

	jmp	$LN2@rundevice_
$LN179@rundevice_:

; 987  : 		}
; 988  : 		case 0x9c: {	// keeps failing 07-abs_xy.nes test, everything documented tells me this is right.
; 989  : 			byte hb = (_mem_absolute >> 8);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	sar	eax, 8
	mov	BYTE PTR hb$2[rbp], al

; 990  : 			mbus->writememory(_mem_absolute_x, regs.y & (hb + 1));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+76]
	movzx	ecx, BYTE PTR hb$2[rbp]
	inc	ecx
	and	eax, ecx
	mov	DWORD PTR tv4485[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	ecx, DWORD PTR tv4485[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 991  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 992  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 993  : 			break;

	jmp	$LN2@rundevice_
$LN180@rundevice_:

; 994  : 		}
; 995  : 		case 0x9d: {
; 996  : 			mbus->writememory(_mem_absolute_x, regs.ac);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	r8d, BYTE PTR [rcx+74]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 997  : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 998  : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 999  : 			break;

	jmp	$LN2@rundevice_
$LN181@rundevice_:

; 1000 : 		}
; 1001 : 		case 0x9e: {	// keeps failing 07 - abs_xy.nes test, everything documented tells me this is right.
; 1002 : 			byte hb = (_mem_absolute >> 8);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	sar	eax, 8
	mov	BYTE PTR hb$3[rbp], al

; 1003 : 			mbus->writememory(_mem_absolute_y, regs.x & (hb + 1));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	movzx	ecx, BYTE PTR hb$3[rbp]
	inc	ecx
	and	eax, ecx
	mov	DWORD PTR tv4556[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	ecx, DWORD PTR tv4556[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1004 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1005 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1006 : 			break;

	jmp	$LN2@rundevice_
$LN182@rundevice_:

; 1007 : 		}
; 1008 : 		case 0x9f:  {
; 1009 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1010 : 			break;

	jmp	$LN2@rundevice_
$LN183@rundevice_:

; 1011 : 		}
; 1012 : 		case 0xa0: {
; 1013 : 			opc_ld_(regs.y, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 76					; 0000004cH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1014 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1015 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1016 : 			break;

	jmp	$LN2@rundevice_
$LN184@rundevice_:

; 1017 : 		}
; 1018 : 		case 0xa1: {
; 1019 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1020 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1021 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1022 : 			break;

	jmp	$LN2@rundevice_
$LN185@rundevice_:

; 1023 : 		}
; 1024 : 		case 0xa2: {
; 1025 : 			opc_ld_(regs.x, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 75					; 0000004bH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1026 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1027 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1028 : 			break;

	jmp	$LN2@rundevice_
$LN186@rundevice_:

; 1029 : 		}
; 1030 : 		case 0xa3: {
; 1031 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1032 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1033 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1034 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1035 : 			break;

	jmp	$LN2@rundevice_
$LN187@rundevice_:

; 1036 : 		}
; 1037 : 		case 0xa4: {
; 1038 : 			opc_ld_(regs.y, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 76					; 0000004cH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1039 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1040 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1041 : 			break;

	jmp	$LN2@rundevice_
$LN188@rundevice_:

; 1042 : 		}
; 1043 : 		case 0xa5: {
; 1044 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1045 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1046 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1047 : 			break;

	jmp	$LN2@rundevice_
$LN189@rundevice_:

; 1048 : 		}
; 1049 : 		case 0xa6: {
; 1050 : 			opc_ld_(regs.x, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 75					; 0000004bH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1051 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1052 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1053 : 			break;

	jmp	$LN2@rundevice_
$LN190@rundevice_:

; 1054 : 		}
; 1055 : 		case 0xa7: {
; 1056 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1057 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1058 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1059 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1060 : 			break;

	jmp	$LN2@rundevice_
$LN191@rundevice_:

; 1061 : 		}
; 1062 : 		case 0xa8: { // tay
; 1063 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1064 : 			regs.y = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+76], cl

; 1065 : 			regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1066 : 			regs.sr = regs.y & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+76]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN339@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv4827[rbp], eax
	jmp	SHORT $LN340@rundevice_
$LN339@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4827[rbp], eax
$LN340@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4827[rbp]
	mov	BYTE PTR [rax+78], cl

; 1067 : 			regs.sr = !regs.y ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+76]
	test	eax, eax
	jne	SHORT $LN341@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv4842[rbp], eax
	jmp	SHORT $LN342@rundevice_
$LN341@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4842[rbp], eax
$LN342@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4842[rbp]
	mov	BYTE PTR [rax+78], cl

; 1068 : 			break;

	jmp	$LN2@rundevice_
$LN192@rundevice_:

; 1069 : 		}
; 1070 : 		case 0xa9: {
; 1071 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1072 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1073 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1074 : 			break;

	jmp	$LN2@rundevice_
$LN193@rundevice_:

; 1075 : 		}
; 1076 : 		case 0xaa: { // tax
; 1077 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1078 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1079 : 			regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1080 : 			regs.sr = regs.x & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN343@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv4890[rbp], eax
	jmp	SHORT $LN344@rundevice_
$LN343@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4890[rbp], eax
$LN344@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4890[rbp]
	mov	BYTE PTR [rax+78], cl

; 1081 : 			regs.sr = !regs.x ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	test	eax, eax
	jne	SHORT $LN345@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv4905[rbp], eax
	jmp	SHORT $LN346@rundevice_
$LN345@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv4905[rbp], eax
$LN346@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv4905[rbp]
	mov	BYTE PTR [rax+78], cl

; 1082 : 			break;

	jmp	$LN2@rundevice_
$LN194@rundevice_:

; 1083 : 		}
; 1084 : 		case 0xab: { // atx
; 1085 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1086 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1087 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1088 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1089 : 			break;

	jmp	$LN2@rundevice_
$LN195@rundevice_:

; 1090 : 		}
; 1091 : 		case 0xac: {
; 1092 : 			opc_ld_(regs.y, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 76					; 0000004cH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1093 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1094 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1095 : 			break;

	jmp	$LN2@rundevice_
$LN196@rundevice_:

; 1096 : 		}
; 1097 : 		case 0xad: {
; 1098 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1099 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1100 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1101 : 			break;

	jmp	$LN2@rundevice_
$LN197@rundevice_:

; 1102 : 		}
; 1103 : 		case 0xae: {
; 1104 : 			opc_ld_(regs.x, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 75					; 0000004bH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1105 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1106 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1107 : 			break;

	jmp	$LN2@rundevice_
$LN198@rundevice_:

; 1108 : 		}
; 1109 : 		case 0xaf: {
; 1110 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1111 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1112 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1113 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1114 : 			break;			

	jmp	$LN2@rundevice_
$LN199@rundevice_:

; 1115 : 		}
; 1116 : 		case 0xb0: { //bcs
; 1117 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1118 : 			if (regs.sr & cf_carry) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 1
	test	eax, eax
	je	$LN200@rundevice_

; 1119 : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 1120 : 				if ((regs.pc & 0xFF00) != (_mem_relative & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN347@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv5058[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv5058[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv5085[rbp], eax
	jmp	SHORT $LN348@rundevice_
$LN347@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv5071[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv5071[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5085[rbp], eax
$LN348@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv5085[rbp]
	je	SHORT $LN202@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN202@rundevice_:

; 1121 : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN349@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv5102[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv5102[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv5128[rbp], eax
	jmp	SHORT $LN350@rundevice_
$LN349@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv5115[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv5115[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv5128[rbp], eax
$LN350@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv5128[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN201@rundevice_
$LN200@rundevice_:

; 1122 : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN201@rundevice_:

; 1123 : 			break;

	jmp	$LN2@rundevice_
$LN203@rundevice_:

; 1124 : 		}
; 1125 : 		case 0xb1: {
; 1126 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1127 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1128 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1129 : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5186[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5186[rbp]
	cmp	ecx, eax
	je	SHORT $LN204@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN204@rundevice_:

; 1130 : 			break;

	jmp	$LN2@rundevice_
$LN205@rundevice_:

; 1131 : 		}
; 1132 : 		case 0xb2: {
; 1133 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1134 : 			break;

	jmp	$LN2@rundevice_
$LN206@rundevice_:

; 1135 : 		}
; 1136 : 		case 0xb3: {
; 1137 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1138 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1139 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1140 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1141 : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5261[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5261[rbp]
	cmp	ecx, eax
	je	SHORT $LN207@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN207@rundevice_:

; 1142 : 			break;

	jmp	$LN2@rundevice_
$LN208@rundevice_:

; 1143 : 		}
; 1144 : 		case 0xb4: {
; 1145 : 			opc_ld_(regs.y, mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 76					; 0000004cH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1146 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1147 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1148 : 			break;

	jmp	$LN2@rundevice_
$LN209@rundevice_:

; 1149 : 		}
; 1150 : 		case 0xb5: {
; 1151 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1152 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1153 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1154 : 			break;

	jmp	$LN2@rundevice_
$LN210@rundevice_:

; 1155 : 		}
; 1156 : 		case 0xb6: {
; 1157 : 			opc_ld_(regs.x, mbus->readmemory(_mem_zero_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 75					; 0000004bH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1158 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1159 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1160 : 			break;

	jmp	$LN2@rundevice_
$LN211@rundevice_:

; 1161 : 		}
; 1162 : 		case 0xb7: {
; 1163 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_zero_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1164 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1165 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1166 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1167 : 			break;

	jmp	$LN2@rundevice_
$LN212@rundevice_:

; 1168 : 		}
; 1169 : 		case 0xb8: { // clv
; 1170 : 			regs.sr &= 0xFF - cf_overflow;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 191				; 000000bfH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1171 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1172 : 			break;

	jmp	$LN2@rundevice_
$LN213@rundevice_:

; 1173 : 		}
; 1174 : 		case 0xb9: {
; 1175 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1176 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1177 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1178 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5453[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5453[rbp]
	cmp	ecx, eax
	je	SHORT $LN214@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN214@rundevice_:

; 1179 : 			break;

	jmp	$LN2@rundevice_
$LN215@rundevice_:

; 1180 : 		}
; 1181 : 		case 0xba: { //tsx
; 1182 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1183 : 			regs.x = regs.sp;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+77]
	mov	BYTE PTR [rax+75], cl

; 1184 : 			regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1185 : 			regs.sr = regs.x & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN351@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv5497[rbp], eax
	jmp	SHORT $LN352@rundevice_
$LN351@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv5497[rbp], eax
$LN352@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv5497[rbp]
	mov	BYTE PTR [rax+78], cl

; 1186 : 			regs.sr = !regs.x ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	test	eax, eax
	jne	SHORT $LN353@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv5512[rbp], eax
	jmp	SHORT $LN354@rundevice_
$LN353@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv5512[rbp], eax
$LN354@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv5512[rbp]
	mov	BYTE PTR [rax+78], cl

; 1187 : 			break;

	jmp	$LN2@rundevice_
$LN216@rundevice_:

; 1188 : 		}
; 1189 : 		case 0xbb: {
; 1190 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1191 : 			break;

	jmp	$LN2@rundevice_
$LN217@rundevice_:

; 1192 : 		}
; 1193 : 		case 0xbc: {
; 1194 : 			opc_ld_(regs.y, mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 76					; 0000004cH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1195 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1196 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1197 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5554[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5554[rbp]
	cmp	ecx, eax
	je	SHORT $LN218@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN218@rundevice_:

; 1198 : 			break;

	jmp	$LN2@rundevice_
$LN219@rundevice_:

; 1199 : 		}
; 1200 : 		case 0xbd: {
; 1201 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1202 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1203 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1204 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5611[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5611[rbp]
	cmp	ecx, eax
	je	SHORT $LN220@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN220@rundevice_:

; 1205 : 			break;

	jmp	$LN2@rundevice_
$LN221@rundevice_:

; 1206 : 		}
; 1207 : 		case 0xbe: {
; 1208 : 			opc_ld_(regs.x, mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 75					; 0000004bH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1209 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1210 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1211 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5668[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5668[rbp]
	cmp	ecx, eax
	je	SHORT $LN222@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN222@rundevice_:

; 1212 : 			break;

	jmp	$LN2@rundevice_
$LN223@rundevice_:

; 1213 : 		}
; 1214 : 		case 0xbf: {
; 1215 : 			opc_ld_(regs.ac, mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 74					; 0000004aH
	movzx	r8d, al
	mov	rdx, rcx
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z	; cpu2a03_fast::opc_ld_

; 1216 : 			regs.x = regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+75], cl

; 1217 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1218 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1219 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv5729[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv5729[rbp]
	cmp	ecx, eax
	je	SHORT $LN224@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN224@rundevice_:

; 1220 : 			break;

	jmp	$LN2@rundevice_
$LN225@rundevice_:

; 1221 : 		}
; 1222 : 		case 0xc0: {
; 1223 : 			opc_cmp(regs.y, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+76]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1224 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1225 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1226 : 			break;

	jmp	$LN2@rundevice_
$LN226@rundevice_:

; 1227 : 		}
; 1228 : 		case 0xc1: {
; 1229 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1230 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1231 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1232 : 			break;

	jmp	$LN2@rundevice_
$LN227@rundevice_:

; 1233 : 		}
; 1234 : 		case 0xc3: {
; 1235 : 			byte t = opc_dec(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$4[rbp], al

; 1236 : 			mbus->writememory(_mem_index_x, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$4[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1237 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$4[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1238 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1239 : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 1240 : 			break;

	jmp	$LN2@rundevice_
$LN228@rundevice_:

; 1241 : 		}
; 1242 : 		case 0xc4: {
; 1243 : 			opc_cmp(regs.y, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+76]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1244 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1245 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1246 : 			break;

	jmp	$LN2@rundevice_
$LN229@rundevice_:

; 1247 : 		}
; 1248 : 		case 0xc5: {
; 1249 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1250 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1251 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1252 : 			break;

	jmp	$LN2@rundevice_
$LN230@rundevice_:

; 1253 : 		}
; 1254 : 		case 0xc6: {
; 1255 : 			mbus->writememory(_mem_zero, opc_dec(mbus->readmemory(_mem_zero)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR tv6994[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	movzx	ecx, BYTE PTR tv6994[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1256 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1257 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1258 : 			break;

	jmp	$LN2@rundevice_
$LN231@rundevice_:

; 1259 : 		}
; 1260 : 		case 0xc7: {
; 1261 : 			byte t = opc_dec(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$5[rbp], al

; 1262 : 			mbus->writememory(_mem_zero, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	movzx	r8d, BYTE PTR t$5[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1263 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$5[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1264 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1265 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1266 : 			break;

	jmp	$LN2@rundevice_
$LN232@rundevice_:

; 1267 : 		}
; 1268 : 		case 0xc8: { //iny
; 1269 : 			regs.y = opc_inc(regs.y);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+76]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+76], al

; 1270 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1271 : 			break;

	jmp	$LN2@rundevice_
$LN233@rundevice_:

; 1272 : 		}
; 1273 : 		case 0xc9: {
; 1274 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1275 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1276 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1277 : 			break;

	jmp	$LN2@rundevice_
$LN234@rundevice_:

; 1278 : 		}
; 1279 : 		case 0xca: { //dex
; 1280 : 			regs.x = opc_dec(regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+75]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+75], al

; 1281 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1282 : 			break;

	jmp	$LN2@rundevice_
$LN235@rundevice_:

; 1283 : 		}
; 1284 : 		case 0xcb: { //axs
; 1285 : 			// what does it do.
; 1286 : 			// X <- (A & X) - Immediate
; 1287 : 			byte data = mbus->readmemory(_mem_immediate);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR data$6[rbp], al

; 1288 : 			regs.sr &= 0xFF - (cf_negative | cf_zero | cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 124				; 0000007cH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1289 : 			regs.x &= regs.ac;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	and	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+75], al

; 1290 : 			word c = word(regs.x) - data;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	movzx	ecx, BYTE PTR data$6[rbp]
	sub	eax, ecx
	mov	WORD PTR c$7[rbp], ax

; 1291 : 			regs.sr = regs.x >= data ? regs.sr | cf_carry : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+75]
	movzx	ecx, BYTE PTR data$6[rbp]
	cmp	eax, ecx
	jl	SHORT $LN355@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv6067[rbp], eax
	jmp	SHORT $LN356@rundevice_
$LN355@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv6067[rbp], eax
$LN356@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv6067[rbp]
	mov	BYTE PTR [rax+78], cl

; 1292 : 			regs.sr = c & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, WORD PTR c$7[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN357@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv6081[rbp], eax
	jmp	SHORT $LN358@rundevice_
$LN357@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv6081[rbp], eax
$LN358@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv6081[rbp]
	mov	BYTE PTR [rax+78], cl

; 1293 : 			regs.sr = !(c & 0xFF) ? regs.sr | cf_zero : regs.sr;

	movzx	eax, WORD PTR c$7[rbp]
	and	eax, 255				; 000000ffH
	test	eax, eax
	jne	SHORT $LN359@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv6095[rbp], eax
	jmp	SHORT $LN360@rundevice_
$LN359@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv6095[rbp], eax
$LN360@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv6095[rbp]
	mov	BYTE PTR [rax+78], cl

; 1294 : 			regs.x = byte(c);

	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR c$7[rbp]
	mov	BYTE PTR [rax+75], cl

; 1295 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1296 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1297 : 			break;

	jmp	$LN2@rundevice_
$LN236@rundevice_:

; 1298 : 		}
; 1299 : 		case 0xcc: {
; 1300 : 			opc_cmp(regs.y, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+76]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1301 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1302 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1303 : 			break;

	jmp	$LN2@rundevice_
$LN237@rundevice_:

; 1304 : 		}
; 1305 : 		case 0xcd: {
; 1306 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1307 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1308 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1309 : 			break;

	jmp	$LN2@rundevice_
$LN238@rundevice_:

; 1310 : 		}
; 1311 : 		case 0xce: {
; 1312 : 			mbus->writememory(_mem_absolute, opc_dec(mbus->readmemory(_mem_absolute)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR tv6934[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	movzx	ecx, BYTE PTR tv6934[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1313 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1314 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1315 : 			break;

	jmp	$LN2@rundevice_
$LN239@rundevice_:

; 1316 : 		}
; 1317 : 		case 0xcf: {
; 1318 : 			byte t = opc_dec(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$8[rbp], al

; 1319 : 			mbus->writememory(_mem_absolute, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$8[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1320 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$8[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1321 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1322 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1323 : 			break;

	jmp	$LN2@rundevice_
$LN240@rundevice_:

; 1324 : 		}
; 1325 : 		case 0xd0: { // bne
; 1326 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1327 : 			if (!(regs.sr & cf_zero)) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 2
	test	eax, eax
	jne	$LN241@rundevice_

; 1328 : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 1329 : 				if ((regs.pc & 0xFF00) != (_mem_relative & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN361@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv6255[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv6255[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv6282[rbp], eax
	jmp	SHORT $LN362@rundevice_
$LN361@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv6268[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv6268[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv6282[rbp], eax
$LN362@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv6282[rbp]
	je	SHORT $LN243@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN243@rundevice_:

; 1330 : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN363@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv6299[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv6299[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv6325[rbp], eax
	jmp	SHORT $LN364@rundevice_
$LN363@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv6312[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv6312[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv6325[rbp], eax
$LN364@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv6325[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN242@rundevice_
$LN241@rundevice_:

; 1331 : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN242@rundevice_:

; 1332 : 			break;

	jmp	$LN2@rundevice_
$LN244@rundevice_:

; 1333 : 		}
; 1334 : 		case 0xd1: {
; 1335 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1336 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1337 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1338 : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv6383[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv6383[rbp]
	cmp	ecx, eax
	je	SHORT $LN245@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN245@rundevice_:

; 1339 : 			break;

	jmp	$LN2@rundevice_
$LN246@rundevice_:

; 1340 : 		}
; 1341 : 		case 0xd2: {
; 1342 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1343 : 			break;

	jmp	$LN2@rundevice_
$LN247@rundevice_:

; 1344 : 		}
; 1345 : 		case 0xd3: {
; 1346 : 			byte t = opc_dec(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$9[rbp], al

; 1347 : 			mbus->writememory(_mem_index_y, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$9[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1348 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$9[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1349 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1350 : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 1351 : 			break;

	jmp	$LN2@rundevice_
$LN248@rundevice_:

; 1352 : 		}
; 1353 : 		case 0xd5: {
; 1354 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1355 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1356 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1357 : 			break;

	jmp	$LN2@rundevice_
$LN249@rundevice_:

; 1358 : 		}
; 1359 : 		case 0xd6: {
; 1360 : 			mbus->writememory(_mem_zero_x, opc_dec(mbus->readmemory(_mem_zero_x)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR tv6882[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR tv6882[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1361 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1362 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1363 : 			break;

	jmp	$LN2@rundevice_
$LN250@rundevice_:

; 1364 : 		}
; 1365 : 		case 0xd7: {
; 1366 : 			byte t = opc_dec(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$10[rbp], al

; 1367 : 			mbus->writememory(_mem_zero_x, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movzx	r8d, BYTE PTR t$10[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1368 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$10[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1369 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1370 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1371 : 			break;

	jmp	$LN2@rundevice_
$LN251@rundevice_:

; 1372 : 		}
; 1373 : 		case 0xd8: { //cld
; 1374 : 			regs.sr &= 0xff - cf_decimal;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 247				; 000000f7H
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1375 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1376 : 			break;

	jmp	$LN2@rundevice_
$LN252@rundevice_:

; 1377 : 		}
; 1378 : 		case 0xd9: {
; 1379 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1380 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1381 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1382 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv6639[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv6639[rbp]
	cmp	ecx, eax
	je	SHORT $LN253@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN253@rundevice_:

; 1383 : 			break;

	jmp	$LN2@rundevice_
$LN254@rundevice_:

; 1384 : 		}
; 1385 : 		case 0xda: {
; 1386 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1387 : 			break;

	jmp	$LN2@rundevice_
$LN255@rundevice_:

; 1388 : 		}
; 1389 : 		case 0xdb: {
; 1390 : 			byte t = opc_dec(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$11[rbp], al

; 1391 : 			mbus->writememory(_mem_absolute_y, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$11[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1392 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$11[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1393 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1394 : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 1395 : 			break;

	jmp	$LN2@rundevice_
$LN256@rundevice_:

; 1396 : 		}
; 1397 : 		case 0xdd: {
; 1398 : 			opc_cmp(regs.ac, mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1399 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1400 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1401 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv6749[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv6749[rbp]
	cmp	ecx, eax
	je	SHORT $LN257@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN257@rundevice_:

; 1402 : 			break;

	jmp	$LN2@rundevice_
$LN258@rundevice_:

; 1403 : 		}
; 1404 : 		case 0xde: {
; 1405 : 			mbus->writememory(_mem_absolute_x, opc_dec(mbus->readmemory(_mem_absolute_x)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR tv6846[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	movzx	ecx, BYTE PTR tv6846[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1406 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1407 : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 1408 : 			break;

	jmp	$LN2@rundevice_
$LN259@rundevice_:

; 1409 : 		}
; 1410 : 		case 0xdf: {
; 1411 : 			byte t = opc_dec(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_dec@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_dec
	mov	BYTE PTR t$12[rbp], al

; 1412 : 			mbus->writememory(_mem_absolute_x, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$12[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1413 : 			opc_cmp(regs.ac, t);

	movzx	r8d, BYTE PTR t$12[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+74]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1414 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1415 : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 1416 : 			break;

	jmp	$LN2@rundevice_
$LN260@rundevice_:

; 1417 : 		}
; 1418 : 		case 0xe0: {
; 1419 : 			opc_cmp(regs.x, mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+75]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1420 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1421 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1422 : 			break;

	jmp	$LN2@rundevice_
$LN261@rundevice_:

; 1423 : 		}
; 1424 : 		case 0xe1: {
; 1425 : 			opc_sbc(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1426 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1427 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1428 : 			break;

	jmp	$LN2@rundevice_
$LN262@rundevice_:

; 1429 : 		}
; 1430 : 		case 0xe3: {
; 1431 : 			byte t = opc_inc(mbus->readmemory(_mem_index_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$13[rbp], al

; 1432 : 			mbus->writememory(_mem_index_x, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$13[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1433 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$13[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1434 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1435 : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 1436 : 			break;

	jmp	$LN2@rundevice_
$LN263@rundevice_:

; 1437 : 		}
; 1438 : 		case 0xe4: {
; 1439 : 			opc_cmp(regs.x, mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+75]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1440 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1441 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1442 : 			break;

	jmp	$LN2@rundevice_
$LN264@rundevice_:

; 1443 : 		}
; 1444 : 		case 0xe5: {
; 1445 : 			opc_sbc(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1446 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1447 : 			actualticks += 3;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 3
	mov	DWORD PTR actualticks$[rbp], eax

; 1448 : 			break;

	jmp	$LN2@rundevice_
$LN265@rundevice_:

; 1449 : 		}
; 1450 : 		case 0xe6: {
; 1451 : 			mbus->writememory(_mem_zero, opc_inc(mbus->readmemory(_mem_zero)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR tv6782[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	movzx	ecx, BYTE PTR tv6782[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1452 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1453 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1454 : 			break;

	jmp	$LN2@rundevice_
$LN266@rundevice_:

; 1455 : 		}
; 1456 : 		case 0xe7: {
; 1457 : 			byte t = opc_inc(mbus->readmemory(_mem_zero));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$14[rbp], al

; 1458 : 			mbus->writememory(_mem_zero, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	movzx	r8d, BYTE PTR t$14[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1459 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$14[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1460 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1461 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1462 : 			break;

	jmp	$LN2@rundevice_
$LN267@rundevice_:

; 1463 : 		}
; 1464 : 		case 0xe8: { // inx
; 1465 : 			regs.x = opc_inc(regs.x);

	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+75]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+75], al

; 1466 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1467 : 			break;

	jmp	$LN2@rundevice_
$LN268@rundevice_:

; 1468 : 		}
; 1469 : 		case 0xe9: case 0xeb: {
; 1470 : 			opc_sbc(mbus->readmemory(_mem_immediate));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1471 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1472 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1473 : 			break;

	jmp	$LN2@rundevice_
$LN269@rundevice_:

; 1474 : 		}
; 1475 : 		case 0xea: { // nop
; 1476 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1477 : 			break;

	jmp	$LN2@rundevice_
$LN270@rundevice_:

; 1478 : 		}
; 1479 : 		case 0xec: {
; 1480 : 			opc_cmp(regs.x, mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	r8d, al
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR [rax+75]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_cmp@cpu2a03_fast@@AEAAXEE@Z	; cpu2a03_fast::opc_cmp

; 1481 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1482 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1483 : 			break;

	jmp	$LN2@rundevice_
$LN271@rundevice_:

; 1484 : 		}
; 1485 : 		case 0xed: {
; 1486 : 			opc_sbc(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1487 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1488 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1489 : 			break;

	jmp	$LN2@rundevice_
$LN272@rundevice_:

; 1490 : 		}
; 1491 : 		case 0xee: {
; 1492 : 			mbus->writememory(_mem_absolute, opc_inc(mbus->readmemory(_mem_absolute)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR tv6736[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	movzx	ecx, BYTE PTR tv6736[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1493 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1494 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1495 : 			break;

	jmp	$LN2@rundevice_
$LN273@rundevice_:

; 1496 : 		}
; 1497 : 		case 0xef: {
; 1498 : 			byte t = opc_inc(mbus->readmemory(_mem_absolute));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$15[rbp], al

; 1499 : 			mbus->writememory(_mem_absolute, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$15[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1500 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$15[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1501 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1502 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1503 : 			break;

	jmp	$LN2@rundevice_
$LN274@rundevice_:

; 1504 : 		}
; 1505 : 		case 0xf0: { // beq
; 1506 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1507 : 			if (regs.sr & cf_zero) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 2
	test	eax, eax
	je	$LN275@rundevice_

; 1508 : 				actualticks++;

	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax

; 1509 : 				if ((regs.pc & 0xFF00) != (_mem_relative & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN365@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv7262[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv7262[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv7289[rbp], eax
	jmp	SHORT $LN366@rundevice_
$LN365@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv7275[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv7275[rbp]
	sub	ecx, eax
	mov	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv7289[rbp], eax
$LN366@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	and	eax, 65280				; 0000ff00H
	cmp	eax, DWORD PTR tv7289[rbp]
	je	SHORT $LN277@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN277@rundevice_:

; 1510 : 				regs.pc = _mem_relative;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN367@rundevice_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv7306[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, DWORD PTR tv7306[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR tv7332[rbp], eax
	jmp	SHORT $LN368@rundevice_
$LN367@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	DWORD PTR tv7319[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	ecx, 128				; 00000080H
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR tv7319[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv7332[rbp], eax
$LN368@rundevice_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR tv7332[rbp]
	mov	WORD PTR [rax+72], cx
	jmp	SHORT $LN276@rundevice_
$LN275@rundevice_:

; 1511 : 			} else regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax
$LN276@rundevice_:

; 1512 : 			break;

	jmp	$LN2@rundevice_
$LN278@rundevice_:

; 1513 : 		}
; 1514 : 		case 0xf1: {
; 1515 : 			opc_sbc(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1516 : 			if (_mem_index_y_inc) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv7379[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv7379[rbp]
	cmp	ecx, eax
	je	SHORT $LN279@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN279@rundevice_:

; 1517 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1518 : 			actualticks += 5;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 5
	mov	DWORD PTR actualticks$[rbp], eax

; 1519 : 			break;

	jmp	$LN2@rundevice_
$LN280@rundevice_:

; 1520 : 		}
; 1521 : 		case 0xf2: {
; 1522 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1523 : 			break;

	jmp	$LN2@rundevice_
$LN281@rundevice_:

; 1524 : 		}
; 1525 : 		case 0xf3: {
; 1526 : 			byte t = opc_inc(mbus->readmemory(_mem_index_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$16[rbp], al

; 1527 : 			mbus->writememory(_mem_index_y, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word_wrap@bus@@QEAAGH@Z	; bus::readmemory_as_word_wrap
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$16[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1528 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$16[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1529 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1530 : 			actualticks += 8;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 8
	mov	DWORD PTR actualticks$[rbp], eax

; 1531 : 			break;

	jmp	$LN2@rundevice_
$LN282@rundevice_:

; 1532 : 		}
; 1533 : 		case 0xf5: {
; 1534 : 			opc_sbc(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1535 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1536 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1537 : 			break;

	jmp	$LN2@rundevice_
$LN283@rundevice_:

; 1538 : 		}
; 1539 : 		case 0xf6: {
; 1540 : 			mbus->writememory(_mem_zero_x, opc_inc(mbus->readmemory(_mem_zero_x)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR tv6700[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR tv6700[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1541 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1542 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1543 : 			break;

	jmp	$LN2@rundevice_
$LN284@rundevice_:

; 1544 : 		}
; 1545 : 		case 0xf7: {
; 1546 : 			byte t = opc_inc(mbus->readmemory(_mem_zero_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$17[rbp], al

; 1547 : 			mbus->writememory(_mem_zero_x, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	eax, al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movzx	r8d, BYTE PTR t$17[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1548 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$17[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1549 : 			regs.pc++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	inc	ax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1550 : 			actualticks += 6;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 6
	mov	DWORD PTR actualticks$[rbp], eax

; 1551 : 			break;

	jmp	$LN2@rundevice_
$LN285@rundevice_:

; 1552 : 		}
; 1553 : 		case 0xf8: { //sed
; 1554 : 			regs.sr |= cf_decimal;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 8
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1555 : 			actualticks += 2;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 2
	mov	DWORD PTR actualticks$[rbp], eax

; 1556 : 			break;

	jmp	$LN2@rundevice_
$LN286@rundevice_:

; 1557 : 		}
; 1558 : 		case 0xf9: {
; 1559 : 			opc_sbc(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1560 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1561 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1562 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_y & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv7631[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv7631[rbp]
	cmp	ecx, eax
	je	SHORT $LN287@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN287@rundevice_:

; 1563 : 			break;

	jmp	$LN2@rundevice_
$LN288@rundevice_:

; 1564 : 		}
; 1565 : 		case 0xfa: {
; 1566 : 			error_state = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+96], 1

; 1567 : 			break;

	jmp	$LN2@rundevice_
$LN289@rundevice_:

; 1568 : 		}
; 1569 : 		case 0xfb: {
; 1570 : 			byte t = opc_inc(mbus->readmemory(_mem_absolute_y));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$18[rbp], al

; 1571 : 			mbus->writememory(_mem_absolute_y, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+76]
	add	eax, ecx
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$18[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1572 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$18[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1573 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1574 : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 1575 : 			break;

	jmp	$LN2@rundevice_
$LN290@rundevice_:

; 1576 : 		}
; 1577 : 		case 0xfd: {
; 1578 : 			opc_sbc(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1579 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1580 : 			actualticks += 4;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 4
	mov	DWORD PTR actualticks$[rbp], eax

; 1581 : 			if ((_mem_absolute & 0xFF00) != (_mem_absolute_x & 0xFF00)) actualticks++;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR tv7735[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR tv7735[rbp]
	cmp	ecx, eax
	je	SHORT $LN291@rundevice_
	mov	eax, DWORD PTR actualticks$[rbp]
	inc	eax
	mov	DWORD PTR actualticks$[rbp], eax
$LN291@rundevice_:

; 1582 : 			break;

	jmp	$LN2@rundevice_
$LN292@rundevice_:

; 1583 : 		}
; 1584 : 		case 0xfe: {
; 1585 : 			mbus->writememory(_mem_absolute_x, opc_inc(mbus->readmemory(_mem_absolute_x)));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR tv6660[rbp], al
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR [rcx+72]
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	movzx	ecx, BYTE PTR tv6660[rbp]
	movzx	r8d, cl
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1586 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1587 : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax

; 1588 : 			break;

	jmp	$LN2@rundevice_
$LN293@rundevice_:

; 1589 : 		}
; 1590 : 		case 0xff: {
; 1591 : 			byte t = opc_inc(mbus->readmemory(_mem_absolute_x));

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_inc@cpu2a03_fast@@AEAAEE@Z		; cpu2a03_fast::opc_inc
	mov	BYTE PTR t$19[rbp], al

; 1592 : 			mbus->writememory(_mem_absolute_x, t);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory_as_word@bus@@QEAAGH@Z	; bus::readmemory_as_word
	movzx	eax, ax
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+75]
	add	eax, ecx
	movzx	eax, ax
	movzx	r8d, BYTE PTR t$19[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory

; 1593 : 			opc_sbc(t);

	movzx	edx, BYTE PTR t$19[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_sbc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_sbc

; 1594 : 			regs.pc += 2;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+72]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+72], ax

; 1595 : 			actualticks += 7;

	mov	eax, DWORD PTR actualticks$[rbp]
	add	eax, 7
	mov	DWORD PTR actualticks$[rbp], eax
$LN2@rundevice_:

; 1596 : 			break;
; 1597 : 		}
; 1598 : 	}
; 1599 : 	return actualticks * tick_rate;

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR actualticks$[rbp]
	imul	ecx, DWORD PTR [rax+16]
	mov	eax, ecx
$LN1@rundevice_:

; 1600 : }

	lea	rsp, QWORD PTR [rbp+1080]
	pop	rdi
	pop	rbp
	ret	0
	npad	3
$LN369@rundevice_:
	DD	$LN9@rundevice_
	DD	$LN10@rundevice_
	DD	$LN11@rundevice_
	DD	$LN12@rundevice_
	DD	$LN13@rundevice_
	DD	$LN14@rundevice_
	DD	$LN15@rundevice_
	DD	$LN16@rundevice_
	DD	$LN17@rundevice_
	DD	$LN18@rundevice_
	DD	$LN19@rundevice_
	DD	$LN20@rundevice_
	DD	$LN21@rundevice_
	DD	$LN22@rundevice_
	DD	$LN23@rundevice_
	DD	$LN24@rundevice_
	DD	$LN25@rundevice_
	DD	$LN29@rundevice_
	DD	$LN31@rundevice_
	DD	$LN32@rundevice_
	DD	$LN33@rundevice_
	DD	$LN34@rundevice_
	DD	$LN35@rundevice_
	DD	$LN36@rundevice_
	DD	$LN37@rundevice_
	DD	$LN38@rundevice_
	DD	$LN40@rundevice_
	DD	$LN41@rundevice_
	DD	$LN21@rundevice_
	DD	$LN42@rundevice_
	DD	$LN44@rundevice_
	DD	$LN45@rundevice_
	DD	$LN46@rundevice_
	DD	$LN47@rundevice_
	DD	$LN48@rundevice_
	DD	$LN49@rundevice_
	DD	$LN50@rundevice_
	DD	$LN51@rundevice_
	DD	$LN52@rundevice_
	DD	$LN53@rundevice_
	DD	$LN54@rundevice_
	DD	$LN55@rundevice_
	DD	$LN56@rundevice_
	DD	$LN20@rundevice_
	DD	$LN57@rundevice_
	DD	$LN58@rundevice_
	DD	$LN59@rundevice_
	DD	$LN60@rundevice_
	DD	$LN61@rundevice_
	DD	$LN65@rundevice_
	DD	$LN67@rundevice_
	DD	$LN68@rundevice_
	DD	$LN33@rundevice_
	DD	$LN69@rundevice_
	DD	$LN70@rundevice_
	DD	$LN71@rundevice_
	DD	$LN72@rundevice_
	DD	$LN73@rundevice_
	DD	$LN75@rundevice_
	DD	$LN76@rundevice_
	DD	$LN21@rundevice_
	DD	$LN77@rundevice_
	DD	$LN79@rundevice_
	DD	$LN80@rundevice_
	DD	$LN81@rundevice_
	DD	$LN82@rundevice_
	DD	$LN83@rundevice_
	DD	$LN84@rundevice_
	DD	$LN13@rundevice_
	DD	$LN85@rundevice_
	DD	$LN86@rundevice_
	DD	$LN87@rundevice_
	DD	$LN88@rundevice_
	DD	$LN89@rundevice_
	DD	$LN90@rundevice_
	DD	$LN91@rundevice_
	DD	$LN92@rundevice_
	DD	$LN93@rundevice_
	DD	$LN94@rundevice_
	DD	$LN95@rundevice_
	DD	$LN96@rundevice_
	DD	$LN100@rundevice_
	DD	$LN102@rundevice_
	DD	$LN103@rundevice_
	DD	$LN33@rundevice_
	DD	$LN104@rundevice_
	DD	$LN105@rundevice_
	DD	$LN106@rundevice_
	DD	$LN107@rundevice_
	DD	$LN108@rundevice_
	DD	$LN110@rundevice_
	DD	$LN111@rundevice_
	DD	$LN21@rundevice_
	DD	$LN112@rundevice_
	DD	$LN114@rundevice_
	DD	$LN115@rundevice_
	DD	$LN116@rundevice_
	DD	$LN117@rundevice_
	DD	$LN118@rundevice_
	DD	$LN119@rundevice_
	DD	$LN13@rundevice_
	DD	$LN120@rundevice_
	DD	$LN121@rundevice_
	DD	$LN122@rundevice_
	DD	$LN123@rundevice_
	DD	$LN124@rundevice_
	DD	$LN125@rundevice_
	DD	$LN126@rundevice_
	DD	$LN127@rundevice_
	DD	$LN128@rundevice_
	DD	$LN129@rundevice_
	DD	$LN130@rundevice_
	DD	$LN131@rundevice_
	DD	$LN135@rundevice_
	DD	$LN137@rundevice_
	DD	$LN138@rundevice_
	DD	$LN33@rundevice_
	DD	$LN139@rundevice_
	DD	$LN140@rundevice_
	DD	$LN141@rundevice_
	DD	$LN142@rundevice_
	DD	$LN143@rundevice_
	DD	$LN145@rundevice_
	DD	$LN146@rundevice_
	DD	$LN21@rundevice_
	DD	$LN147@rundevice_
	DD	$LN149@rundevice_
	DD	$LN150@rundevice_
	DD	$LN151@rundevice_
	DD	$LN152@rundevice_
	DD	$LN151@rundevice_
	DD	$LN153@rundevice_
	DD	$LN154@rundevice_
	DD	$LN155@rundevice_
	DD	$LN156@rundevice_
	DD	$LN157@rundevice_
	DD	$LN158@rundevice_
	DD	$LN151@rundevice_
	DD	$LN159@rundevice_
	DD	$LN160@rundevice_
	DD	$LN161@rundevice_
	DD	$LN162@rundevice_
	DD	$LN163@rundevice_
	DD	$LN164@rundevice_
	DD	$LN165@rundevice_
	DD	$LN169@rundevice_
	DD	$LN170@rundevice_
	DD	$LN170@rundevice_
	DD	$LN171@rundevice_
	DD	$LN172@rundevice_
	DD	$LN173@rundevice_
	DD	$LN174@rundevice_
	DD	$LN175@rundevice_
	DD	$LN176@rundevice_
	DD	$LN177@rundevice_
	DD	$LN178@rundevice_
	DD	$LN179@rundevice_
	DD	$LN180@rundevice_
	DD	$LN181@rundevice_
	DD	$LN182@rundevice_
	DD	$LN183@rundevice_
	DD	$LN184@rundevice_
	DD	$LN185@rundevice_
	DD	$LN186@rundevice_
	DD	$LN187@rundevice_
	DD	$LN188@rundevice_
	DD	$LN189@rundevice_
	DD	$LN190@rundevice_
	DD	$LN191@rundevice_
	DD	$LN192@rundevice_
	DD	$LN193@rundevice_
	DD	$LN194@rundevice_
	DD	$LN195@rundevice_
	DD	$LN196@rundevice_
	DD	$LN197@rundevice_
	DD	$LN198@rundevice_
	DD	$LN199@rundevice_
	DD	$LN203@rundevice_
	DD	$LN205@rundevice_
	DD	$LN206@rundevice_
	DD	$LN208@rundevice_
	DD	$LN209@rundevice_
	DD	$LN210@rundevice_
	DD	$LN211@rundevice_
	DD	$LN212@rundevice_
	DD	$LN213@rundevice_
	DD	$LN215@rundevice_
	DD	$LN216@rundevice_
	DD	$LN217@rundevice_
	DD	$LN219@rundevice_
	DD	$LN221@rundevice_
	DD	$LN223@rundevice_
	DD	$LN225@rundevice_
	DD	$LN226@rundevice_
	DD	$LN151@rundevice_
	DD	$LN227@rundevice_
	DD	$LN228@rundevice_
	DD	$LN229@rundevice_
	DD	$LN230@rundevice_
	DD	$LN231@rundevice_
	DD	$LN232@rundevice_
	DD	$LN233@rundevice_
	DD	$LN234@rundevice_
	DD	$LN235@rundevice_
	DD	$LN236@rundevice_
	DD	$LN237@rundevice_
	DD	$LN238@rundevice_
	DD	$LN239@rundevice_
	DD	$LN240@rundevice_
	DD	$LN244@rundevice_
	DD	$LN246@rundevice_
	DD	$LN247@rundevice_
	DD	$LN33@rundevice_
	DD	$LN248@rundevice_
	DD	$LN249@rundevice_
	DD	$LN250@rundevice_
	DD	$LN251@rundevice_
	DD	$LN252@rundevice_
	DD	$LN254@rundevice_
	DD	$LN255@rundevice_
	DD	$LN21@rundevice_
	DD	$LN256@rundevice_
	DD	$LN258@rundevice_
	DD	$LN259@rundevice_
	DD	$LN260@rundevice_
	DD	$LN261@rundevice_
	DD	$LN151@rundevice_
	DD	$LN262@rundevice_
	DD	$LN263@rundevice_
	DD	$LN264@rundevice_
	DD	$LN265@rundevice_
	DD	$LN266@rundevice_
	DD	$LN267@rundevice_
	DD	$LN268@rundevice_
	DD	$LN269@rundevice_
	DD	$LN268@rundevice_
	DD	$LN270@rundevice_
	DD	$LN271@rundevice_
	DD	$LN272@rundevice_
	DD	$LN273@rundevice_
	DD	$LN274@rundevice_
	DD	$LN278@rundevice_
	DD	$LN280@rundevice_
	DD	$LN281@rundevice_
	DD	$LN33@rundevice_
	DD	$LN282@rundevice_
	DD	$LN283@rundevice_
	DD	$LN284@rundevice_
	DD	$LN285@rundevice_
	DD	$LN286@rundevice_
	DD	$LN288@rundevice_
	DD	$LN289@rundevice_
	DD	$LN21@rundevice_
	DD	$LN290@rundevice_
	DD	$LN292@rundevice_
	DD	$LN293@rundevice_
?rundevice_internal@cpu2a03_fast@@AEAAHH@Z ENDP		; cpu2a03_fast::rundevice_internal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_cmp@cpu2a03_fast@@AEAAXEE@Z
_TEXT	SEGMENT
c$ = 4
tv147 = 212
tv133 = 212
tv87 = 212
this$ = 256
rdata$ = 264
data$ = 272
?opc_cmp@cpu2a03_fast@@AEAAXEE@Z PROC			; cpu2a03_fast::opc_cmp, COMDAT

; 1612 : void cpu2a03_fast::opc_cmp(byte rdata, byte data) {

$LN9:
	mov	BYTE PTR [rsp+24], r8b
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1613 : 	regs.sr &= 0xFF - (cf_negative | cf_zero | cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 124				; 0000007cH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1614 : 	word c = word(rdata) - data;

	movzx	eax, BYTE PTR rdata$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	sub	eax, ecx
	mov	WORD PTR c$[rbp], ax

; 1615 : 	regs.sr = rdata >= data ? regs.sr | cf_carry : regs.sr;

	movzx	eax, BYTE PTR rdata$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	cmp	eax, ecx
	jl	SHORT $LN3@opc_cmp
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv87[rbp], eax
	jmp	SHORT $LN4@opc_cmp
$LN3@opc_cmp:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv87[rbp], eax
$LN4@opc_cmp:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv87[rbp]
	mov	BYTE PTR [rax+78], cl

; 1616 : 	regs.sr = c & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, WORD PTR c$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN5@opc_cmp
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv133[rbp], eax
	jmp	SHORT $LN6@opc_cmp
$LN5@opc_cmp:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv133[rbp], eax
$LN6@opc_cmp:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv133[rbp]
	mov	BYTE PTR [rax+78], cl

; 1617 : 	regs.sr = !(c & 0xFF) ? regs.sr | cf_zero : regs.sr;

	movzx	eax, WORD PTR c$[rbp]
	and	eax, 255				; 000000ffH
	test	eax, eax
	jne	SHORT $LN7@opc_cmp
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv147[rbp], eax
	jmp	SHORT $LN8@opc_cmp
$LN7@opc_cmp:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv147[rbp], eax
$LN8@opc_cmp:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv147[rbp]
	mov	BYTE PTR [rax+78], cl

; 1618 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?opc_cmp@cpu2a03_fast@@AEAAXEE@Z ENDP			; cpu2a03_fast::opc_cmp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z
_TEXT	SEGMENT
tv128 = 192
tv83 = 192
this$ = 240
rdata$ = 248
data$ = 256
?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z PROC		; cpu2a03_fast::opc_ld_, COMDAT

; 1605 : void cpu2a03_fast::opc_ld_(byte &rdata, byte data) {

$LN7:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1606 : 	rdata = data;

	mov	rax, QWORD PTR rdata$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	mov	BYTE PTR [rax], cl

; 1607 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1608 : 	regs.sr = data & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_ld_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv83[rbp], eax
	jmp	SHORT $LN4@opc_ld_
$LN3@opc_ld_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv83[rbp], eax
$LN4@opc_ld_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv83[rbp]
	mov	BYTE PTR [rax+78], cl

; 1609 : 	regs.sr = !data ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	test	eax, eax
	jne	SHORT $LN5@opc_ld_
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv128[rbp], eax
	jmp	SHORT $LN6@opc_ld_
$LN5@opc_ld_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv128[rbp], eax
$LN6@opc_ld_:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv128[rbp]
	mov	BYTE PTR [rax+78], cl

; 1610 : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?opc_ld_@cpu2a03_fast@@AEAAXAEAEE@Z ENDP		; cpu2a03_fast::opc_ld_
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_inc@cpu2a03_fast@@AEAAEE@Z
_TEXT	SEGMENT
t$ = 4
tv131 = 212
tv86 = 212
this$ = 256
data$ = 264
?opc_inc@cpu2a03_fast@@AEAAEE@Z PROC			; cpu2a03_fast::opc_inc, COMDAT

; 1716 : byte cpu2a03_fast::opc_inc(byte data) {

$LN7:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1717 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1718 : 	byte t = data + 1;

	movzx	eax, BYTE PTR data$[rbp]
	inc	eax
	mov	BYTE PTR t$[rbp], al

; 1719 : 	regs.sr = t & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR t$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_inc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv86[rbp], eax
	jmp	SHORT $LN4@opc_inc
$LN3@opc_inc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv86[rbp], eax
$LN4@opc_inc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv86[rbp]
	mov	BYTE PTR [rax+78], cl

; 1720 : 	regs.sr = !t ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR t$[rbp]
	test	eax, eax
	jne	SHORT $LN5@opc_inc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv131[rbp], eax
	jmp	SHORT $LN6@opc_inc
$LN5@opc_inc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv131[rbp], eax
$LN6@opc_inc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv131[rbp]
	mov	BYTE PTR [rax+78], cl

; 1721 : 	return t;

	movzx	eax, BYTE PTR t$[rbp]

; 1722 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?opc_inc@cpu2a03_fast@@AEAAEE@Z ENDP			; cpu2a03_fast::opc_inc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_dec@cpu2a03_fast@@AEAAEE@Z
_TEXT	SEGMENT
t$ = 4
tv131 = 212
tv86 = 212
this$ = 256
data$ = 264
?opc_dec@cpu2a03_fast@@AEAAEE@Z PROC			; cpu2a03_fast::opc_dec, COMDAT

; 1708 : byte cpu2a03_fast::opc_dec(byte data) {

$LN7:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1709 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1710 : 	byte t = data - 1;

	movzx	eax, BYTE PTR data$[rbp]
	dec	eax
	mov	BYTE PTR t$[rbp], al

; 1711 : 	regs.sr = t & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR t$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_dec
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv86[rbp], eax
	jmp	SHORT $LN4@opc_dec
$LN3@opc_dec:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv86[rbp], eax
$LN4@opc_dec:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv86[rbp]
	mov	BYTE PTR [rax+78], cl

; 1712 : 	regs.sr = !t ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR t$[rbp]
	test	eax, eax
	jne	SHORT $LN5@opc_dec
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv131[rbp], eax
	jmp	SHORT $LN6@opc_dec
$LN5@opc_dec:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv131[rbp], eax
$LN6@opc_dec:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv131[rbp]
	mov	BYTE PTR [rax+78], cl

; 1713 : 	return t;

	movzx	eax, BYTE PTR t$[rbp]

; 1714 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?opc_dec@cpu2a03_fast@@AEAAEE@Z ENDP			; cpu2a03_fast::opc_dec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_sbc@cpu2a03_fast@@AEAAXE@Z
_TEXT	SEGMENT
this$ = 224
data$ = 232
?opc_sbc@cpu2a03_fast@@AEAAXE@Z PROC			; cpu2a03_fast::opc_sbc, COMDAT

; 1704 : void cpu2a03_fast::opc_sbc(byte data) {

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1705 : 	opc_adc(data ^ 0xFF);		// that was easy

	movzx	eax, BYTE PTR data$[rbp]
	xor	eax, 255				; 000000ffH
	movzx	edx, al
	mov	rcx, QWORD PTR this$[rbp]
	call	?opc_adc@cpu2a03_fast@@AEAAXE@Z		; cpu2a03_fast::opc_adc

; 1706 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?opc_sbc@cpu2a03_fast@@AEAAXE@Z ENDP			; cpu2a03_fast::opc_sbc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_adc@cpu2a03_fast@@AEAAXE@Z
_TEXT	SEGMENT
carry_bit$ = 4
data2$ = 36
tv184 = 244
tv170 = 244
tv156 = 244
tv143 = 244
tv78 = 244
this$ = 288
data$ = 296
?opc_adc@cpu2a03_fast@@AEAAXE@Z PROC			; cpu2a03_fast::opc_adc, COMDAT

; 1692 : void cpu2a03_fast::opc_adc(byte data) {

$LN13:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1693 : 	bool carry_bit = (regs.sr & cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 1
	mov	BYTE PTR carry_bit$[rbp], al

; 1694 : 	word data2 = carry_bit ? regs.ac + 1 : regs.ac;

	movzx	eax, BYTE PTR carry_bit$[rbp]
	test	eax, eax
	je	SHORT $LN3@opc_adc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	inc	eax
	mov	DWORD PTR tv78[rbp], eax
	jmp	SHORT $LN4@opc_adc
$LN3@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	DWORD PTR tv78[rbp], eax
$LN4@opc_adc:
	movzx	eax, WORD PTR tv78[rbp]
	mov	WORD PTR data2$[rbp], ax

; 1695 : 	data2 += data;

	movzx	eax, BYTE PTR data$[rbp]
	movzx	ecx, WORD PTR data2$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	WORD PTR data2$[rbp], ax

; 1696 : 	regs.sr &= 0xFF - (cf_overflow | cf_carry | cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 60					; 0000003cH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1697 : 	regs.sr = ((regs.ac ^ byte(data2)) & ((data ^ byte(data2)) & 0x80)) ? regs.sr | cf_overflow : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	movzx	ecx, BYTE PTR data2$[rbp]
	xor	eax, ecx
	movzx	ecx, BYTE PTR data$[rbp]
	movzx	edx, BYTE PTR data2$[rbp]
	xor	ecx, edx
	and	ecx, 128				; 00000080H
	and	eax, ecx
	test	eax, eax
	je	SHORT $LN5@opc_adc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 64					; 00000040H
	mov	DWORD PTR tv143[rbp], eax
	jmp	SHORT $LN6@opc_adc
$LN5@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv143[rbp], eax
$LN6@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv143[rbp]
	mov	BYTE PTR [rax+78], cl

; 1698 : 	regs.sr = data2 > 0xFF ? regs.sr | cf_carry : regs.sr;

	movzx	eax, WORD PTR data2$[rbp]
	cmp	eax, 255				; 000000ffH
	jle	SHORT $LN7@opc_adc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv156[rbp], eax
	jmp	SHORT $LN8@opc_adc
$LN7@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv156[rbp], eax
$LN8@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv156[rbp]
	mov	BYTE PTR [rax+78], cl

; 1699 : 	regs.sr = data2 & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, WORD PTR data2$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN9@opc_adc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv170[rbp], eax
	jmp	SHORT $LN10@opc_adc
$LN9@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv170[rbp], eax
$LN10@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv170[rbp]
	mov	BYTE PTR [rax+78], cl

; 1700 : 	regs.sr = !(data2 & 0xFF) ? regs.sr | cf_zero : regs.sr;

	movzx	eax, WORD PTR data2$[rbp]
	and	eax, 255				; 000000ffH
	test	eax, eax
	jne	SHORT $LN11@opc_adc
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv184[rbp], eax
	jmp	SHORT $LN12@opc_adc
$LN11@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv184[rbp], eax
$LN12@opc_adc:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv184[rbp]
	mov	BYTE PTR [rax+78], cl

; 1701 : 	regs.ac = byte(data2);

	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR data2$[rbp]
	mov	BYTE PTR [rax+74], cl

; 1702 : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?opc_adc@cpu2a03_fast@@AEAAXE@Z ENDP			; cpu2a03_fast::opc_adc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z
_TEXT	SEGMENT
data$ = 4
tv156 = 212
tv143 = 212
tv87 = 212
tv73 = 212
this$ = 256
addr$ = 264
memory$ = 272
?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z PROC			; cpu2a03_fast::opc_lsr, COMDAT

; 1682 : void cpu2a03_fast::opc_lsr(word addr, bool memory) {

$LN13:
	mov	BYTE PTR [rsp+24], r8b
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1683 : 	byte data = memory ? mbus->readmemory(addr) : regs.ac;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN5@opc_lsr
	movzx	eax, WORD PTR addr$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR tv73[rbp], al
	jmp	SHORT $LN6@opc_lsr
$LN5@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	BYTE PTR tv73[rbp], al
$LN6@opc_lsr:
	movzx	eax, BYTE PTR tv73[rbp]
	mov	BYTE PTR data$[rbp], al

; 1684 : 	regs.sr = data & 0x01 ? regs.sr | cf_carry : regs.sr & (0xFF - cf_carry);

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@opc_lsr
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv87[rbp], eax
	jmp	SHORT $LN8@opc_lsr
$LN7@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	DWORD PTR tv87[rbp], eax
$LN8@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv87[rbp]
	mov	BYTE PTR [rax+78], cl

; 1685 : 	data = data >> 1;

	movzx	eax, BYTE PTR data$[rbp]
	sar	eax, 1
	mov	BYTE PTR data$[rbp], al

; 1686 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1687 : 	regs.sr = data & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN9@opc_lsr
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv143[rbp], eax
	jmp	SHORT $LN10@opc_lsr
$LN9@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv143[rbp], eax
$LN10@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv143[rbp]
	mov	BYTE PTR [rax+78], cl

; 1688 : 	regs.sr = !data ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	test	eax, eax
	jne	SHORT $LN11@opc_lsr
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv156[rbp], eax
	jmp	SHORT $LN12@opc_lsr
$LN11@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv156[rbp], eax
$LN12@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv156[rbp]
	mov	BYTE PTR [rax+78], cl

; 1689 : 	if (memory) mbus->writememory(addr, data); else regs.ac = data;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN2@opc_lsr
	movzx	eax, WORD PTR addr$[rbp]
	movzx	r8d, BYTE PTR data$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory
	jmp	SHORT $LN3@opc_lsr
$LN2@opc_lsr:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	mov	BYTE PTR [rax+74], cl
$LN3@opc_lsr:

; 1690 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?opc_lsr@cpu2a03_fast@@AEAAXG_N@Z ENDP			; cpu2a03_fast::opc_lsr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_xor@cpu2a03_fast@@AEAAXE@Z
_TEXT	SEGMENT
tv140 = 192
tv93 = 192
this$ = 240
data$ = 248
?opc_xor@cpu2a03_fast@@AEAAXE@Z PROC			; cpu2a03_fast::opc_xor, COMDAT

; 1675 : void cpu2a03_fast::opc_xor(byte data) {

$LN7:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1676 : 	regs.ac ^= data;

	movzx	eax, BYTE PTR data$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	xor	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+74], al

; 1677 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1678 : 	regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_xor
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv93[rbp], eax
	jmp	SHORT $LN4@opc_xor
$LN3@opc_xor:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv93[rbp], eax
$LN4@opc_xor:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv93[rbp]
	mov	BYTE PTR [rax+78], cl

; 1679 : 	regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN5@opc_xor
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv140[rbp], eax
	jmp	SHORT $LN6@opc_xor
$LN5@opc_xor:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv140[rbp], eax
$LN6@opc_xor:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv140[rbp]
	mov	BYTE PTR [rax+78], cl

; 1680 : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?opc_xor@cpu2a03_fast@@AEAAXE@Z ENDP			; cpu2a03_fast::opc_xor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_bit@cpu2a03_fast@@AEAAXE@Z
_TEXT	SEGMENT
tv146 = 192
tv129 = 192
tv83 = 192
this$ = 240
data$ = 248
?opc_bit@cpu2a03_fast@@AEAAXE@Z PROC			; cpu2a03_fast::opc_bit, COMDAT

; 1668 : void cpu2a03_fast::opc_bit(byte data) {

$LN9:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1669 : 	regs.sr &= 0xFF - (cf_negative | cf_zero | cf_overflow);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 61					; 0000003dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1670 : 	regs.sr = data & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_bit
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv83[rbp], eax
	jmp	SHORT $LN4@opc_bit
$LN3@opc_bit:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv83[rbp], eax
$LN4@opc_bit:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv83[rbp]
	mov	BYTE PTR [rax+78], cl

; 1671 : 	regs.sr = data & 0x40 ? regs.sr | cf_overflow : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN5@opc_bit
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 64					; 00000040H
	mov	DWORD PTR tv129[rbp], eax
	jmp	SHORT $LN6@opc_bit
$LN5@opc_bit:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv129[rbp], eax
$LN6@opc_bit:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv129[rbp]
	mov	BYTE PTR [rax+78], cl

; 1672 : 	regs.sr = !(regs.ac & data) ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	movzx	ecx, BYTE PTR data$[rbp]
	and	eax, ecx
	test	eax, eax
	jne	SHORT $LN7@opc_bit
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv146[rbp], eax
	jmp	SHORT $LN8@opc_bit
$LN7@opc_bit:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv146[rbp], eax
$LN8@opc_bit:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv146[rbp]
	mov	BYTE PTR [rax+78], cl

; 1673 : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?opc_bit@cpu2a03_fast@@AEAAXE@Z ENDP			; cpu2a03_fast::opc_bit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_ror@cpu2a03_fast@@AEAAXG_N@Z
_TEXT	SEGMENT
carry_bit$ = 4
data$ = 36
tv166 = 244
tv153 = 244
tv92 = 244
tv78 = 244
this$ = 288
addr$ = 296
memory$ = 304
?opc_ror@cpu2a03_fast@@AEAAXG_N@Z PROC			; cpu2a03_fast::opc_ror, COMDAT

; 1656 : void cpu2a03_fast::opc_ror(word addr, bool memory) {

$LN14:
	mov	BYTE PTR [rsp+24], r8b
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1657 : 	bool carry_bit = (regs.sr & cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 1
	mov	BYTE PTR carry_bit$[rbp], al

; 1658 : 	byte data = memory ? mbus->readmemory(addr) : regs.ac;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN6@opc_ror
	movzx	eax, WORD PTR addr$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR tv78[rbp], al
	jmp	SHORT $LN7@opc_ror
$LN6@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	BYTE PTR tv78[rbp], al
$LN7@opc_ror:
	movzx	eax, BYTE PTR tv78[rbp]
	mov	BYTE PTR data$[rbp], al

; 1659 : 	regs.sr = data & 0x01 ? regs.sr | cf_carry : regs.sr & (0xFF - cf_carry);

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN8@opc_ror
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv92[rbp], eax
	jmp	SHORT $LN9@opc_ror
$LN8@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	DWORD PTR tv92[rbp], eax
$LN9@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv92[rbp]
	mov	BYTE PTR [rax+78], cl

; 1660 : 	data = data >> 1;

	movzx	eax, BYTE PTR data$[rbp]
	sar	eax, 1
	mov	BYTE PTR data$[rbp], al

; 1661 : 	if (carry_bit) data += 0x80;

	movzx	eax, BYTE PTR carry_bit$[rbp]
	test	eax, eax
	je	SHORT $LN2@opc_ror
	movzx	eax, BYTE PTR data$[rbp]
	add	eax, 128				; 00000080H
	mov	BYTE PTR data$[rbp], al
$LN2@opc_ror:

; 1662 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1663 : 	regs.sr = data & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN10@opc_ror
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv153[rbp], eax
	jmp	SHORT $LN11@opc_ror
$LN10@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv153[rbp], eax
$LN11@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv153[rbp]
	mov	BYTE PTR [rax+78], cl

; 1664 : 	regs.sr = !data ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	test	eax, eax
	jne	SHORT $LN12@opc_ror
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv166[rbp], eax
	jmp	SHORT $LN13@opc_ror
$LN12@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv166[rbp], eax
$LN13@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv166[rbp]
	mov	BYTE PTR [rax+78], cl

; 1665 : 	if (memory) mbus->writememory(addr, data); else regs.ac = data;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN3@opc_ror
	movzx	eax, WORD PTR addr$[rbp]
	movzx	r8d, BYTE PTR data$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory
	jmp	SHORT $LN4@opc_ror
$LN3@opc_ror:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	mov	BYTE PTR [rax+74], cl
$LN4@opc_ror:

; 1666 : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?opc_ror@cpu2a03_fast@@AEAAXG_N@Z ENDP			; cpu2a03_fast::opc_ror
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_rol@cpu2a03_fast@@AEAAXG_N@Z
_TEXT	SEGMENT
carry_bit$ = 4
data$ = 36
tv164 = 244
tv151 = 244
tv92 = 244
tv78 = 244
this$ = 288
addr$ = 296
memory$ = 304
?opc_rol@cpu2a03_fast@@AEAAXG_N@Z PROC			; cpu2a03_fast::opc_rol, COMDAT

; 1644 : void cpu2a03_fast::opc_rol(word addr, bool memory) {

$LN14:
	mov	BYTE PTR [rsp+24], r8b
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1645 : 	bool carry_bit = (regs.sr & cf_carry);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 1
	mov	BYTE PTR carry_bit$[rbp], al

; 1646 : 	byte data = memory ? mbus->readmemory(addr) : regs.ac;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN6@opc_rol
	movzx	eax, WORD PTR addr$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR tv78[rbp], al
	jmp	SHORT $LN7@opc_rol
$LN6@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	BYTE PTR tv78[rbp], al
$LN7@opc_rol:
	movzx	eax, BYTE PTR tv78[rbp]
	mov	BYTE PTR data$[rbp], al

; 1647 : 	regs.sr = data & 0x80 ? regs.sr | cf_carry : regs.sr & (0xFF - cf_carry);

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN8@opc_rol
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv92[rbp], eax
	jmp	SHORT $LN9@opc_rol
$LN8@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	DWORD PTR tv92[rbp], eax
$LN9@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv92[rbp]
	mov	BYTE PTR [rax+78], cl

; 1648 : 	data = data << 1;

	movzx	eax, BYTE PTR data$[rbp]
	shl	eax, 1
	mov	BYTE PTR data$[rbp], al

; 1649 : 	if (carry_bit) data++;	// add carry

	movzx	eax, BYTE PTR carry_bit$[rbp]
	test	eax, eax
	je	SHORT $LN2@opc_rol
	movzx	eax, BYTE PTR data$[rbp]
	inc	al
	mov	BYTE PTR data$[rbp], al
$LN2@opc_rol:

; 1650 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1651 : 	regs.sr = data & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN10@opc_rol
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv151[rbp], eax
	jmp	SHORT $LN11@opc_rol
$LN10@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv151[rbp], eax
$LN11@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv151[rbp]
	mov	BYTE PTR [rax+78], cl

; 1652 : 	regs.sr = !data ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	test	eax, eax
	jne	SHORT $LN12@opc_rol
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv164[rbp], eax
	jmp	SHORT $LN13@opc_rol
$LN12@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv164[rbp], eax
$LN13@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv164[rbp]
	mov	BYTE PTR [rax+78], cl

; 1653 : 	if (memory) mbus->writememory(addr, data); else regs.ac = data;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN3@opc_rol
	movzx	eax, WORD PTR addr$[rbp]
	movzx	r8d, BYTE PTR data$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory
	jmp	SHORT $LN4@opc_rol
$LN3@opc_rol:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	mov	BYTE PTR [rax+74], cl
$LN4@opc_rol:

; 1654 : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?opc_rol@cpu2a03_fast@@AEAAXG_N@Z ENDP			; cpu2a03_fast::opc_rol
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_and@cpu2a03_fast@@AEAAXE@Z
_TEXT	SEGMENT
tv140 = 192
tv93 = 192
this$ = 240
data$ = 248
?opc_and@cpu2a03_fast@@AEAAXE@Z PROC			; cpu2a03_fast::opc_and, COMDAT

; 1637 : void cpu2a03_fast::opc_and(byte data) {

$LN7:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1638 : 	regs.ac &= data;

	movzx	eax, BYTE PTR data$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	and	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+74], al

; 1639 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1640 : 	regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_and
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv93[rbp], eax
	jmp	SHORT $LN4@opc_and
$LN3@opc_and:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv93[rbp], eax
$LN4@opc_and:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv93[rbp]
	mov	BYTE PTR [rax+78], cl

; 1641 : 	regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN5@opc_and
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv140[rbp], eax
	jmp	SHORT $LN6@opc_and
$LN5@opc_and:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv140[rbp], eax
$LN6@opc_and:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv140[rbp]
	mov	BYTE PTR [rax+78], cl

; 1642 : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?opc_and@cpu2a03_fast@@AEAAXE@Z ENDP			; cpu2a03_fast::opc_and
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_asl@cpu2a03_fast@@AEAAXG_N@Z
_TEXT	SEGMENT
data$ = 4
tv156 = 212
tv143 = 212
tv87 = 212
tv73 = 212
this$ = 256
addr$ = 264
memory$ = 272
?opc_asl@cpu2a03_fast@@AEAAXG_N@Z PROC			; cpu2a03_fast::opc_asl, COMDAT

; 1627 : void cpu2a03_fast::opc_asl(word addr, bool memory) {

$LN13:
	mov	BYTE PTR [rsp+24], r8b
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1628 : 	byte data = memory ? mbus->readmemory(addr) : regs.ac;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN5@opc_asl
	movzx	eax, WORD PTR addr$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?readmemory@bus@@QEAAEH@Z		; bus::readmemory
	mov	BYTE PTR tv73[rbp], al
	jmp	SHORT $LN6@opc_asl
$LN5@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	mov	BYTE PTR tv73[rbp], al
$LN6@opc_asl:
	movzx	eax, BYTE PTR tv73[rbp]
	mov	BYTE PTR data$[rbp], al

; 1629 : 	regs.sr = data & 0x80 ? regs.sr | cf_carry : regs.sr & (0xFF - cf_carry);

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN7@opc_asl
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 1
	mov	DWORD PTR tv87[rbp], eax
	jmp	SHORT $LN8@opc_asl
$LN7@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 254				; 000000feH
	mov	DWORD PTR tv87[rbp], eax
$LN8@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv87[rbp]
	mov	BYTE PTR [rax+78], cl

; 1630 : 	data = data << 1;

	movzx	eax, BYTE PTR data$[rbp]
	shl	eax, 1
	mov	BYTE PTR data$[rbp], al

; 1631 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1632 : 	regs.sr = data & 0x80 ? regs.sr | cf_negative : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN9@opc_asl
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv143[rbp], eax
	jmp	SHORT $LN10@opc_asl
$LN9@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv143[rbp], eax
$LN10@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv143[rbp]
	mov	BYTE PTR [rax+78], cl

; 1633 : 	regs.sr = !data ? regs.sr | cf_zero : regs.sr;

	movzx	eax, BYTE PTR data$[rbp]
	test	eax, eax
	jne	SHORT $LN11@opc_asl
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv156[rbp], eax
	jmp	SHORT $LN12@opc_asl
$LN11@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv156[rbp], eax
$LN12@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv156[rbp]
	mov	BYTE PTR [rax+78], cl

; 1634 : 	if (memory) mbus->writememory(addr, data); else regs.ac = data;

	movzx	eax, BYTE PTR memory$[rbp]
	test	eax, eax
	je	SHORT $LN2@opc_asl
	movzx	eax, WORD PTR addr$[rbp]
	movzx	r8d, BYTE PTR data$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+88]
	call	?writememory@bus@@QEAAXHE@Z		; bus::writememory
	jmp	SHORT $LN3@opc_asl
$LN2@opc_asl:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR data$[rbp]
	mov	BYTE PTR [rax+74], cl
$LN3@opc_asl:

; 1635 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?opc_asl@cpu2a03_fast@@AEAAXG_N@Z ENDP			; cpu2a03_fast::opc_asl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?opc_ora@cpu2a03_fast@@AEAAXE@Z
_TEXT	SEGMENT
tv140 = 192
tv93 = 192
this$ = 240
data$ = 248
?opc_ora@cpu2a03_fast@@AEAAXE@Z PROC			; cpu2a03_fast::opc_ora, COMDAT

; 1620 : void cpu2a03_fast::opc_ora(byte data) {

$LN7:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode

; 1621 : 	regs.ac |= data;

	movzx	eax, BYTE PTR data$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR [rcx+74]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+74], al

; 1622 : 	regs.sr &= 0xFF - (cf_negative | cf_zero);

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	and	eax, 125				; 0000007dH
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+78], al

; 1623 : 	regs.sr = regs.ac & 0x80 ? regs.sr | cf_negative : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN3@opc_ora
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	bts	eax, 7
	mov	DWORD PTR tv93[rbp], eax
	jmp	SHORT $LN4@opc_ora
$LN3@opc_ora:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv93[rbp], eax
$LN4@opc_ora:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv93[rbp]
	mov	BYTE PTR [rax+78], cl

; 1624 : 	regs.sr = !regs.ac ? regs.sr | cf_zero : regs.sr;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN5@opc_ora
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	or	eax, 2
	mov	DWORD PTR tv140[rbp], eax
	jmp	SHORT $LN6@opc_ora
$LN5@opc_ora:
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+78]
	mov	DWORD PTR tv140[rbp], eax
$LN6@opc_ora:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv140[rbp]
	mov	BYTE PTR [rax+78], cl

; 1625 : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?opc_ora@cpu2a03_fast@@AEAAXE@Z ENDP			; cpu2a03_fast::opc_ora
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1runtime_error@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0runtime_error@std@@QEAA@PEBD@Z PROC			; std::runtime_error::runtime_error, COMDAT

; 170  : 		{	// construct from message string

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__F007F164_stdexcept
	call	__CheckForDebuggerJustMyCode

; 169  : 		: _Mybase(_Message)

	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBD@Z		; std::exception::exception

; 170  : 		{	// construct from message string

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rax], rcx

; 171  : 		}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0runtime_error@std@@QEAA@PEBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 90   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rbp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rbp]

; 92   :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 86   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy
	npad	1

; 87   :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 8
$T4 = 248
__$ArrayPad$ = 264
this$ = 304
_Message$ = 312
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 55   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	mov	QWORD PTR $T4[rbp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 54   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 56   :         __std_exception_data _InitData = { _Message, true };

	mov	rax, QWORD PTR _Message$[rbp]
	mov	QWORD PTR _InitData$[rbp], rax
	mov	BYTE PTR _InitData$[rbp+8], 1

; 57   :         __std_exception_copy(&_InitData, &_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdx, rax
	lea	rcx, QWORD PTR _InitData$[rbp]
	call	__std_exception_copy
	npad	1

; 58   :     }

	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0exception@std@@QEAA@QEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu2a03_fast.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__91416480_cpu2a03_fast@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
