; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27050.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_01LBDDMOBJ@?$FN@				; `string'
PUBLIC	??_C@_0BE@IJMACPFN@registered?5device?5?$FL@	; `string'
PUBLIC	??_C@_0FA@CLHJNGFJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_05BDHPAJIP@?5?9?50x@			; `string'
PUBLIC	??_C@_0BO@KMHDIEBP@device?5operating?5range?5is?5?$FL0x@ ; `string'
PUBLIC	??_C@_0BM@GMLPKDLM@device?5adressing?5mask?5is?50x@ ; `string'
PUBLIC	??_C@_06LCIDCBMH@?5bytes@			; `string'
PUBLIC	??_C@_0BK@HECGDHBI@device?5reports?5size?5is?50x@ ; `string'
PUBLIC	??_C@_03ICICOMAL@yes@				; `string'
PUBLIC	??_C@_02KAJCLHKP@no@				; `string'
PUBLIC	??_C@_0BO@HBKBAGAM@full?5bus?5emulation?5required?$DP?5@ ; `string'
PUBLIC	??_C@_0BH@GDKDGNOP@Denver?5Base?5I?1O?5Device@	; `string'
PUBLIC	??_C@_0BD@MAHCLMLC@Denver?5Base?5Device@	; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4bus_device@@6B@				; bus_device::`RTTI Complete Object Locator'
PUBLIC	??_R4device@@6B@				; device::`RTTI Complete Object Locator'
PUBLIC	??_7device@@6B@					; device::`vftable'
PUBLIC	??_7bus_device@@6B@				; bus_device::`vftable'
EXTRN	__imp_?rdstate@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHHH@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPEBD@Z:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	__imp__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp_free:PROC
;	COMDAT ??_7bus_device@@6B@
CONST	SEGMENT
??_7bus_device@@6B@ DQ FLAT:??_R4bus_device@@6B@	; bus_device::`vftable'
	DQ	FLAT:?rundevice@device@@UEAAHH@Z
	DQ	FLAT:?dma@device@@UEAAXPEAE_N1@Z
	DQ	FLAT:??_Ebus_device@@UEAAPEAXI@Z
	DQ	FLAT:?write@bus_device@@UEAAXHHE@Z
	DQ	FLAT:?read@bus_device@@UEAAEHH@Z
CONST	ENDS
;	COMDAT ??_7device@@6B@
CONST	SEGMENT
??_7device@@6B@ DQ FLAT:??_R4device@@6B@		; device::`vftable'
	DQ	FLAT:?rundevice@device@@UEAAHH@Z
	DQ	FLAT:?dma@device@@UEAAXPEAE_N1@Z
CONST	ENDS
;	COMDAT ??_R4device@@6B@
rdata$r	SEGMENT
??_R4device@@6B@ DD 01H					; device::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVdevice@@@8
	DD	imagerel ??_R3device@@8
	DD	imagerel ??_R4device@@6B@
rdata$r	ENDS
;	COMDAT ??_R4bus_device@@6B@
rdata$r	SEGMENT
??_R4bus_device@@6B@ DD 01H				; bus_device::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbus_device@@@8
	DD	imagerel ??_R3bus_device@@8
	DD	imagerel ??_R4bus_device@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MAHCLMLC@Denver?5Base?5Device@
CONST	SEGMENT
??_C@_0BD@MAHCLMLC@Denver?5Base?5Device@ DB 'Denver Base Device', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDKDGNOP@Denver?5Base?5I?1O?5Device@
CONST	SEGMENT
??_C@_0BH@GDKDGNOP@Denver?5Base?5I?1O?5Device@ DB 'Denver Base I/O Device'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HBKBAGAM@full?5bus?5emulation?5required?$DP?5@
CONST	SEGMENT
??_C@_0BO@HBKBAGAM@full?5bus?5emulation?5required?$DP?5@ DB 'full bus emu'
	DB	'lation required? ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAJCLHKP@no@
CONST	SEGMENT
??_C@_02KAJCLHKP@no@ DB 'no', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICICOMAL@yes@
CONST	SEGMENT
??_C@_03ICICOMAL@yes@ DB 'yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HECGDHBI@device?5reports?5size?5is?50x@
CONST	SEGMENT
??_C@_0BK@HECGDHBI@device?5reports?5size?5is?50x@ DB 'device reports size'
	DB	' is 0x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCIDCBMH@?5bytes@
CONST	SEGMENT
??_C@_06LCIDCBMH@?5bytes@ DB ' bytes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GMLPKDLM@device?5adressing?5mask?5is?50x@
CONST	SEGMENT
??_C@_0BM@GMLPKDLM@device?5adressing?5mask?5is?50x@ DB 'device adressing '
	DB	'mask is 0x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KMHDIEBP@device?5operating?5range?5is?5?$FL0x@
CONST	SEGMENT
??_C@_0BO@KMHDIEBP@device?5operating?5range?5is?5?$FL0x@ DB 'device opera'
	DB	'ting range is [0x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BDHPAJIP@?5?9?50x@
CONST	SEGMENT
??_C@_05BDHPAJIP@?5?9?50x@ DB ' - 0x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@CLHJNGFJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0FA@CLHJNGFJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB '-'
	DB	'-------------------------------------------------------------'
	DB	'-----------------', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IJMACPFN@registered?5device?5?$FL@
CONST	SEGMENT
??_C@_0BE@IJMACPFN@registered?5device?5?$FL@ DB 'registered device [', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN@ DB ']', 00H			; `string'
PUBLIC	??$_Seek_wrapped@PEAVbus_device@@@std@@YAXAEAPEAPEAVbus_device@@QEAPEAV1@@Z ; std::_Seek_wrapped<bus_device *>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<bus_device *,bus_device *,std::allocator<bus_device *> >
PUBLIC	??$_Get_unwrapped_n@PEAVbus_device@@_J$0A@@std@@YAPEAPEAVbus_device@@QEAPEAV1@_J@Z ; std::_Get_unwrapped_n<bus_device *,__int64,0>
PUBLIC	??$_Idl_distance1@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<bus_device * *,bus_device * *>
PUBLIC	??$_Get_unwrapped@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@@Z ; std::_Get_unwrapped<bus_device *>
PUBLIC	??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z ; std::_Copy_memmove<bus_device * *,bus_device * *>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Idl_distance@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0@Z ; std::_Idl_distance<bus_device * *,bus_device * *>
PUBLIC	??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z ; std::_Uninitialized_move<bus_device * *,bus_device * *,std::allocator<bus_device *> >
PUBLIC	??$_Destroy_range1@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<bus_device *> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<bus_device * *,bus_device * *>
PUBLIC	??$_Ptr_move_cat@PEAVbus_device@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVbus_device@@0@Z ; std::_Ptr_move_cat<bus_device *,bus_device *>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_first
PUBLIC	?_Umove_if_noexcept1@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00U?$integral_constant@_N$00@2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove_if_noexcept1
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SA_KAEBV?$allocator@PEAVbus_device@@@2@@Z ; std::_Default_allocator_traits<std::allocator<bus_device *> >::max_size
PUBLIC	??0?$allocator@PEAVbus_device@@@std@@QEAA@XZ	; std::allocator<bus_device *>::allocator<bus_device *>
PUBLIC	?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z ; std::allocator<bus_device *>::allocate
PUBLIC	?max_size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::max_size
PUBLIC	?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove
PUBLIC	?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove_if_noexcept
PUBLIC	?_Calculate_growth@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_K_K@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::_Xlength
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<bus_device *> >::_Vector_val<std::_Simple_types<bus_device *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@@Z ; std::_Destroy_range<std::allocator<bus_device *> >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1><>
PUBLIC	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
PUBLIC	??$construct@PEAVbus_device@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<bus_device *> >::construct<bus_device *,bus_device * const &>
PUBLIC	??$forward@AEBQEAVbus_device@@@std@@YAAEBQEAVbus_device@@AEBQEAV1@@Z ; std::forward<bus_device * const &>
PUBLIC	??$destroy@PEAVbus_device@@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@@Z ; std::_Default_allocator_traits<std::allocator<bus_device *> >::destroy<bus_device *>
PUBLIC	??$_Unfancy@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@PEAPEAV1@@Z ; std::_Unfancy<bus_device *>
PUBLIC	??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z ; std::_Move_unchecked<bus_device * *,bus_device * *>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<bus_device *> > >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Verify_offset
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_second
PUBLIC	?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z ; std::allocator<bus_device *>::deallocate
PUBLIC	?capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::capacity
PUBLIC	?_Destroy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@0@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Destroy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Orphan_all
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myend
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+=
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_second
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	?_Has_unused_capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_NXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::_Has_unused_capacity
PUBLIC	?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::_Tidy
PUBLIC	?_Orphan_range@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBAXPEAPEAVbus_device@@0@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Orphan_range
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Mylast
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+=
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::__autoclassinit2
PUBLIC	??0?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ ; std::vector<bus_device *,std::allocator<bus_device *> >::vector<bus_device *,std::allocator<bus_device *> >
PUBLIC	??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ ; std::vector<bus_device *,std::allocator<bus_device *> >::~vector<bus_device *,std::allocator<bus_device *> >
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXAEBQEAVbus_device@@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_back_with_unused_capacity<bus_device * const &>
PUBLIC	??$emplace_back@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::emplace_back<bus_device * const &>
PUBLIC	?push_back@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::push_back
PUBLIC	?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::erase
PUBLIC	?begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@XZ ; std::vector<bus_device *,std::allocator<bus_device *> >::begin
PUBLIC	?_Unchecked_begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ ; std::vector<bus_device *,std::allocator<bus_device *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ ; std::vector<bus_device *,std::allocator<bus_device *> >::_Unchecked_end
PUBLIC	?size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::size
PUBLIC	??A?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAAEAPEAVbus_device@@_K@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::operator[]
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+
PUBLIC	?rundevice@device@@UEAAHH@Z			; device::rundevice
PUBLIC	??1device@@QEAA@XZ				; device::~device
PUBLIC	??0device@@QEAA@XZ				; device::device
PUBLIC	?read@bus_device@@UEAAEHH@Z			; bus_device::read
PUBLIC	?write@bus_device@@UEAAXHHE@Z			; bus_device::write
PUBLIC	?resetpins_to_default@bus_device@@QEAAXXZ	; bus_device::resetpins_to_default
PUBLIC	?swappins@bus_device@@QEAAXHH@Z			; bus_device::swappins
PUBLIC	?groundpin@bus_device@@QEAAXH@Z			; bus_device::groundpin
PUBLIC	?compute_addr_from_layout@bus_device@@QEAAGG@Z	; bus_device::compute_addr_from_layout
PUBLIC	??_Gbus_device@@UEAAPEAXI@Z			; bus_device::`scalar deleting destructor'
PUBLIC	?reportdevices@bus@@QEAAXXZ			; bus::reportdevices
PUBLIC	?irq_pulled@bus@@QEAA_NXZ			; bus::irq_pulled
PUBLIC	?nmi_pulled@bus@@QEAA_NXZ			; bus::nmi_pulled
PUBLIC	?removedevice_select_base@bus@@QEAAXH@Z		; bus::removedevice_select_base
PUBLIC	?registerdevice@bus@@QEAAXPEAVbus_device@@@Z	; bus::registerdevice
PUBLIC	?read@bus@@QEAAEXZ				; bus::read
PUBLIC	?write@bus@@QEAAXE@Z				; bus::write
PUBLIC	?readmemory_as_word_wrap@bus@@QEAAGH@Z		; bus::readmemory_as_word_wrap
PUBLIC	?readmemory_as_word@bus@@QEAAGH@Z		; bus::readmemory_as_word
PUBLIC	?readmemory@bus@@QEAAEH@Z			; bus::readmemory
PUBLIC	?writememory@bus@@QEAAXHE@Z			; bus::writememory
PUBLIC	??1bus@@QEAA@XZ					; bus::~bus
PUBLIC	??0bus@@QEAA@XZ					; bus::bus
PUBLIC	?hex@std@@YAAEAVios_base@1@AEAV21@@Z		; std::hex
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?length@?$char_traits@D@std@@SA_KQEBD@Z		; std::char_traits<char>::length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0bus_device@@QEAA@XZ				; bus_device::bus_device
PUBLIC	??1bus_device@@UEAA@XZ				; bus_device::~bus_device
PUBLIC	?get_device_descriptor@device@@QEAAPEADXZ	; device::get_device_descriptor
PUBLIC	?dma@device@@UEAAXPEAE_N1@Z			; device::dma
EXTRN	??_Ebus_device@@UEAAPEAXI@Z:PROC		; bus_device::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z DD imagerel $LN22
	DD	imagerel $LN22+48
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN16
	DD	imagerel $LN16+62
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+117
	DD	imagerel $unwind$?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z DD imagerel $LN29
	DD	imagerel $LN29+45
	DD	imagerel $unwind$?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z DD imagerel $LN31
	DD	imagerel $LN31+48
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z DD imagerel $LN103
	DD	imagerel $LN103+136
	DD	imagerel $unwind$?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN23
	DD	imagerel $LN23+90
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN338
	DD	imagerel $LN338+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN338+70
	DD	imagerel $LN338+393
	DD	imagerel $chain$2$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN338+393
	DD	imagerel $LN338+400
	DD	imagerel $chain$4$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN338+400
	DD	imagerel $LN338+406
	DD	imagerel $chain$5$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z DD imagerel $LN10
	DD	imagerel $LN10+48
	DD	imagerel $unwind$??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN4
	DD	imagerel $LN4+57
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN109
	DD	imagerel $LN109+464
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+56
	DD	imagerel $unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+67
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+45
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ DD imagerel $LN103
	DD	imagerel $LN103+92
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN28
	DD	imagerel $LN28+126
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+72
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ DD imagerel $LN106
	DD	imagerel $LN106+92
	DD	imagerel $unwind$??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z DD imagerel $LN51
	DD	imagerel $LN51+70
	DD	imagerel $unwind$?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0device@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+70
	DD	imagerel $unwind$??0device@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compute_addr_from_layout@bus_device@@QEAAGG@Z DD imagerel $LN16
	DD	imagerel $LN16+123
	DD	imagerel $unwind$?compute_addr_from_layout@bus_device@@QEAAGG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbus_device@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+67
	DD	imagerel $unwind$??_Gbus_device@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reportdevices@bus@@QEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+47
	DD	imagerel $unwind$?reportdevices@bus@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?reportdevices@bus@@QEAAXXZ DD imagerel $LN30+47
	DD	imagerel $LN30+499
	DD	imagerel $chain$2$?reportdevices@bus@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?reportdevices@bus@@QEAAXXZ DD imagerel $LN30+499
	DD	imagerel $LN30+508
	DD	imagerel $chain$3$?reportdevices@bus@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?removedevice_select_base@bus@@QEAAXH@Z DD imagerel $LN114
	DD	imagerel $LN114+87
	DD	imagerel $unwind$?removedevice_select_base@bus@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?registerdevice@bus@@QEAAXPEAVbus_device@@@Z DD imagerel $LN82
	DD	imagerel $LN82+54
	DD	imagerel $unwind$?registerdevice@bus@@QEAAXPEAVbus_device@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?read@bus@@QEAAEXZ DD imagerel $LN51
	DD	imagerel $LN51+37
	DD	imagerel $unwind$?read@bus@@QEAAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?read@bus@@QEAAEXZ DD imagerel $LN51+37
	DD	imagerel $LN51+258
	DD	imagerel $chain$2$?read@bus@@QEAAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?read@bus@@QEAAEXZ DD imagerel $LN51+258
	DD	imagerel $LN51+277
	DD	imagerel $chain$3$?read@bus@@QEAAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@bus@@QEAAXE@Z DD imagerel $LN49
	DD	imagerel $LN49+38
	DD	imagerel $unwind$?write@bus@@QEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?write@bus@@QEAAXE@Z DD imagerel $LN49+38
	DD	imagerel $LN49+240
	DD	imagerel $chain$2$?write@bus@@QEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?write@bus@@QEAAXE@Z DD imagerel $LN49+240
	DD	imagerel $LN49+255
	DD	imagerel $chain$3$?write@bus@@QEAAXE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readmemory_as_word_wrap@bus@@QEAAGH@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$?readmemory_as_word_wrap@bus@@QEAAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readmemory_as_word@bus@@QEAAGH@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$?readmemory_as_word@bus@@QEAAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writememory@bus@@QEAAXHE@Z DD imagerel $LN51
	DD	imagerel $LN51+40
	DD	imagerel $unwind$?writememory@bus@@QEAAXHE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?writememory@bus@@QEAAXHE@Z DD imagerel $LN51+40
	DD	imagerel $LN51+240
	DD	imagerel $chain$2$?writememory@bus@@QEAAXHE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?writememory@bus@@QEAAXHE@Z DD imagerel $LN51+240
	DD	imagerel $LN51+255
	DD	imagerel $chain$3$?writememory@bus@@QEAAXHE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bus@@QEAA@XZ DD imagerel $LN134
	DD	imagerel $LN134+191
	DD	imagerel $unwind$??1bus@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN13
	DD	imagerel $LN13+43
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bus_device@@QEAA@XZ DD imagerel $LN16
	DD	imagerel $LN16+155
	DD	imagerel $unwind$??0bus_device@@QEAA@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bus_device@@QEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bus@@QEAA@XZ DD 081201H
	DD	0a5412H
	DD	093412H
	DD	0e00e3212H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?writememory@bus@@QEAAXHE@Z DD 021H
	DD	imagerel $LN51
	DD	imagerel $LN51+40
	DD	imagerel $unwind$?writememory@bus@@QEAAXHE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?writememory@bus@@QEAAXHE@Z DD 060f21H
	DD	0ac40fH
	DD	09640aH
	DD	083405H
	DD	imagerel $LN51
	DD	imagerel $LN51+40
	DD	imagerel $unwind$?writememory@bus@@QEAAXHE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writememory@bus@@QEAAXHE@Z DD 060e01H
	DD	0b540eH
	DD	0f00a320eH
	DD	07006e008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readmemory_as_word@bus@@QEAAGH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readmemory_as_word_wrap@bus@@QEAAGH@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?write@bus@@QEAAXE@Z DD 021H
	DD	imagerel $LN49
	DD	imagerel $LN49+38
	DD	imagerel $unwind$?write@bus@@QEAAXE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?write@bus@@QEAAXE@Z DD 060f21H
	DD	0ac40fH
	DD	09640aH
	DD	083405H
	DD	imagerel $LN49
	DD	imagerel $LN49+38
	DD	imagerel $unwind$?write@bus@@QEAAXE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@bus@@QEAAXE@Z DD 060e01H
	DD	0b540eH
	DD	0f00a320eH
	DD	07006e008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?read@bus@@QEAAEXZ DD 021H
	DD	imagerel $LN51
	DD	imagerel $LN51+37
	DD	imagerel $unwind$?read@bus@@QEAAEXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?read@bus@@QEAAEXZ DD 060f21H
	DD	0ac40fH
	DD	09640aH
	DD	083405H
	DD	imagerel $LN51
	DD	imagerel $LN51+37
	DD	imagerel $unwind$?read@bus@@QEAAEXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?read@bus@@QEAAEXZ DD 060e01H
	DD	0b540eH
	DD	0f00a320eH
	DD	07006e008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?registerdevice@bus@@QEAAXPEAVbus_device@@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?removedevice_select_base@bus@@QEAAXH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?reportdevices@bus@@QEAAXXZ DD 021H
	DD	imagerel $LN30
	DD	imagerel $LN30+47
	DD	imagerel $unwind$?reportdevices@bus@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?reportdevices@bus@@QEAAXXZ DD 060f21H
	DD	0af40fH
	DD	09740aH
	DD	086405H
	DD	imagerel $LN30
	DD	imagerel $LN30+47
	DD	imagerel $unwind$?reportdevices@bus@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reportdevices@bus@@QEAAXXZ DD 040901H
	DD	0e0053209H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbus_device@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compute_addr_from_layout@bus_device@@QEAAGG@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0device@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+32
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+62
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+53
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+88
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+118
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+163
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+246
	DD	02H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+357
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+398
	DD	04H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+418
	DD	05H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+443
	DD	0ffffffffH
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+35
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	04H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081f19H
	DD	0f341fH
	DD	0f00d7211H
	DD	0c009e00bH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD 021H
	DD	imagerel $LN338
	DD	imagerel $LN338+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD 060021H
	DD	04f400H
	DD	0d6400H
	DD	0c3400H
	DD	imagerel $LN338
	DD	imagerel $LN338+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD 063821H
	DD	0c3438H
	DD	04f415H
	DD	0d6405H
	DD	imagerel $LN338
	DD	imagerel $LN338+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z DD 050b01H
	DD	0e007420bH
	DD	07003c005H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z DD 011319H
	DD	06204H
	DD	imagerel __GSHandlerCheck
	DD	020H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?dma@device@@UEAAXPEAE_N1@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
is_output$ = 24
started$ = 32
?dma@device@@UEAAXPEAE_N1@Z PROC			; device::dma, COMDAT

; 166  : 	// dma transfer.
; 167  : }

	ret	0
?dma@device@@UEAAXPEAE_N1@Z ENDP			; device::dma
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?get_device_descriptor@device@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?get_device_descriptor@device@@QEAAPEADXZ PROC		; device::get_device_descriptor, COMDAT

; 162  : 	return devicedescriptor;

	mov	rax, QWORD PTR [rcx+8]

; 163  : }

	ret	0
?get_device_descriptor@device@@QEAAPEADXZ ENDP		; device::get_device_descriptor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??1bus_device@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bus_device@@UEAA@XZ PROC				; bus_device::~bus_device, COMDAT

; 185  : device::~device() {

	lea	rax, OFFSET FLAT:??_7device@@6B@
	mov	QWORD PTR [rcx], rax

; 186  : 	free(devicedescriptor);	// be done with it.

	mov	rcx, QWORD PTR [rcx+8]
	rex_jmp	QWORD PTR __imp_free
??1bus_device@@UEAA@XZ ENDP				; bus_device::~bus_device
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??0bus_device@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bus_device@@QEAA@XZ PROC				; bus_device::bus_device, COMDAT

; 112  : bus_device::bus_device() {

$LN16:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 178  : device::device() {

	lea	rax, OFFSET FLAT:??_7device@@6B@

; 112  : bus_device::bus_device() {

	mov	rdi, rcx

; 178  : device::device() {

	mov	QWORD PTR [rcx], rax

; 179  : 	ticksdone = 0;

	xor	ebx, ebx

; 180  : 	tickstodo = 0;

	mov	QWORD PTR [rcx+28], rbx

; 181  : 	devicedescriptor = (char *)malloc(MAX_DESCRIPTOR_LENGTH);	// reserve 128 bytes.

	mov	ecx, 128				; 00000080H
	call	QWORD PTR __imp_malloc

; 182  : 	strcpy_s(devicedescriptor, MAX_DESCRIPTOR_LENGTH, "Denver Base Device");	// default device name for debugging.

	lea	r8, OFFSET FLAT:??_C@_0BD@MAHCLMLC@Denver?5Base?5Device@
	mov	edx, 128				; 00000080H
	mov	rcx, rax
	mov	QWORD PTR [rdi+8], rax
	call	QWORD PTR __imp_strcpy_s

; 113  : 	strcpy_s(get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "Denver Base I/O Device");

	mov	rcx, QWORD PTR [rdi+8]
	lea	rax, OFFSET FLAT:??_7bus_device@@6B@
	lea	r8, OFFSET FLAT:??_C@_0BH@GDKDGNOP@Denver?5Base?5I?1O?5Device@
	mov	QWORD PTR [rdi], rax
	mov	edx, 128				; 00000080H
	call	QWORD PTR __imp_strcpy_s

; 179  : 	ticksdone = 0;

	lea	rax, QWORD PTR [rdi+56]

; 114  : 	devicestart = 0x0000;

	mov	DWORD PTR [rdi+44], ebx

; 115  : 	deviceend = 0xFFFF;

	mov	DWORD PTR [rdi+48], 65535		; 0000ffffH

; 116  : 	devicemask = 0xFFFF;

	mov	DWORD PTR [rdi+52], 65535		; 0000ffffH
	npad	10
$LL4@bus_device:

; 117  : 	for (int i = 0; i < 16; i++) pinout.pins[i] = i;

	mov	BYTE PTR [rax], bl
	lea	rax, QWORD PTR [rax+1]
	inc	ebx
	cmp	ebx, 16
	jl	SHORT $LL4@bus_device

; 118  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bus_device@@QEAA@XZ ENDP				; bus_device::bus_device
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$dead$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 186  :         (void)_Size;
; 187  :         return _Where;

	mov	rax, rdx

; 188  :     }

	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 894  : 		return (LLONG_MAX);

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 895  : 		}

	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@D@std@@SA_KQEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 461  : #if _HAS_CXX17
; 462  : 		return (__builtin_strlen(_First));
; 463  : #else /* _HAS_CXX17 */
; 464  : 		return (_CSTD strlen(_First));

	mov	rax, -1
$LL3@length:
	inc	rax
	cmp	BYTE PTR [rcx+rax], 0
	jne	SHORT $LL3@length

; 465  : #endif /* _HAS_CXX17 */
; 466  : 		}

	ret	0
?length@?$char_traits@D@std@@SA_KQEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 531  : 		return (_Left == _Right);

	mov	eax, DWORD PTR [rdx]
	cmp	DWORD PTR [rcx], eax
	sete	al

; 532  : 		}

	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 541  : 		return (EOF);

	mov	eax, -1

; 542  : 		}

	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT

; 43   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 54   : 		}

	ret	0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 8
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 52   : 		return (::operator new(_Bytes));

	jmp	??2@YAPEAX_K@Z				; operator new
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 114  : 	{	// adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete

$LN13:
	sub	rsp, 40					; 00000028H

; 115  : 	_Bytes += _Non_user_size;

	add	QWORD PTR [rdx], 39			; 00000027H

; 116  : 
; 117  : 	const uintptr_t * const _Ptr_user = reinterpret_cast<uintptr_t *>(_Ptr);
; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax-8]

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rdx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN7@Adjust_man

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	QWORD PTR [rcx], rdx

; 134  : 	}

	add	rsp, 40					; 00000028H
	ret	0
$LN7@Adjust_man:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN11@Adjust_man:
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
;	COMDAT ?hex@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?hex@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::hex, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 410  : 		_Fmtfl = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

	and	DWORD PTR [rcx+24], -1537		; fffffffffffff9ffH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 233  : 	return (_Iosbase);

	mov	rax, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 410  : 		_Fmtfl = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

	or	DWORD PTR [rcx+24], 2048		; 00000800H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 234  : 	}

	ret	0
?hex@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::hex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.h
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??0bus@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bus@@QEAA@XZ PROC					; bus::bus, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 389  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx+8], rax

; 390  : 		_Mylast(),

	mov	QWORD PTR [rcx+16], rax

; 391  : 		_Myend()

	mov	QWORD PTR [rcx+24], rax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.h

; 73   : 	bool	no_bus_conflicts = false;		// default we do not emulate bus conflicts, it is costly.

	mov	BYTE PTR [rcx+32], al
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 9    : }

	mov	rax, rcx
	ret	0
??0bus@@QEAA@XZ ENDP					; bus::bus
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??1bus@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??1bus@@QEAA@XZ PROC					; bus::~bus, COMDAT

; 12   : bus::~bus() {

$LN134:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	rbx, QWORD PTR [rcx+8]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 12   : bus::~bus() {

	xor	r14d, r14d
	mov	rsi, QWORD PTR [rcx+16]
	mov	rbp, rcx
	sub	rsi, rbx
	mov	edi, r14d
	add	rsi, 7
	shr	rsi, 3
	cmp	rbx, QWORD PTR [rcx+16]
	cmova	rsi, r14

; 13   : 	// free all connected devices.
; 14   : 	for (auto device : devices) delete device;

	test	rsi, rsi
	je	SHORT $LN3@bus
	npad	5
$LL4@bus:
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN2@bus
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+16]
$LN2@bus:
	add	rbx, 8
	inc	rdi
	cmp	rdi, rsi
	jne	SHORT $LL4@bus
$LN3@bus:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1913 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR [rbp+8]
	test	rcx, rcx
	je	SHORT $LN27@bus

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rdx, QWORD PTR [rbp+24]
	sub	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN103@bus

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN100@bus

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN103@bus:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1918 : 			this->_Myfirst() = pointer();

	mov	QWORD PTR [rbp+8], r14

; 1919 : 			this->_Mylast() = pointer();

	mov	QWORD PTR [rbp+16], r14

; 1920 : 			this->_Myend() = pointer();

	mov	QWORD PTR [rbp+24], r14
$LN27@bus:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 15   : }

	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
$LN100@bus:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN131@bus:
??1bus@@QEAA@XZ ENDP					; bus::~bus
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?writememory@bus@@QEAAXHE@Z
_TEXT	SEGMENT
this$ = 64
addr$ = 72
data$ = 80
?writememory@bus@@QEAAXHE@Z PROC			; bus::writememory, COMDAT

; 17   : void	bus::writememory(int addr, byte data) {

$LN51:
	mov	QWORD PTR [rsp+32], rbp
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H

; 18   : 	address = addr;

	mov	DWORD PTR [rcx], edx
	movzx	r15d, r8b
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	rdi, QWORD PTR [rcx+8]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 17   : void	bus::writememory(int addr, byte data) {

	mov	r14, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1689 : 		return (this->_Mylast());

	mov	rbp, QWORD PTR [rcx+16]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 44   : 	for (auto device : devices) {

	cmp	rdi, rbp
	je	$LN45@writememor
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	QWORD PTR [rsp+80], r12
	xor	r12d, r12d
	npad	6
$LL6@writememor:
	mov	r11, QWORD PTR [rdi]

; 45   : 		if ((address >= device->devicestart) && (address <= device->deviceend)) {

	mov	ebx, DWORD PTR [r14]
	mov	esi, DWORD PTR [r11+44]
	cmp	ebx, esi
	jl	$LN4@writememor
	cmp	ebx, DWORD PTR [r11+48]
	jg	SHORT $LN4@writememor

; 121  : 	if (!processlayout) return addr & devicemask;

	cmp	BYTE PTR [r11+40], r12b
	jne	SHORT $LN30@writememor
	movzx	eax, WORD PTR [r11+52]
	and	ax, bx
	jmp	SHORT $LN26@writememor
$LN30@writememor:

; 122  : 	word cleanaddr = 0;

	movzx	r8d, r12w
	lea	r10, QWORD PTR [r11+56]

; 123  : 	for (int i = 0; i < 16; i++) {

	mov	eax, r12d
$LL29@writememor:

; 124  : 		if (pinout.pins[i] == -1) {

	movzx	r9d, BYTE PTR [r10]
	cmp	r9b, -1
	jne	SHORT $LN31@writememor

; 125  : 			cleanaddr |= 0x01 << i;	//-1 force signal enable.

	movzx	r8d, r8w
	bts	r8d, eax
	jmp	SHORT $LN27@writememor
$LN31@writememor:

; 126  : 		}
; 127  : 		else if (pinout.pins[i] == -2) {

	cmp	r9b, -2
	je	SHORT $LN27@writememor

; 128  : 			cleanaddr |= 0x00 << i; //-2 force signal disable.
; 129  : 		} else {
; 130  : 			cleanaddr |= ((addr >> i) & 0x01) << pinout.pins[i];

	movzx	ecx, ax
	movzx	edx, bx
	shr	dx, cl
	movzx	ecx, r9b
	and	dx, 1
	shl	dx, cl
	or	r8w, dx
$LN27@writememor:

; 123  : 	for (int i = 0; i < 16; i++) {

	inc	eax
	inc	r10
	cmp	eax, 16
	jl	SHORT $LL29@writememor

; 131  : 		}
; 132  : 	}
; 133  : 	return cleanaddr & devicemask;

	movzx	eax, WORD PTR [r11+52]
	and	ax, r8w
$LN26@writememor:

; 47   : 			device->write(caddr, caddr - device->devicestart, data);

	movzx	edx, ax
	movzx	r9d, r15b
	mov	rax, QWORD PTR [r11]
	mov	r8d, edx
	sub	r8d, esi
	mov	rcx, r11
	call	QWORD PTR [rax+24]

; 48   : 			if (!no_bus_conflicts) break;	// do not emulate bus conflicts, we are done.

	cmp	BYTE PTR [r14+32], r12b
	je	SHORT $LN48@writememor
$LN4@writememor:

; 44   : 	for (auto device : devices) {

	add	rdi, 8
	cmp	rdi, rbp
	jne	$LL6@writememor
$LN48@writememor:
	mov	rsi, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
	mov	r12, QWORD PTR [rsp+80]
$LN45@writememor:

; 19   : 	write(data);
; 20   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?writememory@bus@@QEAAXHE@Z ENDP			; bus::writememory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?readmemory@bus@@QEAAEH@Z
_TEXT	SEGMENT
this$ = 8
addr$ = 16
?readmemory@bus@@QEAAEH@Z PROC				; bus::readmemory, COMDAT

; 23   : 	address = addr;

	mov	DWORD PTR [rcx], edx

; 24   : 	return read();

	jmp	?read@bus@@QEAAEXZ			; bus::read
?readmemory@bus@@QEAAEH@Z ENDP				; bus::readmemory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?readmemory_as_word@bus@@QEAAGH@Z
_TEXT	SEGMENT
this$ = 48
addr$ = 56
?readmemory_as_word@bus@@QEAAGH@Z PROC			; bus::readmemory_as_word, COMDAT

; 27   : word	bus::readmemory_as_word(int addr) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 28   : 	word		result;
; 29   : 	address = addr;

	mov	DWORD PTR [rcx], edx

; 30   : 	result = read();

	call	?read@bus@@QEAAEXZ			; bus::read

; 31   : 	address++;

	inc	DWORD PTR [rbx]

; 32   : 	return result | read() << 8;

	mov	rcx, rbx
	movzx	edi, al
	call	?read@bus@@QEAAEXZ			; bus::read

; 33   : }

	mov	rbx, QWORD PTR [rsp+48]
	movzx	eax, al
	shl	ax, 8
	or	ax, di
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?readmemory_as_word@bus@@QEAAGH@Z ENDP			; bus::readmemory_as_word
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?readmemory_as_word_wrap@bus@@QEAAGH@Z
_TEXT	SEGMENT
this$ = 48
addr$ = 56
?readmemory_as_word_wrap@bus@@QEAAGH@Z PROC		; bus::readmemory_as_word_wrap, COMDAT

; 35   : word	bus::readmemory_as_word_wrap(int addr) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx

; 36   : 	word		result;
; 37   : 	address = addr;

	mov	DWORD PTR [rcx], edx
	mov	rdi, rcx

; 38   : 	result = read();

	call	?read@bus@@QEAAEXZ			; bus::read
	movzx	esi, al

; 39   : 	address = (addr & 0xFF00) | ((addr + 1) & 0xFF);
; 40   : 	return result | read() << 8;

	mov	rcx, rdi
	lea	eax, DWORD PTR [rbx+1]
	and	ebx, 65280				; 0000ff00H
	movzx	r8d, al
	or	r8d, ebx
	mov	DWORD PTR [rdi], r8d
	call	?read@bus@@QEAAEXZ			; bus::read

; 41   : }

	mov	rbx, QWORD PTR [rsp+48]
	movzx	eax, al
	shl	ax, 8
	or	ax, si
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?readmemory_as_word_wrap@bus@@QEAAGH@Z ENDP		; bus::readmemory_as_word_wrap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?write@bus@@QEAAXE@Z
_TEXT	SEGMENT
this$ = 64
data$ = 72
?write@bus@@QEAAXE@Z PROC				; bus::write, COMDAT

; 43   : void	bus::write(byte data) {

$LN49:
	mov	QWORD PTR [rsp+32], rbp
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	rdi, QWORD PTR [rcx+8]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 43   : void	bus::write(byte data) {

	movzx	r15d, dl
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1689 : 		return (this->_Mylast());

	mov	rbp, QWORD PTR [rcx+16]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 43   : void	bus::write(byte data) {

	mov	r14, rcx

; 44   : 	for (auto device : devices) {

	cmp	rdi, rbp
	je	$LN43@write
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	QWORD PTR [rsp+80], r12
	xor	r12d, r12d
	npad	8
$LL4@write:
	mov	r11, QWORD PTR [rdi]

; 45   : 		if ((address >= device->devicestart) && (address <= device->deviceend)) {

	mov	ebx, DWORD PTR [r14]
	mov	esi, DWORD PTR [r11+44]
	cmp	ebx, esi
	jl	$LN2@write
	cmp	ebx, DWORD PTR [r11+48]
	jg	SHORT $LN2@write

; 121  : 	if (!processlayout) return addr & devicemask;

	cmp	BYTE PTR [r11+40], r12b
	jne	SHORT $LN28@write
	movzx	eax, WORD PTR [r11+52]
	and	ax, bx
	jmp	SHORT $LN24@write
$LN28@write:

; 122  : 	word cleanaddr = 0;

	movzx	r8d, r12w
	lea	r10, QWORD PTR [r11+56]

; 123  : 	for (int i = 0; i < 16; i++) {

	mov	eax, r12d
$LL27@write:

; 124  : 		if (pinout.pins[i] == -1) {

	movzx	r9d, BYTE PTR [r10]
	cmp	r9b, -1
	jne	SHORT $LN29@write

; 125  : 			cleanaddr |= 0x01 << i;	//-1 force signal enable.

	movzx	r8d, r8w
	bts	r8d, eax
	jmp	SHORT $LN25@write
$LN29@write:

; 126  : 		}
; 127  : 		else if (pinout.pins[i] == -2) {

	cmp	r9b, -2
	je	SHORT $LN25@write

; 128  : 			cleanaddr |= 0x00 << i; //-2 force signal disable.
; 129  : 		} else {
; 130  : 			cleanaddr |= ((addr >> i) & 0x01) << pinout.pins[i];

	movzx	ecx, ax
	movzx	edx, bx
	shr	dx, cl
	movzx	ecx, r9b
	and	dx, 1
	shl	dx, cl
	or	r8w, dx
$LN25@write:

; 123  : 	for (int i = 0; i < 16; i++) {

	inc	eax
	inc	r10
	cmp	eax, 16
	jl	SHORT $LL27@write

; 131  : 		}
; 132  : 	}
; 133  : 	return cleanaddr & devicemask;

	movzx	eax, WORD PTR [r11+52]
	and	ax, r8w
$LN24@write:

; 46   : 			word caddr = device->compute_addr_from_layout(address);
; 47   : 			device->write(caddr, caddr - device->devicestart, data);

	movzx	edx, ax
	movzx	r9d, r15b
	mov	rax, QWORD PTR [r11]
	mov	r8d, edx
	sub	r8d, esi
	mov	rcx, r11
	call	QWORD PTR [rax+24]

; 48   : 			if (!no_bus_conflicts) break;	// do not emulate bus conflicts, we are done.

	cmp	BYTE PTR [r14+32], r12b
	je	SHORT $LN46@write
$LN2@write:

; 44   : 	for (auto device : devices) {

	add	rdi, 8
	cmp	rdi, rbp
	jne	$LL4@write
$LN46@write:
	mov	rsi, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
	mov	r12, QWORD PTR [rsp+80]
$LN43@write:

; 49   : 		}
; 50   : 	}
; 51   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?write@bus@@QEAAXE@Z ENDP				; bus::write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?read@bus@@QEAAEXZ
_TEXT	SEGMENT
this$ = 64
?read@bus@@QEAAEXZ PROC					; bus::read, COMDAT

; 53   : byte	bus::read() {

$LN51:
	mov	QWORD PTR [rsp+32], rbp
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	rdi, QWORD PTR [rcx+8]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 54   : 	byte	readbus = 0x00;

	xor	bpl, bpl
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1689 : 		return (this->_Mylast());

	mov	r15, QWORD PTR [rcx+16]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 53   : byte	bus::read() {

	mov	r14, rcx

; 55   : 	for (auto device : devices) {

	cmp	rdi, r15
	je	$LN44@read
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	QWORD PTR [rsp+80], r12
	xor	r12d, r12d
	npad	9
$LL4@read:
	mov	r11, QWORD PTR [rdi]

; 56   : 		if ((address >= device->devicestart) && (address <= device->deviceend)) {

	mov	ebx, DWORD PTR [r14]
	mov	esi, DWORD PTR [r11+44]
	cmp	ebx, esi
	jl	$LN2@read
	cmp	ebx, DWORD PTR [r11+48]
	jg	SHORT $LN2@read

; 121  : 	if (!processlayout) return addr & devicemask;

	cmp	BYTE PTR [r11+40], r12b
	jne	SHORT $LN28@read
	movzx	eax, WORD PTR [r11+52]
	and	ax, bx
	jmp	SHORT $LN24@read
$LN28@read:

; 122  : 	word cleanaddr = 0;

	movzx	r8d, r12w
	lea	r10, QWORD PTR [r11+56]

; 123  : 	for (int i = 0; i < 16; i++) {

	mov	eax, r12d
$LL27@read:

; 124  : 		if (pinout.pins[i] == -1) {

	movzx	r9d, BYTE PTR [r10]
	cmp	r9b, -1
	jne	SHORT $LN29@read

; 125  : 			cleanaddr |= 0x01 << i;	//-1 force signal enable.

	movzx	r8d, r8w
	bts	r8d, eax
	jmp	SHORT $LN25@read
$LN29@read:

; 126  : 		}
; 127  : 		else if (pinout.pins[i] == -2) {

	cmp	r9b, -2
	je	SHORT $LN25@read

; 128  : 			cleanaddr |= 0x00 << i; //-2 force signal disable.
; 129  : 		} else {
; 130  : 			cleanaddr |= ((addr >> i) & 0x01) << pinout.pins[i];

	movzx	ecx, ax
	movzx	edx, bx
	shr	dx, cl
	movzx	ecx, r9b
	and	dx, 1
	shl	dx, cl
	or	r8w, dx
$LN25@read:

; 123  : 	for (int i = 0; i < 16; i++) {

	inc	eax
	inc	r10
	cmp	eax, 16
	jl	SHORT $LL27@read

; 131  : 		}
; 132  : 	}
; 133  : 	return cleanaddr & devicemask;

	movzx	eax, WORD PTR [r11+52]
	and	ax, r8w
$LN24@read:

; 57   : 			word caddr = device->compute_addr_from_layout(address);
; 58   : 			readbus |= device->read(caddr, caddr - device->devicestart);

	movzx	edx, ax
	mov	rcx, r11
	mov	rax, QWORD PTR [r11]
	mov	r8d, edx
	sub	r8d, esi
	call	QWORD PTR [rax+32]
	or	bpl, al

; 59   : 			if (!no_bus_conflicts) break; // do not emulate bus conflicts, we are done.

	cmp	BYTE PTR [r14+32], r12b
	je	SHORT $LN45@read
$LN2@read:

; 55   : 	for (auto device : devices) {

	add	rdi, 8
	cmp	rdi, r15
	jne	$LL4@read
$LN45@read:
	mov	rsi, QWORD PTR [rsp+72]

; 60   : 		}		
; 61   : 	}
; 62   : 	return readbus;

	movzx	eax, bpl
	mov	rbx, QWORD PTR [rsp+64]
	mov	r12, QWORD PTR [rsp+80]

; 63   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN44@read:

; 60   : 		}		
; 61   : 	}
; 62   : 	return readbus;

	movzx	eax, bpl

; 63   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?read@bus@@QEAAEXZ ENDP					; bus::read
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?registerdevice@bus@@QEAAXPEAVbus_device@@@Z
_TEXT	SEGMENT
this$ = 48
device$ = 56
?registerdevice@bus@@QEAAXPEAVbus_device@@@Z PROC	; bus::registerdevice, COMDAT

; 69   : void	bus::registerdevice(bus_device *device) {

$LN82:
	mov	QWORD PTR [rsp+16], rdx
	sub	rsp, 40					; 00000028H

; 70   : 	devices.push_back(device);

	add	rcx, 8
	mov	rax, rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx+16], rdx

; 917  : 		if (_Has_unused_capacity())

	je	SHORT $LN6@registerde
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [rcx+8], 8
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 71   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@registerde:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR device$[rsp]
	call	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 71   : }

	add	rsp, 40					; 00000028H
	ret	0
?registerdevice@bus@@QEAAXPEAVbus_device@@@Z ENDP	; bus::registerdevice
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?removedevice_select_base@bus@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
baseaddr$ = 56
?removedevice_select_base@bus@@QEAAXH@Z PROC		; bus::removedevice_select_base, COMDAT

; 73   : void	bus::removedevice_select_base(int baseaddr) {

$LN114:
	push	rbx
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	r10, QWORD PTR [rcx+16]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 74   : 	for (size_t i = 0; i < devices.size(); i++) {

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	r9, QWORD PTR [rcx+8]
	mov	r8, r10
	sub	r8, r9
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 73   : void	bus::removedevice_select_base(int baseaddr) {

	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	sar	r8, 3
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 74   : 	for (size_t i = 0; i < devices.size(); i++) {

	test	r8, r8
	je	SHORT $LN3@removedevi
$LL4@removedevi:

; 75   : 		if (devices[i]->devicestart == baseaddr) {

	mov	rcx, QWORD PTR [r9+rax*8]
	cmp	DWORD PTR [rcx+44], edx
	je	SHORT $LN108@removedevi

; 74   : 	for (size_t i = 0; i < devices.size(); i++) {

	inc	rax
	cmp	rax, r8
	jb	SHORT $LL4@removedevi

; 80   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN108@removedevi:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 130  : 		_Ptr += _Off;

	lea	rcx, QWORD PTR [r9+rax*8]

; 1561 : 		_Move_unchecked(_Where._Ptr + 1, this->_Mylast(), _Where._Ptr);

	lea	rdx, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r10, rdx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, r10
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1563 : 		--this->_Mylast();

	add	QWORD PTR [rbx+16], -8
$LN3@removedevi:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 80   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?removedevice_select_base@bus@@QEAAXH@Z ENDP		; bus::removedevice_select_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?nmi_pulled@bus@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?nmi_pulled@bus@@QEAA_NXZ PROC				; bus::nmi_pulled, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1689 : 		return (this->_Mylast());

	mov	rax, QWORD PTR [rcx+16]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 83   : 	bool nmi = false;

	xor	r8b, r8b
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	rdx, QWORD PTR [rcx+8]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 83   : 	bool nmi = false;

	mov	r9, rax
	sub	r9, rdx
	xor	ecx, ecx
	add	r9, 7
	shr	r9, 3
	cmp	rdx, rax
	cmova	r9, rcx

; 84   : 	for (auto device : devices) {

	test	r9, r9
	je	SHORT $LN29@nmi_pulled
$LL4@nmi_pulled:
	mov	rax, QWORD PTR [rdx]

; 85   : 		if (device->nmi_enable) {

	cmp	BYTE PTR [rax+21], 0
	je	SHORT $LN2@nmi_pulled

; 86   : 			device->nmi_enable = false;	// NMI is falling edge.

	mov	BYTE PTR [rax+21], 0

; 87   : 			nmi = true;

	mov	r8b, 1
$LN2@nmi_pulled:

; 84   : 	for (auto device : devices) {

	add	rdx, 8
	inc	rcx
	cmp	rcx, r9
	jne	SHORT $LL4@nmi_pulled
$LN29@nmi_pulled:

; 88   : 		}
; 89   : 	}
; 90   : 	return nmi;
; 91   : }

	movzx	eax, r8b
	ret	0
?nmi_pulled@bus@@QEAA_NXZ ENDP				; bus::nmi_pulled
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?irq_pulled@bus@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?irq_pulled@bus@@QEAA_NXZ PROC				; bus::irq_pulled, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	rax, QWORD PTR [rcx+8]

; 1689 : 		return (this->_Mylast());

	mov	rdx, QWORD PTR [rcx+16]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 94   : 	for (auto device : devices) {

	cmp	rax, rdx
	je	SHORT $LN3@irq_pulled
	npad	3
$LL4@irq_pulled:

; 95   : 		if (device->irq_enable) return true;	// device should pull up IRQ not the interrupted device, therefore only report.

	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+20], 0
	jne	SHORT $LN24@irq_pulled

; 94   : 	for (auto device : devices) {

	add	rax, 8
	cmp	rax, rdx
	jne	SHORT $LL4@irq_pulled
$LN3@irq_pulled:

; 96   : 	}
; 97   : 	return false;

	xor	al, al

; 98   : }

	ret	0
$LN24@irq_pulled:

; 95   : 		if (device->irq_enable) return true;	// device should pull up IRQ not the interrupted device, therefore only report.

	mov	al, 1

; 98   : }

	ret	0
?irq_pulled@bus@@QEAA_NXZ ENDP				; bus::irq_pulled
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?reportdevices@bus@@QEAAXXZ
_TEXT	SEGMENT
this$ = 64
?reportdevices@bus@@QEAAXXZ PROC			; bus::reportdevices, COMDAT

; 100  : void	bus::reportdevices() {

$LN30:
	push	rbx
	push	rbp
	push	r14
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1679 : 		return (this->_Myfirst());

	mov	r14, QWORD PTR [rcx+8]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 102  : 	for (bus_device* dev : devices) {

	xor	ebp, ebp
	mov	rbx, QWORD PTR [rcx+16]
	sub	rbx, r14
	add	rbx, 7
	shr	rbx, 3
	cmp	r14, QWORD PTR [rcx+16]
	cmova	rbx, rbp
	test	rbx, rbx
	je	$LN3@reportdevi
	mov	QWORD PTR [rsp+64], rsi
	mov	QWORD PTR [rsp+72], rdi
	mov	QWORD PTR [rsp+80], r15
	lea	r15, OFFSET FLAT:??_C@_03ICICOMAL@yes@
$LL4@reportdevi:
	mov	rsi, QWORD PTR [r14]

; 103  : 		std::cout << "registered device [" << dev->get_device_descriptor() << "]" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0BE@IJMACPFN@registered?5device?5?$FL@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A

; 162  : 	return devicedescriptor;

	mov	rdi, QWORD PTR [rsi+8]

; 103  : 		std::cout << "registered device [" << dev->get_device_descriptor() << "]" << std::endl;

	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	rdx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 104  : 		std::cout << "-------------------------------------------------------------------------------" << std::endl;

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_0FA@CLHJNGFJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 105  : 		std::cout << std::hex << "device operating range is [0x" << dev->devicestart << " - 0x" << dev->deviceend << "]" << std::endl;

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:?hex@std@@YAAEAVios_base@1@AEAV21@@Z ; std::hex
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BO@KMHDIEBP@device?5operating?5range?5is?5?$FL0x@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, DWORD PTR [rsi+44]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_05BDHPAJIP@?5?9?50x@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, DWORD PTR [rsi+48]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 106  : 		std::cout << "device adressing mask is 0x" << dev->devicemask << std::endl;

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_0BM@GMLPKDLM@device?5adressing?5mask?5is?50x@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, DWORD PTR [rsi+52]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 107  : 		std::cout << "device reports size is 0x" << (dev->deviceend - dev->devicestart) << " bytes" << std::endl;

	mov	edi, DWORD PTR [rsi+48]
	lea	rdx, OFFSET FLAT:??_C@_0BK@HECGDHBI@device?5reports?5size?5is?50x@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	sub	edi, DWORD PTR [rsi+44]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, edi
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_06LCIDCBMH@?5bytes@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 108  : 		std::cout << "full bus emulation required? " << (dev->processlayout ? "yes" : "no") << std::endl << std::endl;

	cmp	BYTE PTR [rsi+40], 0
	lea	rdi, OFFSET FLAT:??_C@_02KAJCLHKP@no@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_0BO@HBKBAGAM@full?5bus?5emulation?5required?$DP?5@
	cmovne	rdi, r15
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	rdx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	inc	rbp
	lea	r14, QWORD PTR [r14+8]

; 102  : 	for (bus_device* dev : devices) {

	cmp	rbp, rbx
	jne	$LL4@reportdevi
	mov	r15, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+64]
$LN3@reportdevi:

; 109  : 	}
; 110  : }

	add	rsp, 32					; 00000020H
	pop	r14
	pop	rbp
	pop	rbx
	ret	0
?reportdevices@bus@@QEAAXXZ ENDP			; bus::reportdevices
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??_Gbus_device@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbus_device@@UEAAPEAXI@Z PROC			; bus_device::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 185  : device::~device() {

	lea	rax, OFFSET FLAT:??_7device@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 186  : 	free(devicedescriptor);	// be done with it.

	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_free
	test	bl, 1
	je	SHORT $LN9@scalar
	mov	edx, 72					; 00000048H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN9@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbus_device@@UEAAPEAXI@Z ENDP			; bus_device::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?compute_addr_from_layout@bus_device@@QEAAGG@Z
_TEXT	SEGMENT
this$ = 8
addr$ = 16
?compute_addr_from_layout@bus_device@@QEAAGG@Z PROC	; bus_device::compute_addr_from_layout, COMDAT

; 120  : word bus_device::compute_addr_from_layout(word addr) {

$LN16:
	mov	QWORD PTR [rsp+8], rbx

; 121  : 	if (!processlayout) return addr & devicemask;

	cmp	BYTE PTR [rcx+40], 0
	movzx	ebx, dx
	mov	r11, rcx
	jne	SHORT $LN5@compute_ad
	movzx	eax, WORD PTR [rcx+52]
	and	ax, dx

; 134  : }

	mov	rbx, QWORD PTR [rsp+8]
	ret	0
$LN5@compute_ad:

; 122  : 	word cleanaddr = 0;

	xor	r10d, r10d
	lea	r9, QWORD PTR [rcx+56]

; 123  : 	for (int i = 0; i < 16; i++) {

	mov	eax, r10d
	npad	8
$LL4@compute_ad:

; 124  : 		if (pinout.pins[i] == -1) {

	movzx	r8d, BYTE PTR [r9]
	cmp	r8b, -1
	jne	SHORT $LN6@compute_ad

; 125  : 			cleanaddr |= 0x01 << i;	//-1 force signal enable.

	movzx	r10d, r10w
	bts	r10d, eax
	jmp	SHORT $LN2@compute_ad
$LN6@compute_ad:

; 126  : 		}
; 127  : 		else if (pinout.pins[i] == -2) {

	cmp	r8b, -2
	je	SHORT $LN2@compute_ad

; 128  : 			cleanaddr |= 0x00 << i; //-2 force signal disable.
; 129  : 		} else {
; 130  : 			cleanaddr |= ((addr >> i) & 0x01) << pinout.pins[i];

	movzx	ecx, ax
	movzx	edx, bx
	shr	dx, cl
	movzx	ecx, r8b
	and	dx, 1
	shl	dx, cl
	or	r10w, dx
$LN2@compute_ad:

; 123  : 	for (int i = 0; i < 16; i++) {

	inc	eax
	inc	r9
	cmp	eax, 16
	jl	SHORT $LL4@compute_ad

; 131  : 		}
; 132  : 	}
; 133  : 	return cleanaddr & devicemask;

	movzx	eax, WORD PTR [r11+52]

; 134  : }

	mov	rbx, QWORD PTR [rsp+8]
	and	ax, r10w
	ret	0
?compute_addr_from_layout@bus_device@@QEAAGG@Z ENDP	; bus_device::compute_addr_from_layout
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?groundpin@bus_device@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 8
pin$ = 16
?groundpin@bus_device@@QEAAXH@Z PROC			; bus_device::groundpin, COMDAT

; 137  : 	pinout.pins[pin] = -2;

	movsxd	rax, edx
	mov	BYTE PTR [rax+rcx+56], -2

; 138  : 	processlayout = true;

	mov	BYTE PTR [rcx+40], 1

; 139  : }

	ret	0
?groundpin@bus_device@@QEAAXH@Z ENDP			; bus_device::groundpin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?swappins@bus_device@@QEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
pin1$dead$ = 16
pin2$dead$ = 24
?swappins@bus_device@@QEAAXHH@Z PROC			; bus_device::swappins, COMDAT

; 147  : 	int p = pinout.pins[pin2];
; 148  : 	pinout.pins[pin2] = pinout.pins[pin1];

	movzx	eax, BYTE PTR [rcx+66]
	movzx	edx, BYTE PTR [rcx+67]
	mov	BYTE PTR [rcx+67], al

; 149  : 	pinout.pins[pin1] = p;

	mov	BYTE PTR [rcx+66], dl

; 150  : 	processlayout = true;

	mov	BYTE PTR [rcx+40], 1

; 151  : }

	ret	0
?swappins@bus_device@@QEAAXHH@Z ENDP			; bus_device::swappins
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?resetpins_to_default@bus_device@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?resetpins_to_default@bus_device@@QEAAXXZ PROC		; bus_device::resetpins_to_default, COMDAT

; 154  : 	for (int i = 0; i < 16; i++) pinout.pins[i] = i;

	xor	eax, eax
	lea	rdx, QWORD PTR [rcx+56]
	npad	10
$LL4@resetpins_:
	mov	BYTE PTR [rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	inc	eax
	cmp	eax, 16
	jl	SHORT $LL4@resetpins_

; 155  : 	processlayout = false;

	mov	BYTE PTR [rcx+40], 0

; 156  : }

	ret	0
?resetpins_to_default@bus_device@@QEAAXXZ ENDP		; bus_device::resetpins_to_default
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?write@bus_device@@UEAAXHHE@Z
_TEXT	SEGMENT
this$ = 8
addr$ = 16
addr_from_base$ = 24
data$ = 32
?write@bus_device@@UEAAXHHE@Z PROC			; bus_device::write, COMDAT

; 171  : 	
; 172  : }

	ret	0
?write@bus_device@@UEAAXHHE@Z ENDP			; bus_device::write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?read@bus_device@@UEAAEHH@Z
_TEXT	SEGMENT
this$ = 8
addr$ = 16
addr_from_base$ = 24
?read@bus_device@@UEAAEHH@Z PROC			; bus_device::read, COMDAT

; 175  : 	return 0x00;

	xor	al, al

; 176  : }

	ret	0
?read@bus_device@@UEAAEHH@Z ENDP			; bus_device::read
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??0device@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0device@@QEAA@XZ PROC					; device::device, COMDAT

; 178  : device::device() {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7device@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 179  : 	ticksdone = 0;

	xor	eax, eax

; 180  : 	tickstodo = 0;

	mov	QWORD PTR [rcx+28], rax

; 181  : 	devicedescriptor = (char *)malloc(MAX_DESCRIPTOR_LENGTH);	// reserve 128 bytes.

	mov	ecx, 128				; 00000080H
	call	QWORD PTR __imp_malloc

; 182  : 	strcpy_s(devicedescriptor, MAX_DESCRIPTOR_LENGTH, "Denver Base Device");	// default device name for debugging.

	lea	r8, OFFSET FLAT:??_C@_0BD@MAHCLMLC@Denver?5Base?5Device@
	mov	edx, 128				; 00000080H
	mov	rcx, rax
	mov	QWORD PTR [rbx+8], rax
	call	QWORD PTR __imp_strcpy_s

; 183  : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0device@@QEAA@XZ ENDP					; device::device
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ??1device@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1device@@QEAA@XZ PROC					; device::~device, COMDAT

; 185  : device::~device() {

	lea	rax, OFFSET FLAT:??_7device@@6B@
	mov	QWORD PTR [rcx], rax

; 186  : 	free(devicedescriptor);	// be done with it.

	mov	rcx, QWORD PTR [rcx+8]
	rex_jmp	QWORD PTR __imp_free
??1device@@QEAA@XZ ENDP					; device::~device
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
;	COMDAT ?rundevice@device@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
ticks$ = 16
?rundevice@device@@UEAAHH@Z PROC			; device::rundevice, COMDAT

; 190  : 	return ticks;	// dummy device return same amount of ticks as told to process.

	mov	eax, edx

; 191  : }

	ret	0
?rundevice@device@@UEAAHH@Z ENDP			; device::rundevice
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$ = 24
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+, COMDAT

; 130  : 		_Ptr += _Off;

	mov	rcx, QWORD PTR [rcx]

; 299  : 		{	// return this + integer

	mov	rax, rdx

; 130  : 		_Ptr += _Off;

	lea	rdx, QWORD PTR [rcx+r8*8]

; 300  : 		_Vector_iterator _Tmp = *this;
; 301  : 		return (_Tmp += _Off);

	mov	QWORD PTR [rax], rdx

; 302  : 		}

	ret	0
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??A?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAAEAPEAVbus_device@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAAEAPEAVbus_device@@_K@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::operator[], COMDAT

; 1732 :  #if _ITERATOR_DEBUG_LEVEL != 0
; 1733 : 		_STL_VERIFY(_Pos < size(), "vector subscript out of range");
; 1734 :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1735 : 
; 1736 : 		return (this->_Myfirst()[_Pos]);

	mov	rax, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rax+rdx*8]

; 1737 : 		}

	ret	0
??A?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAAEAPEAVbus_device@@_K@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::size, COMDAT

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1705 : 		}

	ret	0
?size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_end@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Unchecked_end, COMDAT

; 1689 : 		return (this->_Mylast());

	mov	rax, QWORD PTR [rcx+8]

; 1690 : 		}

	ret	0
?_Unchecked_end@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Unchecked_begin, COMDAT

; 1679 : 		return (this->_Myfirst());

	mov	rax, QWORD PTR [rcx]

; 1680 : 		}

	ret	0
?_Unchecked_begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@XZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@XZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::begin, COMDAT

; 41   : 		: _Ptr(_Parg)

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 1619 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));

	mov	rax, rdx

; 1620 : 		}

	ret	0
?begin@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@XZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::erase, COMDAT

; 1553 : 		{	// erase element at _Where

$LN51:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rsi, rdx

; 1554 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1555 : 		_STL_VERIFY(_Where._Getcont() == _STD addressof(this->_Get_data())
; 1556 : 			&& _Where._Ptr >= this->_Myfirst()
; 1557 : 			&& this->_Mylast() > _Where._Ptr, "vector erase iterator outside range");
; 1558 : 		_Orphan_range(_Where._Ptr, this->_Mylast());
; 1559 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1560 : 
; 1561 : 		_Move_unchecked(_Where._Ptr + 1, this->_Mylast(), _Where._Ptr);

	lea	rdx, QWORD PTR [r8+8]
	mov	rdi, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	mov	r8, QWORD PTR [rcx+8]

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
	sub	r8, rdx
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1563 : 		--this->_Mylast();

	add	QWORD PTR [rdi+8], -8

; 1564 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));

	mov	rax, rsi

; 41   : 		: _Ptr(_Parg)

	mov	QWORD PTR [rsi], rbx

; 1565 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?erase@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@2@@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?push_back@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
?push_back@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::push_back, COMDAT

; 931  : 		{	// insert element at end, provide strong guarantee

	mov	r8, rdx

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx+16], rdx

; 917  : 		if (_Has_unused_capacity())

	je	SHORT $LN4@push_back
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [rcx+8], 8

; 932  : 		emplace_back(_Val);
; 933  : 		}

	ret	0
$LN4@push_back:

; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
?push_back@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$emplace_back@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z
_TEXT	SEGMENT
this$ = 8
<_Val_0>$ = 16
??$emplace_back@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::emplace_back<bus_device * const &>, COMDAT

; 916  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

	mov	r8, rdx

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx+16], rdx

; 917  : 		if (_Has_unused_capacity())

	je	SHORT $LN2@emplace_ba
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [rcx+8], 8

; 923  : #if _HAS_CXX17
; 924  : 		return (_Result);
; 925  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 926  : 		(void)_Result;
; 927  : #endif /* _HAS_CXX17 */
; 928  : 		}

	ret	0
$LN2@emplace_ba:

; 918  : 			{
; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));
; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
??$emplace_back@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAXAEBQEAVbus_device@@@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::emplace_back<bus_device * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXAEBQEAVbus_device@@@Z
_TEXT	SEGMENT
this$ = 8
<_Val_0>$ = 16
??$_Emplace_back_with_unused_capacity@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXAEBQEAVbus_device@@@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_back_with_unused_capacity<bus_device * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

	mov	r8, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r8], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [rcx+8], 8

; 906  : #if _HAS_CXX17
; 907  : 		return (_Result);
; 908  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 909  : 		(void)_Result;
; 910  : #endif /* _HAS_CXX17 */
; 911  : 		}

	ret	0
??$_Emplace_back_with_unused_capacity@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXAEBQEAVbus_device@@@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_back_with_unused_capacity<bus_device * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::~vector<bus_device *,std::allocator<bus_device *> >, COMDAT

; 893  : 		{	// destroy the object

$LN106:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1913 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN80@vector

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN77@vector

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN80@vector:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1918 : 			this->_Myfirst() = pointer();

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1919 : 			this->_Mylast() = pointer();

	mov	QWORD PTR [rbx+8], rax

; 1920 : 			this->_Myend() = pointer();

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 895  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN77@vector:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN103@vector:
??1?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::~vector<bus_device *,std::allocator<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::vector<bus_device *,std::allocator<bus_device *> >, COMDAT

; 389  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 390  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 391  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 652  : 		}

	mov	rax, rcx
	ret	0
??0?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAA@XZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::vector<bus_device *,std::allocator<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 153  : 			return (_Ok);

	movzx	eax, BYTE PTR [rcx+8]

; 154  : 			}

	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 135  : 			{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T3[rsp], -2
	mov	rbx, rcx

; 136  :  #if _HAS_EXCEPTIONS
; 137  : 			if (!_STD uncaught_exception())	// TRANSITION, OS#15518458

	call	QWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	npad	1
	test	al, al
	jne	SHORT $LN2@sentry

; 138  : 				{
; 139  : 				this->_Myostr._Osfx();

	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN2@sentry:

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN12@sentry

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN12@sentry:

; 140  : 				}
; 141  :  #else /* _HAS_EXCEPTIONS */
; 142  : 			this->_Myostr._Osfx();
; 143  :  #endif /* _HAS_EXCEPTIONS */
; 144  : 			}

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 121  : 			{	// construct locking and testing stream

$LN28:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T8[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rbx, rdx
	mov	rdi, rcx

; 98   : 			: _Myostr(_Ostr)

	mov	QWORD PTR [rcx], rdx

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rdx, QWORD PTR [rdx]
	movsxd	rax, DWORD PTR [rdx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rax+rbx+72]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN6@sentry

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rbx]
$LN6@sentry:

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	movsxd	rcx, DWORD PTR [rdx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	rax, rdx

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN2@sentry
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	test	rcx, rcx
	je	SHORT $LN2@sentry
	cmp	rcx, rbx
	je	SHORT $LN2@sentry

; 123  : 				_Ostr.tie()->flush();

	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, QWORD PTR [rbx]
$LN2@sentry:

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	movsxd	rax, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [rax+rbx+16], 0
	sete	al
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	BYTE PTR [rdi+8], al

; 125  : 			}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+=, COMDAT

; 130  : 		_Ptr += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 294  : 		*(_Mybase *)this += _Off;
; 295  : 		return (*this);

	mov	rax, rcx

; 296  : 		}

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >, COMDAT

; 41   : 		: _Ptr(_Parg)

	mov	QWORD PTR [rcx], rdx

; 254  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Mylast, COMDAT

; 591  : 		return (_Get_data()._Mylast);

	lea	rax, QWORD PTR [rcx+8]

; 592  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Mylast, COMDAT

; 586  : 		return (_Get_data()._Mylast);

	lea	rax, QWORD PTR [rcx+8]

; 587  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myfirst, COMDAT

; 581  : 		return (_Get_data()._Myfirst);

	mov	rax, rcx

; 582  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myfirst, COMDAT

; 576  : 		return (_Get_data()._Myfirst);

	mov	rax, rcx

; 577  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Get_data, COMDAT

; 555  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 556  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Getal, COMDAT

; 545  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 546  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >, COMDAT

; 389  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 390  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 391  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 423  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBAXPEAPEAVbus_device@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBAXPEAPEAVbus_device@@0@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Orphan_range, COMDAT

; 1960 : 		}

	ret	0
?_Orphan_range@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBAXPEAPEAVbus_device@@0@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Tidy, COMDAT

; 1910 : 		{	// free all storage

$LN103:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1911 : 		this->_Orphan_all();
; 1912 : 
; 1913 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN78@Tidy

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN75@Tidy

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN78@Tidy:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1918 : 			this->_Myfirst() = pointer();

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1919 : 			this->_Mylast() = pointer();

	mov	QWORD PTR [rbx+8], rax

; 1920 : 			this->_Myend() = pointer();

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1922 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN75@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN100@Tidy:
?_Tidy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXXZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Has_unused_capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Has_unused_capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_NXZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Has_unused_capacity, COMDAT

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx+16], rax
	setne	al

; 1727 : 		}

	ret	0
?_Has_unused_capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_NXZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Has_unused_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 105  : 			{	// destroy after unlocking

$LN10:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T3[rsp], -2

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rdx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]
	test	rcx, rcx
	je	SHORT $LN2@Sentry_bas

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 108  : 			}

	add	rsp, 56					; 00000038H
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 99   : 			{	// lock the stream buffer, if there

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 98   : 			: _Myostr(_Ostr)

	mov	QWORD PTR [rcx], rdx

; 99   : 			{	// lock the stream buffer, if there

	mov	rbx, rcx

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]
	test	rcx, rcx
	je	SHORT $LN8@Sentry_bas

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN8@Sentry_bas:

; 102  : 			}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_second, COMDAT

; 302  : 		return (_Myval2);

	mov	rax, rcx

; 303  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_first, COMDAT

; 292  : 		return (*this);

	mov	rax, rcx

; 293  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVbus_device@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+=, COMDAT

; 129  : 		_Verify_offset(_Off);
; 130  : 		_Ptr += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 131  : 		return (*this);

	mov	rax, rcx

; 132  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >, COMDAT

; 41   : 		: _Ptr(_Parg)

	mov	QWORD PTR [rcx], rdx

; 43   : 		this->_Adopt(_Pvector);
; 44   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEAA@PEAPEAVbus_device@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myend, COMDAT

; 601  : 		return (_Get_data()._Myend);

	lea	rax, QWORD PTR [rcx+16]

; 602  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBQEAPEAVbus_device@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myend, COMDAT

; 596  : 		return (_Get_data()._Myend);

	lea	rax, QWORD PTR [rcx+16]

; 597  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAAEAPEAPEAVbus_device@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Get_data, COMDAT

; 560  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 561  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Orphan_all, COMDAT

; 535  : 		_Get_data()._Orphan_all();
; 536  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Destroy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
_First$dead$ = 16
_Last$dead$ = 24
?_Destroy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@0@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Destroy, COMDAT

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1850 : 		}

	ret	0
?_Destroy@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@0@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::capacity, COMDAT

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1716 : 		}

	ret	0
?capacity@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z PROC ; std::allocator<bus_device *>::deallocate, COMDAT

; 990  : 		{	// deallocate object at _Ptr

$LN20:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN15@deallocate

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN12@deallocate

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rax, rcx
$LN15@deallocate:

; 207  : 	::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 993  : 		}

	add	rsp, 40					; 00000028H

; 207  : 	::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN12@deallocate:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN18@deallocate:
?deallocate@?$allocator@PEAVbus_device@@@std@@QEAAXQEAPEAVbus_device@@_K@Z ENDP ; std::allocator<bus_device *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_second, COMDAT

; 307  : 		return (_Myval2);

	mov	rax, rcx

; 308  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
this$dead$ = 8
_Off$dead$ = 16
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Verify_offset, COMDAT

; 110  :  #if _ITERATOR_DEBUG_LEVEL == 0
; 111  : 		(void)_Off;
; 112  :  #else /* ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv */
; 113  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 114  : 		_STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");
; 115  : 		if (_Off < 0)
; 116  : 			{
; 117  : 			_STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");
; 118  : 			}
; 119  : 
; 120  : 		if (_Off > 0)
; 121  : 			{
; 122  : 			_STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");
; 123  : 			}
; 124  :  #endif /* _ITERATOR_DEBUG_LEVEL == 0 */
; 125  : 		}

	ret	0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<bus_device *> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 24   : 	return (_Right < _Left ? _Right : _Left);

	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rdx], rax
	cmovb	rcx, rdx
	mov	rax, rcx

; 25   : 	}

	ret	0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 790  : 	{	// insert NTBS into char stream

$LN109:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T28[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	r15, rdx
	mov	rsi, rcx

; 791  : 	typedef char _Elem;
; 792  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 793  : 	ios_base::iostate _State = ios_base::goodbit;

	xor	ebx, ebx
	mov	DWORD PTR _State$[rsp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 464  : 		return (_CSTD strlen(_First));

	mov	r14, -1
$LL103@operator:
	inc	r14
	cmp	BYTE PTR [rdx+r14], bl
	jne	SHORT $LL103@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 795  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	mov	rcx, QWORD PTR [rcx]
	movsxd	rax, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 433  : 		return (_Wide);

	mov	rdi, QWORD PTR [rax+rsi+40]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 795  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	test	rdi, rdi
	jle	SHORT $LN17@operator
	cmp	rdi, r14
	jle	SHORT $LN17@operator
	sub	rdi, r14
	jmp	SHORT $LN18@operator
$LN17@operator:
	xor	edi, edi
$LN18@operator:

; 98   : 			: _Myostr(_Ostr)

	mov	r12, rsi
	mov	QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rdx, QWORD PTR [rax+rsi+72]
	mov	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	test	rdx, rdx
	je	SHORT $LN37@operator

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rdx]
	mov	rcx, rdx
	call	QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rsi]
	mov	r8, rcx
$LN37@operator:

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	movsxd	r9, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	rax, rcx
	mov	rdx, r8

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [r9+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN33@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	r9, QWORD PTR [r9+rsi+80]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	test	r9, r9
	je	SHORT $LN33@operator
	cmp	r9, rsi
	je	SHORT $LN33@operator

; 123  : 				_Ostr.tie()->flush();

	mov	rcx, r9
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, QWORD PTR [rsi]
	mov	rdx, rax
$LN33@operator:

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	eax, DWORD PTR [rcx+rsi+16]

; 352  : 		return (rdstate() == ios_base::goodbit);

	test	eax, eax
	sete	BYTE PTR _Ok$[rsp+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 797  : 	const typename _Myos::sentry _Ok(_Ostr);

	test	eax, eax

; 798  : 
; 799  : 	if (!_Ok)

	je	SHORT $LN8@operator

; 800  : 		_State |= ios_base::badbit;

	mov	ebx, 4

; 801  : 	else

	jmp	$LN22@operator
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 390  : 		return (_Fmtfl);

	mov	eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 804  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN99@operator
	npad	6
$LL4@operator:

; 805  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	test	rdi, rdi
	jle	SHORT $LN3@operator

; 806  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	je	SHORT $LN106@operator

; 805  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	dec	rdi
	jmp	SHORT $LL4@operator
$LN3@operator:

; 807  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 808  : 					{	// insertion failed, quit
; 809  : 					_State |= ios_base::badbit;
; 810  : 					break;
; 811  : 					}
; 812  : 
; 813  : 		if (_State == ios_base::goodbit
; 814  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	mov	rdx, QWORD PTR [rsi]
$LN99@operator:
	movsxd	rax, DWORD PTR [rdx+4]
	mov	r8, r14
	mov	rdx, r15
	mov	rcx, QWORD PTR [rax+rsi+72]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r14
	jne	SHORT $LN106@operator
$LL104@operator:

; 815  : 			_State |= ios_base::badbit;
; 816  : 
; 817  : 		if (_State == ios_base::goodbit)
; 818  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	test	rdi, rdi
	jle	SHORT $LN6@operator

; 819  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	je	SHORT $LN106@operator

; 815  : 			_State |= ios_base::badbit;
; 816  : 
; 817  : 		if (_State == ios_base::goodbit)
; 818  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	dec	rdi
	jmp	SHORT $LL104@operator
$LN106@operator:

; 820  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 821  : 					{	// insertion failed, quit
; 822  : 					_State |= ios_base::badbit;
; 823  : 					break;
; 824  : 					}
; 825  : 		_Ostr.width(0);

	mov	ebx, 4
	mov	DWORD PTR _State$[rsp], ebx
$LN6@operator:
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase

; 439  : 		_Wide = _Newwidth;

	mov	QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
	jmp	SHORT $LN22@operator
$LN23@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
	mov	rsi, QWORD PTR _Ostr$[rsp]
	mov	ebx, DWORD PTR _State$[rsp]
	mov	r12, QWORD PTR _Ok$[rsp]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 829  : 	_Ostr.setstate(_State);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rsi
	xor	r8d, r8d
	mov	edx, ebx
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1

; 137  : 			if (!_STD uncaught_exception())	// TRANSITION, OS#15518458

	call	QWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	test	al, al
	jne	SHORT $LN82@operator

; 138  : 				{
; 139  : 				this->_Myostr._Osfx();

	mov	rcx, r12
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN82@operator:

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rax, QWORD PTR [r12]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+r12+72]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN86@operator

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN86@operator:

; 830  : 	return (_Ostr);

	mov	rax, rsi

; 831  : 	}

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4

; 826  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$4
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4

; 826  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$4
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 48
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 1019 : 	{	// insert newline and flush stream

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1020 : 	_Ostr.put(_Ostr.widen('\n'));

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	dl, 10
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	movzx	edx, al
	mov	rcx, rbx
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 1021 : 	_Ostr.flush();

	mov	rcx, rbx
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 1022 : 	return (_Ostr);

	mov	rax, rbx

; 1023 : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<bus_device *> > >, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<bus_device *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z PROC ; std::_Move_unchecked<bus_device * *,bus_device * *>, COMDAT

; 2734 : 	{	// move [_First, _Last) to [_Dest, ...), choose optimization

$LN10:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 2735 : 		// note: _Move_unchecked is called directly from elsewhere in the STL
; 2736 : 	return (_Move_unchecked1(_First, _Last,
; 2737 : 		_Dest, _Ptr_move_cat(_First, _Dest)));
; 2738 : 	}

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move_unchecked@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z ENDP ; std::_Move_unchecked<bus_device * *,bus_device * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@PEAPEAV1@@Z PROC ; std::_Unfancy<bus_device *>, COMDAT

; 346  : 	return (_Ptr);

	mov	rax, rcx

; 347  : 	}

	ret	0
??$_Unfancy@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@PEAPEAV1@@Z ENDP ; std::_Unfancy<bus_device *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@PEAVbus_device@@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$dead$ = 16
??$destroy@PEAVbus_device@@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@@Z PROC ; std::_Default_allocator_traits<std::allocator<bus_device *> >::destroy<bus_device *>, COMDAT

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	ret	0
??$destroy@PEAVbus_device@@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<bus_device *> >::destroy<bus_device *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@AEBQEAVbus_device@@@std@@YAAEBQEAVbus_device@@AEBQEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAVbus_device@@@std@@YAAEBQEAVbus_device@@AEBQEAV1@@Z PROC ; std::forward<bus_device * const &>, COMDAT

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1575 : 	}

	ret	0
??$forward@AEBQEAVbus_device@@@std@@YAAEBQEAVbus_device@@AEBQEAV1@@Z ENDP ; std::forward<bus_device * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@PEAVbus_device@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@AEBQEAV3@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEAVbus_device@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@AEBQEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<bus_device *> >::construct<bus_device *,bus_device * const &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))
; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	ret	0
??$construct@PEAVbus_device@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SAXAEAV?$allocator@PEAVbus_device@@@1@QEAPEAVbus_device@@AEBQEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<bus_device *> >::construct<bus_device *,bus_device * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z
_TEXT	SEGMENT
this$ = 80
_Whereptr$ = 88
<_Val_0>$ = 96
??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>, COMDAT

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

$LN338:
	push	rbp
	push	rdi
	push	r12
	push	r14
	sub	rsp, 40					; 00000028H

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	rax, QWORD PTR [rcx+8]

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

	mov	r14, rdx

; 943  : 			// pre: !_Has_unused_capacity()
; 944  : 		const size_type _Whereoff = static_cast<size_type>(_Whereptr - this->_Myfirst());

	mov	rdx, QWORD PTR [rcx]
	mov	rbp, r14
	sub	rbp, rdx

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	sub	rax, rdx

; 943  : 			// pre: !_Has_unused_capacity()
; 944  : 		const size_type _Whereoff = static_cast<size_type>(_Whereptr - this->_Myfirst());

	sar	rbp, 3

; 945  : 		_Alty& _Al = this->_Getal();
; 946  : 		const size_type _Oldsize = size();
; 947  : 
; 948  : 		if (_Oldsize == max_size())

	mov	r9, 2305843009213693951			; 1fffffffffffffffH

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	sar	rax, 3

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

	mov	r12, r8
	mov	rdi, rcx

; 945  : 		_Alty& _Al = this->_Getal();
; 946  : 		const size_type _Oldsize = size();
; 947  : 
; 948  : 		if (_Oldsize == max_size())

	cmp	rax, r9
	je	$LN336@Emplace_re

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, rdx
	mov	QWORD PTR [rsp+104], rsi
	sar	rcx, 3

; 951  : 			}
; 952  : 
; 953  : 		const size_type _Newsize = _Oldsize + 1;

	lea	rsi, QWORD PTR [rax+1]

; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	rdx, rcx
	mov	QWORD PTR [rsp+32], r15
	shr	rdx, 1
	mov	rax, r9
	sub	rax, rdx
	cmp	rcx, rax
	jbe	SHORT $LN48@Emplace_re

; 1857 : 			{
; 1858 : 			return (_Newsize);	// geometric growth would overflow

	mov	rax, rsi
	jmp	SHORT $LN49@Emplace_re
$LN48@Emplace_re:

; 1859 : 			}
; 1860 : 
; 1861 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [rdx+rcx]

; 1862 : 
; 1863 : 		if (_Geometric < _Newsize)

	cmp	rax, rsi
	cmovb	rax, rsi
$LN49@Emplace_re:
	mov	QWORD PTR [rsp+96], rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 25   : 	size_t _Result = _Count * _Ty_size;

	lea	r15, QWORD PTR [rax*8]
	mov	rdx, r15

; 26   : 	if (_Max_possible < _Count)

	mov	r8, -1
	cmp	rax, r9
	jbe	SHORT $LN80@Emplace_re

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

	mov	rdx, r8

; 182  : 	if (_Bytes >= _Big_allocation_threshold)

	jmp	SHORT $LN329@Emplace_re
$LN80@Emplace_re:
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN83@Emplace_re
$LN329@Emplace_re:

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdx+39]

; 94   : 	if (_Block_size <= _Bytes)

	cmp	rcx, rdx
	cmovbe	rcx, r8

; 52   : 		return (::operator new(_Bytes));

	call	??2@YAPEAX_K@Z				; operator new

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN298@Emplace_re

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 184  : 		return (_Allocate_manually_vector_aligned<_Traits>(_Bytes));

	jmp	SHORT $LN82@Emplace_re
$LN83@Emplace_re:

; 185  : 		}
; 186  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 187  : 
; 188  : 	if (_Bytes != 0)

	test	rdx, rdx
	je	SHORT $LN84@Emplace_re

; 52   : 		return (::operator new(_Bytes));

	mov	rcx, rdx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 190  : 		return (_Traits::_Allocate(_Bytes));

	jmp	SHORT $LN82@Emplace_re
$LN84@Emplace_re:

; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);

	xor	ebx, ebx
$LN82@Emplace_re:

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	rax, QWORD PTR [r12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 964  : 		if (_Whereptr == this->_Mylast())

	mov	rcx, rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rbx+rbp*8], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 964  : 		if (_Whereptr == this->_Mylast())

	mov	r8, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rdi]
	cmp	r14, r8
	jne	SHORT $LN4@Emplace_re
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 968  : 		else

	jmp	SHORT $LN334@Emplace_re
$LN4@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	mov	r8, r14
	sub	r8, rdx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	mov	r8, QWORD PTR [rdi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

	lea	rcx, QWORD PTR [rbp+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, r14
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

	lea	rcx, QWORD PTR [rbx+rcx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, r14
$LN334@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

	call	memmove

; 1898 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN302@Emplace_re

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN301@Emplace_re

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN298@Emplace_re

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN301@Emplace_re:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN302@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1905 : 		this->_Mylast() = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rbx+rsi*8]
	mov	QWORD PTR [rdi], rbx
	mov	rsi, QWORD PTR [rsp+104]
	mov	QWORD PTR [rdi+8], rax

; 1906 : 		this->_Myend() = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [r15+rbx]
	mov	rbx, QWORD PTR [rsp+96]
	mov	r15, QWORD PTR [rsp+32]
	mov	QWORD PTR [rdi+16], rax

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);
; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);
; 977  : 		_RERAISE;
; 978  : 		_CATCH_END
; 979  : 
; 980  : 		_Change_array(_Newvec, _Newsize, _Newcapacity);
; 981  : 		return (this->_Myfirst() + _Whereoff);

	mov	rax, QWORD PTR [rdi]
	lea	rax, QWORD PTR [rax+rbp*8]

; 982  : 		}

	add	rsp, 40					; 00000028H
	pop	r14
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
$LN298@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN336@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 950  : 			_Xlength();

	call	?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ ; std::vector<bus_device *,std::allocator<bus_device *> >::_Xlength
	int	3
$LN333@Emplace_re:
??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 389  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 390  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 391  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 279  : 		}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 180  : 	{	// allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rcx

; 181  :  #if defined(_M_IX86) || defined(_M_X64)
; 182  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN2@Allocate

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	add	rcx, 39					; 00000027H

; 94   : 	if (_Block_size <= _Bytes)

	mov	rdx, -1
	cmp	rcx, rax
	cmovbe	rcx, rdx

; 52   : 		return (::operator new(_Bytes));

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN11@Allocate

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 189  : 		{
; 190  : 		return (_Traits::_Allocate(_Bytes));
; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);
; 194  : 	}

	add	rsp, 40					; 00000028H
	ret	0
$LN11@Allocate:

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN2@Allocate:

; 183  : 		{	// boost the alignment of big allocations to help autovectorization
; 184  : 		return (_Allocate_manually_vector_aligned<_Traits>(_Bytes));
; 185  : 		}
; 186  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 187  : 
; 188  : 	if (_Bytes != 0)

	test	rax, rax
	je	SHORT $LN3@Allocate

; 189  : 		{
; 190  : 		return (_Traits::_Allocate(_Bytes));
; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);
; 194  : 	}

	add	rsp, 40					; 00000028H

; 52   : 		return (::operator new(_Bytes));

	jmp	??2@YAPEAX_K@Z				; operator new
$LN3@Allocate:

; 189  : 		{
; 190  : 		return (_Traits::_Allocate(_Bytes));
; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);
; 194  : 	}

	add	rsp, 40					; 00000028H
	ret	0
$LN21@Allocate:
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 199  : 	{	// deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

$LN17:
	sub	rsp, 40					; 00000028H

; 200  :  #if defined(_M_IX86) || defined(_M_X64)
; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN13@Deallocate

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN10@Deallocate

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN13@Deallocate:

; 208  : 	}

	add	rsp, 40					; 00000028H

; 202  : 		{	// boost the alignment of big allocations to help autovectorization
; 203  : 		_Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 204  : 		}
; 205  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 206  : 
; 207  : 	::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@Deallocate:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN15@Deallocate:
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@@Z PROC ; std::_Destroy_range<std::allocator<bus_device *> >, COMDAT

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<
; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

	ret	0
??$_Destroy_range@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<bus_device *> >::_Vector_val<std::_Simple_types<bus_device *> >, COMDAT

; 389  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 390  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 391  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 393  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<bus_device *> >::_Vector_val<std::_Simple_types<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Xlength, COMDAT

; 1925 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1926 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@CAXXZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Change_array, COMDAT

; 1895 : 		{	// orphan all iterators, discard old array, acquire new array

$LN103:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 1896 : 		this->_Orphan_all();
; 1897 : 
; 1898 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN79@Change_arr

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN78@Change_arr

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN75@Change_arr

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN78@Change_arr:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN79@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1905 : 		this->_Mylast() = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rdi+rbp*8]
	mov	QWORD PTR [rbx], rdi

; 1907 : 		}

	mov	rbp, QWORD PTR [rsp+64]
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rdi+rsi*8]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN75@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN100@Change_arr:
?_Change_array@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXQEAPEAVbus_device@@_K1@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Calculate_growth, COMDAT

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	r8, QWORD PTR [rcx+16]

; 1854 : 		const size_type _Oldcapacity = capacity();
; 1855 : 
; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	sub	r8, QWORD PTR [rcx]
	sar	r8, 3

; 1854 : 		const size_type _Oldcapacity = capacity();
; 1855 : 
; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	r8, rax
	ja	SHORT $LN31@Calculate_

; 1857 : 			{
; 1858 : 			return (_Newsize);	// geometric growth would overflow
; 1859 : 			}
; 1860 : 
; 1861 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [rcx+r8]

; 1862 : 
; 1863 : 		if (_Geometric < _Newsize)

	cmp	rax, rdx
	jae	SHORT $LN1@Calculate_
$LN31@Calculate_:

; 1864 : 			{
; 1865 : 			return (_Newsize);	// geometric growth would be insufficient

	mov	rax, rdx
$LN1@Calculate_:

; 1866 : 			}
; 1867 : 
; 1868 : 		return (_Geometric);	// geometric growth is sufficient
; 1869 : 		}

	ret	0
?_Calculate_growth@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z
_TEXT	SEGMENT
__$ArrayPad$ = 32
this$dead$ = 64
_First$ = 72
_Last$ = 80
_Dest$ = 88
?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove_if_noexcept, COMDAT

; 1842 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

$LN31:
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r9
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1845 : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Umove_if_noexcept@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z
_TEXT	SEGMENT
this$dead$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove, COMDAT

; 1827 : 		{	// move [_First, _Last) to raw _Dest, using allocator

$LN29:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r9
	sub	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1827 : 		{	// move [_First, _Last) to raw _Dest, using allocator

	mov	rdi, r9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rbx
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1829 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Umove@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAPEAPEAVbus_device@@PEAPEAV3@00@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?max_size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::max_size, COMDAT

; 1709 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1710 : 			_Alty_traits::max_size(this->_Getal())));
; 1711 : 		}

	ret	0
?max_size@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z PROC ; std::allocator<bus_device *>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN30:
	sub	rsp, 40					; 00000028H

; 26   : 	if (_Max_possible < _Count)

	mov	rcx, 2305843009213693951		; 1fffffffffffffffH
	lea	rax, QWORD PTR [rdx*8]
	mov	r8, -1
	cmp	rdx, rcx
	jbe	SHORT $LN4@allocate

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

	mov	rax, r8

; 182  : 	if (_Bytes >= _Big_allocation_threshold)

	jmp	SHORT $LN27@allocate
$LN4@allocate:
	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN7@allocate
$LN27@allocate:

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rax+39]

; 94   : 	if (_Block_size <= _Bytes)

	cmp	rcx, rax
	cmovbe	rcx, r8

; 52   : 		return (::operator new(_Bytes));

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN16@allocate

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));
; 998  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN16@allocate:

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN7@allocate:

; 188  : 	if (_Bytes != 0)

	test	rax, rax
	je	SHORT $LN8@allocate

; 52   : 		return (::operator new(_Bytes));

	mov	rcx, rax

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));
; 998  : 		}

	add	rsp, 40					; 00000028H

; 52   : 		return (::operator new(_Bytes));

	jmp	??2@YAPEAX_K@Z				; operator new
$LN8@allocate:

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));
; 998  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:
?allocate@?$allocator@PEAVbus_device@@@std@@QEAAPEAPEAVbus_device@@_K@Z ENDP ; std::allocator<bus_device *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@PEAVbus_device@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@PEAVbus_device@@@std@@QEAA@XZ PROC	; std::allocator<bus_device *>::allocator<bus_device *>, COMDAT

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@PEAVbus_device@@@std@@QEAA@XZ ENDP	; std::allocator<bus_device *>::allocator<bus_device *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SA_KAEBV?$allocator@PEAVbus_device@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SA_KAEBV?$allocator@PEAVbus_device@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<bus_device *> >::max_size, COMDAT

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 893  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVbus_device@@@std@@@std@@SA_KAEBV?$allocator@PEAVbus_device@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<bus_device *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Getal, COMDAT

; 550  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 551  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<bus_device *,std::allocator<bus_device *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_First$ = 16
_Last$ = 24
_Dest$ = 32
__formal$dead$ = 40
?_Umove_if_noexcept1@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove_if_noexcept1, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r9
	jmp	memmove
?_Umove_if_noexcept1@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@AEAAXPEAPEAVbus_device@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<bus_device *,std::allocator<bus_device *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_first, COMDAT

; 297  : 		return (*this);

	mov	rax, rcx

; 298  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVbus_device@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVbus_device@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVbus_device@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<bus_device *>,std::_Vector_val<std::_Simple_types<bus_device *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_move_cat@PEAVbus_device@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVbus_device@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??$_Ptr_move_cat@PEAVbus_device@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVbus_device@@0@Z PROC ; std::_Ptr_move_cat<bus_device *,bus_device *>, COMDAT

; 1087 : 	return {};

	mov	rax, rcx

; 1088 : 	}

	ret	0
??$_Ptr_move_cat@PEAVbus_device@@PEAV1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVbus_device@@0@Z ENDP ; std::_Ptr_move_cat<bus_device *,bus_device *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$dead$ = 72
??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z PROC ; std::_Move_unchecked1<bus_device * *,bus_device * *>, COMDAT

; 2726 : 	{	// move [_First, _Last) to [_Dest, ...), memmove optimization

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 2727 : 	return (_Copy_memmove(_First, _Last, _Dest));
; 2728 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move_unchecked1@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z ENDP ; std::_Move_unchecked1<bus_device * *,bus_device * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 92   : 	{	// allocate _Bytes manually aligned to at least _Big_allocation_alignment

$LN16:
	sub	rsp, 40					; 00000028H

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 94   : 	if (_Block_size <= _Bytes)

	mov	rdx, -1
	cmp	rax, rcx
	cmovbe	rax, rdx

; 52   : 		return (::operator new(_Bytes));

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 95   : 		{	// add overflow, try allocating all of memory and assume the
; 96   : 			// allocation function will throw bad_alloc
; 97   : 		_Block_size = static_cast<size_t>(-1);
; 98   : 		}
; 99   : 
; 100  : 	const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN7@Allocate_m

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 105  : 
; 106  :   #ifdef _DEBUG
; 107  : 	static_cast<uintptr_t *>(_Ptr)[-2] = _Big_allocation_sentinel;
; 108  :   #endif /* _DEBUG */
; 109  : 	return (_Ptr);
; 110  : 	}

	add	rsp, 40					; 00000028H
	ret	0
$LN7@Allocate_m:

; 95   : 		{	// add overflow, try allocating all of memory and assume the
; 96   : 			// allocation function will throw bad_alloc
; 97   : 		_Block_size = static_cast<size_t>(-1);
; 98   : 		}
; 99   : 
; 100  : 	const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN14@Allocate_m:
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Destroy_range1@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<bus_device *> >, COMDAT

; 1146 : 		// nothing to do
; 1147 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@PEAVbus_device@@@std@@@std@@YAXPEAPEAVbus_device@@0AEAV?$allocator@PEAVbus_device@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z PROC ; std::_Uninitialized_move<bus_device * *,bus_device * *,std::allocator<bus_device *> >, COMDAT

; 251  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN22:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory

; 261  : 	}

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAPEAVbus_device@@PEAPEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVbus_device@@@0@@Z ENDP ; std::_Uninitialized_move<bus_device * *,bus_device * *,std::allocator<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Idl_distance@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0@Z PROC ; std::_Idl_distance<bus_device * *,bus_device * *>, COMDAT

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));
; 976  : 	}

	ret	0
??$_Idl_distance@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0@Z ENDP ; std::_Idl_distance<bus_device * *,bus_device * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 8
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 25   : 	size_t _Result = _Count * _Ty_size;
; 26   : 	if (_Max_possible < _Count)

	mov	rdx, 2305843009213693951		; 1fffffffffffffffH
	lea	rax, QWORD PTR [rcx*8]
	cmp	rcx, rdx
	mov	r8, -1
	cmova	rax, r8

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);
; 30   : 		}
; 31   : 
; 32   : 	return (_Result);
; 33   : 	}

	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<bus_device * *,bus_device * *>, COMDAT

; 2398 : 	{	// implement copy-like function as memmove

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 2399 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));
; 2400 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));
; 2401 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));
; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 2405 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAPEAVbus_device@@PEAPEAV1@@std@@YAPEAPEAVbus_device@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<bus_device * *,bus_device * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Get_unwrapped@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@@Z PROC ; std::_Get_unwrapped<bus_device *>, COMDAT

; 663  : 	return (_Ptr);

	mov	rax, rcx

; 664  : 	}

	ret	0
??$_Get_unwrapped@PEAVbus_device@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@@Z ENDP ; std::_Get_unwrapped<bus_device *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
__formal$dead$ = 24
??$_Idl_distance1@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<bus_device * *,bus_device * *>, COMDAT

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 969  : 	}

	ret	0
??$_Idl_distance1@PEAPEAVbus_device@@PEAPEAV1@@std@@YA_JAEBQEAPEAVbus_device@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<bus_device * *,bus_device * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@PEAVbus_device@@_J$0A@@std@@YAPEAPEAVbus_device@@QEAPEAV1@_J@Z
_TEXT	SEGMENT
_Src$ = 8
__formal$dead$ = 16
??$_Get_unwrapped_n@PEAVbus_device@@_J$0A@@std@@YAPEAPEAVbus_device@@QEAPEAV1@_J@Z PROC ; std::_Get_unwrapped_n<bus_device *,__int64,0>, COMDAT

; 809  : 	return (_Src);

	mov	rax, rcx

; 810  : 	}

	ret	0
??$_Get_unwrapped_n@PEAVbus_device@@_J$0A@@std@@YAPEAPEAVbus_device@@QEAPEAV1@_J@Z ENDP ; std::_Get_unwrapped_n<bus_device *,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
__formal$dead$ = 88
??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<bus_device *,bus_device *,std::allocator<bus_device *> >, COMDAT

; 243  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory

; 245  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move_al_unchecked@PEAVbus_device@@PEAV1@V?$allocator@PEAVbus_device@@@std@@@std@@YAPEAPEAVbus_device@@QEAPEAV1@00AEAV?$allocator@PEAVbus_device@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<bus_device *,bus_device *,std::allocator<bus_device *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@PEAVbus_device@@@std@@YAXAEAPEAPEAVbus_device@@QEAPEAV1@@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@PEAVbus_device@@@std@@YAXAEAPEAPEAVbus_device@@QEAPEAV1@@Z PROC ; std::_Seek_wrapped<bus_device *>, COMDAT

; 872  : 	_It = _UIt;

	mov	QWORD PTR [rcx], rdx

; 873  : 	}

	ret	0
??$_Seek_wrapped@PEAVbus_device@@@std@@YAXAEAPEAPEAVbus_device@@QEAPEAV1@@Z ENDP ; std::_Seek_wrapped<bus_device *>
_TEXT	ENDS
END
