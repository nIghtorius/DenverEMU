; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27050.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	??_C@_0CD@HFAOMFMO@?$CIc?$CJ?52018?5P?4?5Santing?5aka?5nIghtor@ ; `string'
PUBLIC	??_C@_08BCJHEJEB@0?41?5beta@			; `string'
PUBLIC	??_C@_0BI@LADLCFAM@Project?5Denver?5version?5@	; `string'
PUBLIC	??_C@_0BI@PEJIDHKI@Emulator?5initializing?4?4@	; `string'
PUBLIC	??_C@_0BN@LGEBLPBE@Setting?5up?5clock?5emulation?4?4@ ; `string'
PUBLIC	??_C@_0BB@OGAHJCEE@Setting?5up?5BUS?4?4@	; `string'
PUBLIC	??_C@_0BB@EFJCOBHI@Setting?5up?5PPU?4?4@	; `string'
PUBLIC	??_C@_0BB@INBIDAEG@Setting?5up?5APU?4?4@	; `string'
PUBLIC	??_C@_0BK@IAPLHOFP@Setting?5up?5NES?5system?5RAM@ ; `string'
PUBLIC	??_C@_0CK@MOIPCPJD@Adding?5PPU?5and?5RAM?5device?5to?5sy@ ; `string'
PUBLIC	??_C@_0DA@IJIOKKBG@Adding?5PPU?5and?5CPU?5device?5to?5cl@ ; `string'
PUBLIC	??_C@_0BB@HLHHLKIB@Setting?5up?5SDL?4?4@	; `string'
PUBLIC	??_C@_0P@HLCDCNJ@Denver?5Project@		; `string'
PUBLIC	??_C@_0DE@GDKIJFKE@Oh?5dear?4?4?5Null?5buffer?0?5expect?5n@ ; `string'
PUBLIC	??_C@_0P@NFDABKGD@Booting?5CPU?4?4?5@		; `string'
PUBLIC	??_C@_0BG@GPBJINFC@Executing?5emulation?4?4@	; `string'
PUBLIC	??_C@_06HOALFDNC@oc?4nes@			; `string'
PUBLIC	??_C@_0M@DMCACEHO@Cpu?5ticks?3?5@		; `string'
PUBLIC	??_C@_0M@EHKGBLHC@Ppu?5ticks?3?5@		; `string'
PUBLIC	??_C@_0BA@PGOFLHGN@Cpu?5syncstate?3?5@		; `string'
PUBLIC	??_C@_0BA@DJAKDNAB@Ppu?5syncstate?3?5@		; `string'
PUBLIC	??_C@_06OHPOBCPD@?5?$DN?$DN?$DO?$DO?5@		; `string'
PUBLIC	??_C@_08EIBEEMIC@vram?4dmp@			; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
EXTRN	__imp_??Bid@locale@std@@QEAA_KXZ:PROC
EXTRN	__imp_?always_noconv@codecvt_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEBD_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@G@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@V?$fpos@U_Mbstatet@@@2@@Z:PROC
EXTRN	__imp_?read@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEAD_J@Z:PROC
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	__imp_?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z:PROC
EXTRN	__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:QWORD
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_?_Xout_of_range@std@@YAXPEBD@Z:PROC
EXTRN	__imp_?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp__get_stream_buffer_pointers:PROC
EXTRN	__imp__lock_file:PROC
EXTRN	__imp__unlock_file:PROC
EXTRN	__imp_fread:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp_fgetpos:PROC
EXTRN	__imp__fseeki64:PROC
EXTRN	__imp_fsetpos:PROC
EXTRN	__imp_setvbuf:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_SDL_UpdateRect:PROC
EXTRN	__imp_SDL_UpperBlit:PROC
EXTRN	__imp_SDL_SoftStretch:PROC
EXTRN	__imp_SDL_PollEvent:PROC
EXTRN	__imp_SDL_CreateRGBSurface:PROC
EXTRN	__imp_SDL_SetVideoMode:PROC
EXTRN	__imp_SDL_WM_SetCaption:PROC
EXTRN	__imp_SDL_Init:PROC
EXTRN	__imp_ungetc:PROC
EXTRN	__imp_fputc:PROC
EXTRN	__imp_fgetc:PROC
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	0a8H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	0b0H
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	0b0H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	0a8H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08EIBEEMIC@vram?4dmp@
CONST	SEGMENT
??_C@_08EIBEEMIC@vram?4dmp@ DB 'vram.dmp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHPOBCPD@?5?$DN?$DN?$DO?$DO?5@
CONST	SEGMENT
??_C@_06OHPOBCPD@?5?$DN?$DN?$DO?$DO?5@ DB ' ==>> ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DJAKDNAB@Ppu?5syncstate?3?5@
CONST	SEGMENT
??_C@_0BA@DJAKDNAB@Ppu?5syncstate?3?5@ DB 'Ppu syncstate: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PGOFLHGN@Cpu?5syncstate?3?5@
CONST	SEGMENT
??_C@_0BA@PGOFLHGN@Cpu?5syncstate?3?5@ DB 'Cpu syncstate: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EHKGBLHC@Ppu?5ticks?3?5@
CONST	SEGMENT
??_C@_0M@EHKGBLHC@Ppu?5ticks?3?5@ DB 'Ppu ticks: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DMCACEHO@Cpu?5ticks?3?5@
CONST	SEGMENT
??_C@_0M@DMCACEHO@Cpu?5ticks?3?5@ DB 'Cpu ticks: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HOALFDNC@oc?4nes@
CONST	SEGMENT
??_C@_06HOALFDNC@oc?4nes@ DB 'oc.nes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GPBJINFC@Executing?5emulation?4?4@
CONST	SEGMENT
??_C@_0BG@GPBJINFC@Executing?5emulation?4?4@ DB 'Executing emulation..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NFDABKGD@Booting?5CPU?4?4?5@
CONST	SEGMENT
??_C@_0P@NFDABKGD@Booting?5CPU?4?4?5@ DB 'Booting CPU.. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GDKIJFKE@Oh?5dear?4?4?5Null?5buffer?0?5expect?5n@
CONST	SEGMENT
??_C@_0DE@GDKIJFKE@Oh?5dear?4?4?5Null?5buffer?0?5expect?5n@ DB 'Oh dear..'
	DB	' Null buffer, expect nothing from me. :(..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HLCDCNJ@Denver?5Project@
CONST	SEGMENT
??_C@_0P@HLCDCNJ@Denver?5Project@ DB 'Denver Project', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HLHHLKIB@Setting?5up?5SDL?4?4@
CONST	SEGMENT
??_C@_0BB@HLHHLKIB@Setting?5up?5SDL?4?4@ DB 'Setting up SDL..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IJIOKKBG@Adding?5PPU?5and?5CPU?5device?5to?5cl@
CONST	SEGMENT
??_C@_0DA@IJIOKKBG@Adding?5PPU?5and?5CPU?5device?5to?5cl@ DB 'Adding PPU '
	DB	'and CPU device to clock oscillator..', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@MOIPCPJD@Adding?5PPU?5and?5RAM?5device?5to?5sy@
CONST	SEGMENT
??_C@_0CK@MOIPCPJD@Adding?5PPU?5and?5RAM?5device?5to?5sy@ DB 'Adding PPU '
	DB	'and RAM device to system bus..', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IAPLHOFP@Setting?5up?5NES?5system?5RAM@
CONST	SEGMENT
??_C@_0BK@IAPLHOFP@Setting?5up?5NES?5system?5RAM@ DB 'Setting up NES syst'
	DB	'em RAM', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@INBIDAEG@Setting?5up?5APU?4?4@
CONST	SEGMENT
??_C@_0BB@INBIDAEG@Setting?5up?5APU?4?4@ DB 'Setting up APU..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EFJCOBHI@Setting?5up?5PPU?4?4@
CONST	SEGMENT
??_C@_0BB@EFJCOBHI@Setting?5up?5PPU?4?4@ DB 'Setting up PPU..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OGAHJCEE@Setting?5up?5BUS?4?4@
CONST	SEGMENT
??_C@_0BB@OGAHJCEE@Setting?5up?5BUS?4?4@ DB 'Setting up BUS..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LGEBLPBE@Setting?5up?5clock?5emulation?4?4@
CONST	SEGMENT
??_C@_0BN@LGEBLPBE@Setting?5up?5clock?5emulation?4?4@ DB 'Setting up cloc'
	DB	'k emulation..', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PEJIDHKI@Emulator?5initializing?4?4@
CONST	SEGMENT
??_C@_0BI@PEJIDHKI@Emulator?5initializing?4?4@ DB 'Emulator initializing.'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LADLCFAM@Project?5Denver?5version?5@
CONST	SEGMENT
??_C@_0BI@LADLCFAM@Project?5Denver?5version?5@ DB 'Project Denver version'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08BCJHEJEB@0?41?5beta@
CONST	SEGMENT
??_C@_08BCJHEJEB@0?41?5beta@ DB '0.1 beta', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFAOMFMO@?$CIc?$CJ?52018?5P?4?5Santing?5aka?5nIghtor@
CONST	SEGMENT
??_C@_0CD@HFAOMFMO@?$CIc?$CJ?52018?5P?4?5Santing?5aka?5nIghtor@ DB '(c) 2'
	DB	'018 P. Santing aka nIghtorius', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
PUBLIC	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::_Facet_base *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEBAAEBQEAV_Facet_base@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_second
PUBLIC	?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAAEBQEAV_Facet_base@2@XZ ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAPEAV_Facet_base@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_second
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	?get@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::get
PUBLIC	?get_deleter@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::get_deleter
PUBLIC	?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAPEAV_Facet_base@2@XZ ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Myptr
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2
PUBLIC	??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z		; std::_Refancy<char *,0>
PUBLIC	??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>
PUBLIC	??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
PUBLIC	??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()
PUBLIC	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
PUBLIC	?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::open
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
PUBLIC	?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z ; std::basic_ofstream<char,std::char_traits<char> >::__autoclassinit2
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	?__autoclassinit2@vrom@@QEAAX_K@Z		; vrom::__autoclassinit2
PUBLIC	?__autoclassinit2@rom@@QEAAX_K@Z		; rom::__autoclassinit2
PUBLIC	?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z ; std::basic_ifstream<char,std::char_traits<char> >::__autoclassinit2
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	?__autoclassinit2@mainram@@QEAAX_K@Z		; mainram::__autoclassinit2
PUBLIC	?__autoclassinit2@nesvideo@@QEAAX_K@Z		; nesvideo::__autoclassinit2
PUBLIC	?__autoclassinit2@apu@@QEAAX_K@Z		; apu::__autoclassinit2
PUBLIC	?__autoclassinit2@ppu@@QEAAX_K@Z		; ppu::__autoclassinit2
PUBLIC	?__autoclassinit2@cpu2a03_fast@@QEAAX_K@Z	; cpu2a03_fast::__autoclassinit2
PUBLIC	?__autoclassinit2@bus@@QEAAX_K@Z		; bus::__autoclassinit2
PUBLIC	?__autoclassinit2@fastclock@@QEAAX_K@Z		; fastclock::__autoclassinit2
PUBLIC	main
PUBLIC	??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z	; std::_Ungetc<char>
PUBLIC	??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	?not_eof@?$char_traits@D@std@@SAHAEBH@Z		; std::char_traits<char>::not_eof
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHAEBD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?to_char_type@?$char_traits@D@std@@SADAEBH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD imagerel $LN8
	DD	imagerel $LN8+40
	DD	imagerel $unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD imagerel $LN27
	DD	imagerel $LN27+37
	DD	imagerel $unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN7
	DD	imagerel $LN7+64
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD imagerel $LN132
	DD	imagerel $LN132+47
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD imagerel $LN132+47
	DD	imagerel $LN132+336
	DD	imagerel $chain$2$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD imagerel $LN132+336
	DD	imagerel $LN132+342
	DD	imagerel $chain$3$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD imagerel $LN72
	DD	imagerel $LN72+284
	DD	imagerel $unwind$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN28
	DD	imagerel $LN28+92
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD imagerel $LN17
	DD	imagerel $LN17+90
	DD	imagerel $unwind$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD imagerel $LN26
	DD	imagerel $LN26+212
	DD	imagerel $unwind$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ DD imagerel $LN19
	DD	imagerel $LN19+127
	DD	imagerel $unwind$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z DD imagerel $LN13
	DD	imagerel $LN13+192
	DD	imagerel $unwind$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ DD imagerel $LN22
	DD	imagerel $LN22+198
	DD	imagerel $unwind$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z DD imagerel $LN15
	DD	imagerel $LN15+72
	DD	imagerel $unwind$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z DD imagerel $LN26
	DD	imagerel $LN26+61
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z DD imagerel $LN11
	DD	imagerel $LN11+57
	DD	imagerel $unwind$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN49
	DD	imagerel $LN49+95
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN19
	DD	imagerel $LN19+149
	DD	imagerel $unwind$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+59
	DD	imagerel $unwind$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+59
	DD	imagerel $unwind$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN14
	DD	imagerel $LN14+115
	DD	imagerel $unwind$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN70
	DD	imagerel $LN70+96
	DD	imagerel $unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN70+96
	DD	imagerel $LN70+386
	DD	imagerel $chain$0$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN70+386
	DD	imagerel $LN70+416
	DD	imagerel $chain$1$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN73
	DD	imagerel $LN73+250
	DD	imagerel $unwind$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN24
	DD	imagerel $LN24+51
	DD	imagerel $unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN24+51
	DD	imagerel $LN24+77
	DD	imagerel $chain$0$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN24+77
	DD	imagerel $LN24+101
	DD	imagerel $chain$2$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN532
	DD	imagerel $LN532+721
	DD	imagerel $unwind$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z DD imagerel $LN21
	DD	imagerel $LN21+225
	DD	imagerel $unwind$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z DD imagerel $LN21
	DD	imagerel $LN21+212
	DD	imagerel $unwind$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN23
	DD	imagerel $LN23+262
	DD	imagerel $unwind$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN22
	DD	imagerel $LN22+211
	DD	imagerel $unwind$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z DD imagerel $LN9
	DD	imagerel $LN9+89
	DD	imagerel $unwind$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN13
	DD	imagerel $LN13+71
	DD	imagerel $unwind$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z DD imagerel $LN17
	DD	imagerel $LN17+80
	DD	imagerel $unwind$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN24
	DD	imagerel $LN24+212
	DD	imagerel $unwind$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+198
	DD	imagerel $unwind$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z DD imagerel $LN6
	DD	imagerel $LN6+78
	DD	imagerel $unwind$?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN24
	DD	imagerel $LN24+212
	DD	imagerel $unwind$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+198
	DD	imagerel $unwind$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z DD imagerel $LN6
	DD	imagerel $LN6+78
	DD	imagerel $unwind$?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN63
	DD	imagerel $LN63+95
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN20
	DD	imagerel $LN20+210
	DD	imagerel $unwind$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN20
	DD	imagerel $LN20+210
	DD	imagerel $unwind$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN757
	DD	imagerel $LN757+3896
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$3 DD imagerel main$dtor$3
	DD	imagerel main$dtor$3+29
	DD	imagerel $unwind$main$dtor$3
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$11 DD imagerel main$dtor$11
	DD	imagerel main$dtor$11+55
	DD	imagerel $unwind$main$dtor$11
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$16 DD imagerel main$dtor$16
	DD	imagerel main$dtor$16+55
	DD	imagerel $unwind$main$dtor$16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+24
	DD	imagerel $unwind$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+24
	DD	imagerel $unwind$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z DD imagerel $LN6
	DD	imagerel $LN6+41
	DD	imagerel $unwind$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+83
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+54
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+67
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+54
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1locale@std@@QEAA@XZ DD imagerel ??1locale@std@@QEAA@XZ+25
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1locale@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1locale@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1locale@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$16 DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$11 DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$3 DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DD imagerel main+82
	DD	0ffffffffH
	DD	imagerel main+535
	DD	00H
	DD	imagerel main+562
	DD	0ffffffffH
	DD	imagerel main+1463
	DD	01H
	DD	imagerel main+1497
	DD	02H
	DD	imagerel main+1572
	DD	03H
	DD	imagerel main+1641
	DD	04H
	DD	imagerel main+3205
	DD	05H
	DD	imagerel main+3233
	DD	06H
	DD	imagerel main+3291
	DD	07H
	DD	imagerel main+3339
	DD	08H
	DD	imagerel main+3487
	DD	04H
	DD	imagerel main+3578
	DD	09H
	DD	imagerel main+3755
	DD	0aH
	DD	imagerel main+3812
	DD	0ffffffffH
	DD	imagerel main+3855
	DD	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DD 0ffffffffH
	DD	imagerel main$dtor$3
	DD	0ffffffffH
	DD	imagerel main$dtor$11
	DD	01H
	DD	imagerel main$dtor$12
	DD	02H
	DD	imagerel main$dtor$14
	DD	0ffffffffH
	DD	imagerel main$dtor$7
	DD	04H
	DD	imagerel main$dtor$16
	DD	05H
	DD	imagerel main$dtor$17
	DD	06H
	DD	imagerel main$dtor$19
	DD	04H
	DD	imagerel main$dtor$10
	DD	04H
	DD	imagerel __imp___std_terminate
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$main DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$main
	DD	00H
	DD	00H
	DD	010H
	DD	imagerel $ip2state$main
	DD	088H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	0d3f19H
	DD	068742eH
	DD	067642aH
	DD	0663426H
	DD	060011aH
	DD	0e00af00cH
	DD	0c006d008H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$main
	DD	02f2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ+160
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ+160
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ+158
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+53
	DD	0ffffffffH
	DD	imagerel ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+84
	DD	00H
	DD	imagerel ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+134
	DD	01H
	DD	imagerel ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+162
	DD	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 041411H
	DD	0d3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ+158
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+53
	DD	0ffffffffH
	DD	imagerel ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+84
	DD	00H
	DD	imagerel ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+134
	DD	01H
	DD	imagerel ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ+162
	DD	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 041411H
	DD	0d3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 041719H
	DD	070045208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 061a19H
	DD	0e007520bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z DD 0a4501H
	DD	076445H
	DD	065440H
	DD	097410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z DD 0a4501H
	DD	076445H
	DD	065440H
	DD	097410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ+309
	DD	00H
	DD	imagerel ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ+516
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 072d19H
	DD	016741fH
	DD	015341bH
	DD	012010fH
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	082H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 020021H
	DD	067400H
	DD	imagerel $LN24
	DD	imagerel $LN24+51
	DD	imagerel $unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 020521H
	DD	067405H
	DD	imagerel $LN24
	DD	imagerel $LN24+51
	DD	imagerel $unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 021H
	DD	imagerel $LN70
	DD	imagerel $LN70+96
	DD	imagerel $unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 020821H
	DD	0146408H
	DD	imagerel $LN70
	DD	imagerel $LN70+96
	DD	imagerel $unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 041c19H
	DD	015340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z+99
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ DD 041919H
	DD	0f340aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z DD 061e19H
	DD	0d640fH
	DD	0c340fH
	DD	0700b720fH
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD imagerel ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z+54
	DD	0ffffffffH
	DD	imagerel ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z+101
	DD	00H
	DD	imagerel ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z+149
	DD	01H
	DD	imagerel ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z+185
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD 041411H
	DD	0a3414H
	DD	070027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD imagerel ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z+23
	DD	0ffffffffH
	DD	imagerel ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z+51
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD 020f11H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z+48
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z+74
	DD	00H
	DD	imagerel ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z+181
	DD	01H
	DD	imagerel ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z+210
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z+256
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD 062719H
	DD	0106418H
	DD	0f3414H
	DD	07004b208H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD 021H
	DD	imagerel $LN132
	DD	imagerel $LN132+47
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD 064521H
	DD	0b7445H
	DD	04f40eH
	DD	0ce405H
	DD	imagerel $LN132
	DD	imagerel $LN132+47
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD 050a01H
	DD	0c006420aH
	DD	050036004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ+29
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD imagerel ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z+32
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
__formal$ = 24
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 62   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 63   :         _Data._What = _Message;
; 64   :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rdx
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 68   :     {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
	lea	rdx, QWORD PTR [rbx+8]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rbx], rcx
	xor	ecx, ecx
	mov	QWORD PTR [rdx], rcx
	mov	QWORD PTR [rdx+8], rcx

; 69   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp___std_exception_copy

; 70   :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 470  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	call	memcpy
	mov	rax, rbx

; 472  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 495  : 		return (static_cast<char *>(_CSTD memmove(_First1, _First2, _Count)));

	jmp	memmove
?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 506  : 		_Left = _Right;

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al

; 507  : 		}

	ret	0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADAEBH@Z
_TEXT	SEGMENT
_Meta$ = 8
?to_char_type@?$char_traits@D@std@@SADAEBH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT

; 521  : 		return (static_cast<char>(_Meta));

	movzx	eax, BYTE PTR [rcx]

; 522  : 		}

	ret	0
?to_char_type@?$char_traits@D@std@@SADAEBH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z PROC	; std::char_traits<char>::to_int_type, COMDAT

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	eax, BYTE PTR [rcx]

; 527  : 		}

	ret	0
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ENDP	; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHAEBH@Z
_TEXT	SEGMENT
_Meta$ = 8
?not_eof@?$char_traits@D@std@@SAHAEBH@Z PROC		; std::char_traits<char>::not_eof, COMDAT

; 535  : 		{	// return anything but EOF

	mov	eax, DWORD PTR [rcx]

; 536  : 		return (_Meta != eof() ? _Meta : !eof());

	xor	ecx, ecx
	cmp	eax, -1
	cmove	eax, ecx

; 537  : 		}

	ret	0
?not_eof@?$char_traits@D@std@@SAHAEBH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 8
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 38   : 	return (_Count);

	mov	rax, rcx

; 39   : 	}

	ret	0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_typeinfo.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 63   :         _Data._What = _Message;

	lea	rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast@
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_typeinfo.h

; 131  :     {

	lea	rax, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rcx], rax

; 132  :     }

	mov	rax, rcx
	ret	0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 85   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 86   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN9@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN9@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT

; 85   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 408  : 		{	// destroy the object

$LN8:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T3[rsp], -2

; 409  : 		if (_Ptr != nullptr)

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@locale

; 410  : 			delete _Ptr->_Decref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
	test	rax, rax
	je	SHORT $LN4@locale
	mov	r8, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	QWORD PTR [r8]
	npad	1
$LN4@locale:

; 411  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Id$ = 56
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 435  : 		{	// look up a facet in locale object

$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 436  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

	xor	edi, edi
	mov	rdx, QWORD PTR [rcx+8]
	cmp	rbx, QWORD PTR [rdx+24]
	jae	SHORT $LN6@Getfacet
	mov	rax, QWORD PTR [rdx+16]
	mov	rax, QWORD PTR [rax+rbx*8]

; 437  : 			? _Ptr->_Facetvec[_Id] : nullptr;	// null if id off end
; 438  : 		if (_Facptr != nullptr || !_Ptr->_Xparent)

	test	rax, rax
	jne	SHORT $LN4@Getfacet
	jmp	SHORT $LN10@Getfacet
$LN6@Getfacet:

; 436  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

	mov	rax, rdi
$LN10@Getfacet:

; 437  : 			? _Ptr->_Facetvec[_Id] : nullptr;	// null if id off end
; 438  : 		if (_Facptr != nullptr || !_Ptr->_Xparent)

	cmp	BYTE PTR [rdx+36], dil
	je	SHORT $LN4@Getfacet

; 439  : 			return (_Facptr);	// found facet or not transparent
; 440  : 		else
; 441  : 			{	// look in current locale
; 442  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

	call	QWORD PTR __imp_?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ

; 443  : 			return (_Id < _Ptr0->_Facetcount

	cmp	rbx, QWORD PTR [rax+24]
	jae	SHORT $LN8@Getfacet
	mov	rax, QWORD PTR [rax+16]
	mov	rdi, QWORD PTR [rax+rbx*8]
$LN8@Getfacet:
	mov	rax, rdi
$LN4@Getfacet:

; 444  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 445  : 				: nullptr);	// no entry in current locale
; 446  : 			}
; 447  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Byte$ = 48
_File$ = 56
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT

; 59   : 	{	// get a char element from a C stream

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 60   : 	int _Meta;
; 61   : 	if ((_Meta = _CSTD fgetc(_File)) == EOF)

	mov	rcx, rdx
	call	QWORD PTR __imp_fgetc
	cmp	eax, -1
	jne	SHORT $LN2@Fgetc

; 62   : 		return (false);

	xor	al, al

; 67   : 		}
; 68   : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@Fgetc:

; 63   : 	else
; 64   : 		{	// got one, convert to char
; 65   : 		_Byte = (char)_Meta;

	mov	BYTE PTR [rbx], al

; 66   : 		return (true);

	mov	al, 1

; 67   : 		}
; 68   : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Byte$ = 48
_File$ = 56
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT

; 104  : 	{	// put a char element to a C stream

$LN4:
	sub	rsp, 40					; 00000028H

; 105  : 	return (_CSTD fputc(_Byte, _File) != EOF);

	movsx	ecx, cl
	call	QWORD PTR __imp_fputc
	cmp	eax, -1
	setne	al

; 106  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Byte$ = 48
_File$ = 56
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT

; 128  : 	{	// put back a char element to a C stream

$LN4:
	sub	rsp, 40					; 00000028H

; 129  : 	return (_CSTD ungetc((unsigned char)_Byte, _File) != EOF);

	movzx	ecx, BYTE PTR [rcx]
	call	QWORD PTR __imp_ungetc
	cmp	eax, -1
	setne	al

; 130  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.h
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\audio\apu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\ram\mainram.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock\clock.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\rom\rom.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\rom\rom.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\rom\rom.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\ppu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\ppu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\ppu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp
;	COMDAT main
_TEXT	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main	PROC						; COMDAT

$LN757:
	mov	rax, rsp
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-552]
	sub	rsp, 768				; 00000300H
	mov	QWORD PTR $T240[rbp-256], -2
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	xor	esi, esi
	mov	DWORD PTR $T1[rbp-256], esi

	lea	rdx, OFFSET FLAT:??_C@_0BI@LADLCFAM@Project?5Denver?5version?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_08BCJHEJEB@0?41?5beta@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CD@HFAOMFMO@?$CIc?$CJ?52018?5P?4?5Santing?5aka?5nIghtor@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	rdx, OFFSET FLAT:??_C@_0BI@PEJIDHKI@Emulator?5initializing?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	rdx, OFFSET FLAT:??_C@_0BN@LGEBLPBE@Setting?5up?5clock?5emulation?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	ecx, QWORD PTR [rsi+24]
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax
	mov	QWORD PTR $T2[rsp], rax
	xor	eax, eax
	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi+16], rax

	lea	rdx, OFFSET FLAT:??_C@_0BB@OGAHJCEE@Setting?5up?5BUS?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	ecx, QWORD PTR [rsi+40]
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T4[rsp], rax
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	mov	QWORD PTR [rbx+24], rax
	mov	QWORD PTR [rbx+32], rax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 8    : bus::bus() {

	lea	r14, QWORD PTR [rbx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 389  : 		: _Myfirst(),

	mov	QWORD PTR [r14], rsi

; 390  : 		_Mylast(),

	mov	QWORD PTR [r14+8], rsi

; 391  : 		_Myend()

	mov	QWORD PTR [r14+16], rsi
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.h

; 73   : 	bool	no_bus_conflicts = false;		// default we do not emulate bus conflicts, it is costly.

	mov	BYTE PTR [rbx+32], al
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	lea	ecx, QWORD PTR [rsi+104]
	call	??2@YAPEAX_K@Z				; operator new
	mov	r13, rax
	mov	QWORD PTR $T6[rsp], rax
	xor	edx, edx
	lea	r8d, QWORD PTR [rsi+104]
	mov	rcx, rax
	call	memset
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp

; 6    : cpu2a03_fast::cpu2a03_fast() {

	mov	rcx, r13
	call	??0bus_device@@QEAA@XZ			; bus_device::bus_device
	lea	rax, OFFSET FLAT:??_7cpu2a03_fast@@6B@
	mov	QWORD PTR [r13], rax

; 7    : 	// initialize cpu.
; 8    : 	strcpy_s(get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "Denver 2a03 CPU (fast emulation)");

	lea	r8, OFFSET FLAT:??_C@_0CB@COBPCPJC@Denver?52a03?5CPU?5?$CIfast?5emulation@
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR [r13+8]
	call	QWORD PTR __imp_strcpy_s

; 9    : 	regs.pc = 0x0000;

	mov	WORD PTR [r13+72], si

; 10   : 	regs.sp = 0xFD;
; 11   : 	regs.sr = cf_interrupt | cf_break | 0x20;
; 12   : 	regs.x = 0x00;

	mov	DWORD PTR [r13+75], 888995840		; 34fd0000H

; 13   : 	regs.y = 0x00;
; 14   : 	regs.ac = 0x00;

	mov	BYTE PTR [r13+74], sil

; 15   : 	mbus = nullptr;
; 16   : 	tick_rate = 0x3;

	mov	DWORD PTR [r13+16], 3

; 17   : 	error_state = false;

	mov	BYTE PTR [r13+96], sil

; 18   : 
; 19   : 	// CPU also has some HW in it.
; 20   : 	devicestart = 0x4000;

	mov	DWORD PTR [r13+44], 16384		; 00004000H

; 21   : 	deviceend = 0x401F;

	mov	DWORD PTR [r13+48], 16415		; 0000401fH

; 22   : 	devicemask = 0x401F;

	mov	DWORD PTR [r13+52], 16415		; 0000401fH

; 1775 : 	mbus = membus;

	mov	QWORD PTR [r13+88], rbx
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	lea	rdx, OFFSET FLAT:??_C@_0BB@EFJCOBHI@Setting?5up?5PPU?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	mov	ecx, 704				; 000002c0H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T9[rsp], rax
	xor	edx, edx
	mov	r8d, 704				; 000002c0H
	mov	rcx, rax
	call	memset
	mov	rcx, rbx
	call	??0ppu@@QEAA@XZ				; ppu::ppu
	mov	rsi, rax

	lea	rdx, OFFSET FLAT:??_C@_0BB@INBIDAEG@Setting?5up?5APU?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	mov	ecx, 120				; 00000078H
	call	??2@YAPEAX_K@Z				; operator new
	mov	r15, rax
	mov	QWORD PTR $T11[rsp], rax
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+120]
	mov	rcx, rax
	call	memset
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\audio\apu.cpp

; 4    : apu::apu() {

	mov	rcx, r15
	call	??0bus_device@@QEAA@XZ			; bus_device::bus_device
	lea	rax, OFFSET FLAT:??_7apu@@6B@
	mov	QWORD PTR [r15], rax

; 5    : 	strcpy_s(this->get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "NES APU Device");

	lea	r8, OFFSET FLAT:??_C@_0P@IDHECIDN@NES?5APU?5Device@
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR [r15+8]
	call	QWORD PTR __imp_strcpy_s

; 6    : 	devicestart = 0x4000;

	mov	DWORD PTR [r15+44], 16384		; 00004000H

; 7    : 	deviceend = 0x401F;

	mov	DWORD PTR [r15+48], 16415		; 0000401fH

; 8    : 	devicemask = 0x401F;

	mov	DWORD PTR [r15+52], 16415		; 0000401fH

; 9    : 
; 10   : 	// initialize pulse
; 11   : 	pulse[0].pulse2 = false;

	mov	BYTE PTR [r15+92], 0

; 12   : 	pulse[1].pulse2 = true;

	mov	BYTE PTR [r15+114], 1

; 13   : 
; 14   : 	// clocking info.
; 15   : 	tick_rate = 3;	// make it same as cpu. tick_rate is a divider against tick_rate 1

	mov	DWORD PTR [r15+16], 3
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	mov	r12, rax
	mov	QWORD PTR $T14[rsp], rax
	xor	eax, eax
	mov	QWORD PTR [r12], rax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp

; 6    : 	displaybuffer = (unsigned __int16 *)malloc(122880); // buffer is 256x240 16 bits.

	mov	ecx, 122880				; 0001e000H
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [r12], rax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	lea	rdx, OFFSET FLAT:??_C@_0BK@IAPLHOFP@Setting?5up?5NES?5system?5RAM@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	mov	ecx, 80					; 00000050H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T16[rsp], rax
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+80]
	mov	rcx, rax
	call	memset
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\ram\mainram.cpp

; 6    : mainram::mainram() {

	mov	rcx, rbx
	call	??0bus_device@@QEAA@XZ			; bus_device::bus_device
	lea	rax, OFFSET FLAT:??_7mainram@@6B@
	mov	QWORD PTR [rbx], rax

; 7    : 	ram = (byte *)malloc(0x0800);	// 2k ram

	mov	ecx, 2048				; 00000800H
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [rbx+72], rax

; 8    : 	devicestart = 0x0000;	// start of device.

	mov	DWORD PTR [rbx+44], 0

; 9    : 	deviceend = 0x1FFF;		// end of device.

	mov	DWORD PTR [rbx+48], 8191		; 00001fffH

; 10   : 	devicemask = 0x07FF;	// mask 2k ( 0000 0111 1111 1111 )	// this enables mirroring for 0x0800, 0x1000 and 0x1800

	mov	DWORD PTR [rbx+52], 2047		; 000007ffH

; 11   : 	strcpy_s(this->get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "Denver NES mainram (2k)");

	lea	r8, OFFSET FLAT:??_C@_0BI@NBBEICM@Denver?5NES?5mainram?5?$CI2k?$CJ@
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_strcpy_s

; 12   : 	// initialize RAM to 0x00
; 13   : 	memset(ram, 0x00, 0x0800);

	xor	edx, edx
	mov	r8d, 2048				; 00000800H
	mov	rcx, QWORD PTR [rbx+72]
	call	memset
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	lea	rdx, OFFSET FLAT:??_C@_0CK@MOIPCPJD@Adding?5PPU?5and?5RAM?5device?5to?5sy@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	mov	QWORD PTR device$[rbp-256], rsi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [r14+8]

; 917  : 		if (_Has_unused_capacity())

	cmp	QWORD PTR [r14+16], rdx
	je	SHORT $LN92@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rdx], rsi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [r14+8], 8

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

	jmp	SHORT $LN91@main
$LN92@main:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR device$[rbp-256]
	mov	rcx, r14
	call	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
$LN91@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	QWORD PTR device$[rbp-256], rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [r14+8]

; 917  : 		if (_Has_unused_capacity())

	cmp	QWORD PTR [r14+16], rdx
	je	SHORT $LN171@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rdx], rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [r14+8], 8

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

	jmp	SHORT $LN170@main
$LN171@main:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR device$[rbp-256]
	mov	rcx, r14
	call	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
$LN170@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	QWORD PTR device$[rbp-256], r13
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [r14+8]

; 917  : 		if (_Has_unused_capacity())

	cmp	QWORD PTR [r14+16], rdx
	je	SHORT $LN250@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rdx], r13
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [r14+8], 8

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

	jmp	SHORT $LN249@main
$LN250@main:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR device$[rbp-256]
	mov	rcx, r14
	call	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
$LN249@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	lea	rdx, OFFSET FLAT:??_C@_0DA@IJIOKKBG@Adding?5PPU?5and?5CPU?5device?5to?5cl@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\clock\clock.cpp

; 86   : 	this->cpudevice = cpu;

	mov	QWORD PTR [rdi], r13

; 87   : 	this->ppudevice = ppu;

	mov	QWORD PTR [rdi+8], rsi

; 88   : 	this->apudevice = apu;

	mov	QWORD PTR [rdi+16], r15
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	lea	rdx, OFFSET FLAT:??_C@_0BB@HLHHLKIB@Setting?5up?5SDL?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	mov	r15d, 32				; 00000020H
	mov	DWORD PTR i$1$[rsp], r15d
	mov	ecx, r15d
	call	QWORD PTR __imp_SDL_Init

	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0P@HLCDCNJ@Denver?5Project@
	call	QWORD PTR __imp_SDL_WM_SetCaption

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 480				; 000001e0H
	lea	ecx, QWORD PTR [rdx+32]
	call	QWORD PTR __imp_SDL_SetVideoMode
	mov	QWORD PTR screen$1$[rbp-256], rax

	xor	edi, edi
	mov	DWORD PTR [rsp+56], edi
	mov	DWORD PTR [rsp+48], edi
	mov	DWORD PTR [rsp+40], edi
	mov	DWORD PTR [rsp+32], edi
	mov	edx, 256				; 00000100H
	xor	ecx, ecx
	lea	r9d, QWORD PTR [r15-16]
	lea	r8d, QWORD PTR [rdx-16]
	call	QWORD PTR __imp_SDL_CreateRGBSurface
	mov	rbx, rax
	mov	QWORD PTR buffer$1$[rsp], rax

	mov	DWORD PTR [rsp+56], edi
	mov	DWORD PTR [rsp+48], edi
	mov	DWORD PTR [rsp+40], edi
	mov	DWORD PTR [rsp+32], edi
	mov	edx, 512				; 00000200H
	xor	ecx, ecx
	lea	r9d, QWORD PTR [r15-16]
	lea	r8d, QWORD PTR [rdx-32]
	call	QWORD PTR __imp_SDL_CreateRGBSurface
	mov	QWORD PTR scaled$1$[rsp], rax

	test	rbx, rbx
	jne	SHORT $LN7@main

	lea	rdx, OFFSET FLAT:??_C@_0DE@GDKIJFKE@Oh?5dear?4?4?5Null?5buffer?0?5expect?5n@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
$LN7@main:

	lea	rdx, OFFSET FLAT:??_C@_0P@NFDABKGD@Booting?5CPU?4?4?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	rdx, OFFSET FLAT:??_C@_0BG@GPBJINFC@Executing?5emulation?4?4@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:?hex@std@@YAAEAVios_base@1@AEAV21@@Z ; std::hex
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	xor	edx, edx
	mov	r8d, 272				; 00000110H
	lea	rcx, QWORD PTR romload$[rbp-256]
	call	memset
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 843  : 		{	// construct unopened

	lea	rax, OFFSET FLAT:__ImageBase
	lea	rax, QWORD PTR ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@[rax]
	mov	QWORD PTR romload$[rbp-256], rax
	lea	rcx, QWORD PTR romload$[rbp-80]
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rbp-256], 1

; 806  : 		}
; 807  : 
; 808  : 	void _Set_back()
; 809  : 		{	// set up putback area
; 810  : 		if (_Mysb::eback() != &_Mychar)
; 811  : 			{	// save current get buffer
; 812  : 			_Set_eback = _Mysb::eback();
; 813  : 			_Set_egptr = _Mysb::egptr();
; 814  : 			}
; 815  : 		_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);
; 816  : 		}
; 817  : 
; 818  : 	_Elem *_Set_eback;	// saves eback() during one-element putback
; 819  : 	_Elem *_Set_egptr;	// saves egptr()
; 820  : 	};
; 821  : 
; 822  : template<class _Elem,
; 823  : 	class _Traits> inline
; 824  : 	void swap(basic_filebuf<_Elem, _Traits>& _Left,
; 825  : 		basic_filebuf<_Elem, _Traits>& _Right)
; 826  : 	{	// swap _Left and _Right basic_filebufs
; 827  : 	_Left.swap(_Right);
; 828  : 	}
; 829  : 
; 830  : 		// CLASS TEMPLATE basic_ifstream
; 831  : template<class _Elem,
; 832  : 	class _Traits>
; 833  : 	class basic_ifstream
; 834  : 		: public basic_istream<_Elem, _Traits>
; 835  : 	{	// input stream associated with a C stream
; 836  : public:
; 837  : 	typedef basic_istream<_Elem, _Traits> _Mybase;
; 838  : 	typedef basic_filebuf<_Elem, _Traits> _Myfb;
; 839  : 	typedef basic_ios<_Elem, _Traits> _Myios;
; 840  : 
; 841  : 	basic_ifstream()
; 842  : 		: _Mybase(&_Filebuffer)

	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR romload$[rbp-240]
	lea	rcx, QWORD PTR romload$[rbp-256]
	call	QWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1

; 843  : 		{	// construct unopened

	mov	rax, QWORD PTR romload$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR romload$[rbp+rcx-256], rax
	mov	rax, QWORD PTR romload$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR romload$[rbp+rcx-260], edx
	lea	rax, QWORD PTR romload$[rbp-240]
	mov	QWORD PTR this$[rbp-256], rax

; 166  : 		: _Mysb()

	lea	rcx, QWORD PTR romload$[rbp-240]
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1

; 167  : 		{	// construct from pointer to C stream

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR romload$[rbp-240], rax

; 717  : 		_Closef = _Which == _Openfl;

	mov	BYTE PTR romload$[rbp-116], 0

; 718  : 		_Wrotesome = false;

	mov	BYTE PTR romload$[rbp-127], 0

; 719  : 
; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	lea	rcx, QWORD PTR romload$[rbp-240]
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)
; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(
; 729  : 				_File,
; 730  : 				reinterpret_cast<char***>(&_Pb),
; 731  : 				reinterpret_cast<char***>(&_Pn),
; 732  : 				&_Nr);
; 733  : 			int *_Nw = _Nr;
; 734  : 
; 735  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);
; 736  : 			}
; 737  : 
; 738  : 		_Myfile = _File;

	mov	QWORD PTR romload$[rbp-112], rdi

; 739  : 		_State = _Stinit;

	mov	rax, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	QWORD PTR romload$[rbp-124], rax

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR romload$[rbp-136], rdi

; 1028 : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == nullptr)

	mov	r8d, 33					; 00000021H
	lea	rdx, OFFSET FLAT:??_C@_06HOALFDNC@oc?4nes@
	lea	rcx, QWORD PTR romload$[rbp-240]
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	xor	r8d, r8d
	test	rax, rax
	mov	rax, QWORD PTR romload$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR romload$[rbp-256]
	jne	SHORT $LN342@main

; 1029 : 			_Myios::setstate(ios_base::failbit);

	add	rcx, rax
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 1030 : 		else

	jmp	SHORT $LN343@main
$LN342@main:

; 1031 : 			_Myios::clear();	// added with C++11

	add	rcx, rax
	xor	edx, edx
	call	QWORD PTR __imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN343@main:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	mov	QWORD PTR $T118[rsp], 16
	xor	eax, eax
	mov	QWORD PTR $T118[rsp+8], rax
	mov	QWORD PTR $T118[rbp-240], rax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	movups	xmm0, XMMWORD PTR $T118[rsp]
	movaps	XMMWORD PTR $T120[rbp-256], xmm0
	movsd	xmm1, QWORD PTR $T118[rbp-240]
	movsd	QWORD PTR $T120[rbp-240], xmm1
	lea	rdx, QWORD PTR $T120[rbp-256]
	lea	rcx, QWORD PTR romload$[rbp-256]
	call	QWORD PTR __imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@V?$fpos@U_Mbstatet@@@2@@Z

	mov	ecx, 16384				; 00004000H
	call	QWORD PTR __imp_malloc
	mov	rdi, rax

	mov	r8d, 16384				; 00004000H
	mov	rdx, rax
	lea	rcx, QWORD PTR romload$[rbp-256]
	call	QWORD PTR __imp_?read@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEAD_J@Z

	mov	ecx, 8192				; 00002000H
	call	QWORD PTR __imp_malloc
	mov	rbx, rax

	mov	r8d, 8192				; 00002000H
	mov	rdx, rax
	lea	rcx, QWORD PTR romload$[rbp-256]
	call	QWORD PTR __imp_?read@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEAD_J@Z

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T121[rbp-256], rax
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+88]
	mov	rcx, rax
	call	memset
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\rom\rom.cpp

; 4    : rom::rom() {

	mov	rcx, QWORD PTR $T121[rbp-256]
	call	??0bus_device@@QEAA@XZ			; bus_device::bus_device
	lea	rcx, OFFSET FLAT:??_7rom@@6B@
	mov	rax, QWORD PTR $T121[rbp-256]
	mov	QWORD PTR [rax], rcx

; 5    : 	// default to 16K rom with mirrored 0xC000 (to 0x8000)
; 6    : 	strcpy_s(this->get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "NROM 0x00 ROM");

	lea	r8, OFFSET FLAT:??_C@_0O@LOIPCCFK@NROM?50x00?5ROM@
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_strcpy_s

; 7    : 	devicestart = 0x8000;

	mov	rax, QWORD PTR $T121[rbp-256]
	mov	DWORD PTR [rax+44], 32768		; 00008000H

; 8    : 	deviceend = 0xFFFF;

	mov	DWORD PTR [rax+48], 65535		; 0000ffffH

; 9    : 	devicemask = 0xBFFF;	// 1011 1111 1111 1111

	mov	DWORD PTR [rax+52], 49151		; 0000bfffH
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	ecx, 96					; 00000060H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T124[rbp-256], rax
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+96]
	mov	rcx, rax
	call	memset
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\rom\rom.cpp

; 33   : vrom::vrom() {

	mov	rcx, QWORD PTR $T124[rbp-256]
	call	??0bus_device@@QEAA@XZ			; bus_device::bus_device
	lea	rcx, OFFSET FLAT:??_7vrom@@6B@
	mov	rax, QWORD PTR $T124[rbp-256]
	mov	QWORD PTR [rax], rcx

; 34   : 	strcpy_s(this->get_device_descriptor(), MAX_DESCRIPTOR_LENGTH, "NROM 0x00 VROM");

	lea	r8, OFFSET FLAT:??_C@_0P@JKKAPLGM@NROM?50x00?5VROM@
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_strcpy_s

; 35   : 	devicestart = 0x0000;

	mov	rax, QWORD PTR $T124[rbp-256]
	mov	DWORD PTR [rax+44], 0

; 36   : 	deviceend = 0x1FFF;

	mov	DWORD PTR [rax+48], 8191		; 00001fffH

; 37   : 	devicemask = 0x1FFF;

	mov	DWORD PTR [rax+52], 8191		; 00001fffH
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	rcx, QWORD PTR $T121[rbp-256]
	mov	rax, QWORD PTR [rcx]
	mov	r8d, 16384				; 00004000H
	mov	rdx, rdi
	call	QWORD PTR [rax+40]

	mov	rdi, QWORD PTR $T124[rbp-256]
	mov	rax, QWORD PTR [rdi]
	mov	r8d, 16384				; 00004000H
	mov	rdx, rbx
	mov	rcx, rdi
	call	QWORD PTR [rax+40]

	lea	rax, QWORD PTR [rsi+360]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\rom\rom.cpp

; 58   : 	ppubus = ppu_bus;

	mov	QWORD PTR [rdi+72], rax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	rax, QWORD PTR $T121[rbp-256]
	mov	QWORD PTR device$[rbp-256], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [r14+8]

; 917  : 		if (_Has_unused_capacity())

	cmp	QWORD PTR [r14+16], rdx
	je	SHORT $LN366@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [r14+8], 8

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

	jmp	SHORT $LN365@main
$LN366@main:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR device$[rbp-256]
	mov	rcx, r14
	call	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
$LN365@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 74   : 	for (size_t i = 0; i < devices.size(); i++) {

	xor	ecx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	r9, QWORD PTR [rsi+256]
	mov	r8, QWORD PTR [rsi+248]
	mov	rdx, r9
	sub	rdx, r8
	sar	rdx, 3
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 74   : 	for (size_t i = 0; i < devices.size(); i++) {

	test	rdx, rdx
	je	SHORT $LN444@main
$LL445@main:

; 75   : 		if (devices[i]->devicestart == baseaddr) {

	mov	rax, QWORD PTR [r8+rcx*8]
	cmp	DWORD PTR [rax+44], 0
	je	SHORT $LN734@main

; 74   : 	for (size_t i = 0; i < devices.size(); i++) {

	inc	rcx
	cmp	rcx, rdx
	jb	SHORT $LL445@main

; 75   : 		if (devices[i]->devicestart == baseaddr) {

	jmp	SHORT $LN444@main
$LN734@main:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 130  : 		_Ptr += _Off;

	lea	rcx, QWORD PTR [r8+rcx*8]

; 1561 : 		_Move_unchecked(_Where._Ptr + 1, this->_Mylast(), _Where._Ptr);

	lea	rdx, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r9, rdx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, r9
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1563 : 		--this->_Mylast();

	add	QWORD PTR [rsi+256], -8
$LN444@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\ppu.cpp

; 469  : 	vbus.registerdevice(vdata);

	mov	QWORD PTR device$[rbp-256], rdi
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 70   : 	devices.push_back(device);

	lea	rcx, QWORD PTR [rsi+248]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

	mov	rdx, QWORD PTR [rcx+8]

; 917  : 		if (_Has_unused_capacity())

	cmp	QWORD PTR [rcx+16], rdx
	je	SHORT $LN553@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	QWORD PTR [rdx], rdi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

	add	QWORD PTR [rcx+8], 8

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

	jmp	SHORT $LN552@main
$LN553@main:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR device$[rbp-256]
	call	??$_Emplace_reallocate@AEBQEAVbus_device@@@?$vector@PEAVbus_device@@V?$allocator@PEAVbus_device@@@std@@@std@@QEAAPEAPEAVbus_device@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<bus_device *,std::allocator<bus_device *> >::_Emplace_reallocate<bus_device * const &>
$LN552@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp

; 1738 : 	if (!mbus) {

	mov	rdi, QWORD PTR [r13+88]
	test	rdi, rdi
	je	$LN755@main
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 29   : 	address = addr;

	mov	eax, 65532				; 0000fffcH
	mov	DWORD PTR [rdi], eax

; 30   : 	result = read();

	mov	rcx, rdi
	call	?read@bus@@QEAAEXZ			; bus::read
	movzx	ebx, al

; 31   : 	address++;

	inc	DWORD PTR [rdi]

; 32   : 	return result | read() << 8;

	mov	rcx, rdi
	call	?read@bus@@QEAAEXZ			; bus::read
	movzx	eax, al
	shl	ax, 8
	or	ax, bx
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp

; 1742 : 	regs.pc = mbus->readmemory_as_word(vector_reset);

	mov	WORD PTR [r13+72], ax

; 1743 : 	regs.sp = 0xFD;
; 1744 : 	regs.sr = cf_interrupt | cf_break | 0x20;
; 1745 : 	regs.sr = 0x24;
; 1746 : 	regs.x = 0x00;

	mov	DWORD PTR [r13+75], 620560384		; 24fd0000H

; 1747 : 	regs.y = 0x00;
; 1748 : 	regs.ac = 0x00;

	mov	BYTE PTR [r13+74], 0

; 1749 : 	error_state = false;

	mov	BYTE PTR [r13+96], 0
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 154  : 	for (int i = 0; i < 16; i++) pinout.pins[i] = i;

	xor	eax, eax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp

; 1742 : 	regs.pc = mbus->readmemory_as_word(vector_reset);

	lea	rdx, QWORD PTR [rsi+416]
	npad	1
$LL643@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 154  : 	for (int i = 0; i < 16; i++) pinout.pins[i] = i;

	mov	BYTE PTR [rdx], al
	inc	eax
	lea	rdx, QWORD PTR [rdx+1]
	cmp	eax, 16
	jl	SHORT $LL643@main

; 148  : 	pinout.pins[pin2] = pinout.pins[pin1];

	movzx	eax, BYTE PTR [rsi+426]
	mov	BYTE PTR [rsi+427], al

; 137  : 	pinout.pins[pin] = -2;

	mov	BYTE PTR [rsi+426], -2

; 138  : 	processlayout = true;

	mov	BYTE PTR [rsi+400], 1
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	rcx, QWORD PTR $T4[rsp]
	call	?reportdevices@bus@@QEAAXXZ		; bus::reportdevices

	lea	rcx, QWORD PTR [rsi+240]
	call	?reportdevices@bus@@QEAAXXZ		; bus::reportdevices

	mov	edx, 255				; 000000ffH
	mov	r8d, 122880				; 0001e000H
	mov	rdi, QWORD PTR buffer$1$[rsp]
	mov	rcx, QWORD PTR [rdi+32]
	call	memset

	mov	bl, 1
	mov	r13, QWORD PTR scaled$1$[rsp]
	mov	r14, QWORD PTR $T2[rsp]
$LL2@main:

	mov	rcx, r14
	call	?step@fastclock@@QEAAXXZ		; fastclock::step

	lea	rcx, QWORD PTR event$243[rbp-256]
	call	QWORD PTR __imp_SDL_PollEvent
	test	eax, eax
	je	SHORT $LN752@main

	movzx	ebx, bl
	cmp	BYTE PTR event$243[rbp-256], 12
	mov	ecx, 0
	cmove	ebx, ecx

	jmp	SHORT $LN9@main
$LN752@main:
	xor	ecx, ecx
$LN9@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\ppu.cpp

; 494  : 	bool retval = frameready;

	movzx	eax, BYTE PTR [rsi+232]

; 495  : 	frameready = false;

	mov	BYTE PTR [rsi+232], 0
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	test	al, al
	je	$LN10@main

	mov	DWORD PTR rect_scrn$242[rbp-256], 0
	mov	DWORD PTR rect_scrn$242[rbp-252], 31457792 ; 01e00200H

	mov	DWORD PTR rect$241[rbp-256], 0
	mov	DWORD PTR rect$241[rbp-252], 15728896	; 00f00100H
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\ppu.cpp

; 490  : 	return framebuffer;

	mov	r10, QWORD PTR [rsi+224]
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	r9, rcx
	lea	r11, OFFSET FLAT:__ImageBase
	mov	r14d, 65532				; 0000fffcH
	lea	r15d, QWORD PTR [r14-4]
	npad	7
$LL656@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp

; 26   : 		unsigned __int8 pixel = ppu_image[x] & 0x3F;

	movzx	eax, BYTE PTR [r10+r9]
	and	al, 63					; 0000003fH
	movzx	edx, al

; 27   : 		
; 28   : 		__int32 idx = pixel * 3;

	lea	ecx, DWORD PTR [rdx+rdx*2]

; 29   : 
; 30   : 		unsigned __int16 framepixel = ((ntscpalette[idx] >> 3) << 11) |
; 31   : 			((ntscpalette[idx + 1] >> 2) << 5) |

	movzx	r8d, BYTE PTR ?ntscpalette@@3QBEB[rcx+r11]
	and	r8w, r15w
	shl	r8w, 5
	movzx	eax, BYTE PTR ?ntscpalette@@3QBEB[rcx+r11+1]
	or	r8w, ax
	and	r8w, r14w
	shl	r8w, 3
	lea	rax, QWORD PTR [rdx+rdx*2]
	movzx	eax, BYTE PTR ?ntscpalette@@3QBEB[rax+r11+2]
	shr	al, 3
	movzx	ecx, al
	or	r8w, cx

; 32   : 			((ntscpalette[idx + 2] >> 3));
; 33   : 
; 34   : 		displaybuffer[x] = framepixel;

	mov	rax, QWORD PTR [r12]
	mov	WORD PTR [r9+rax], r8w

; 7    : }
; 8    : 
; 9    : nesvideo::~nesvideo() {
; 10   : 	free(displaybuffer); // free used ram.
; 11   : }
; 12   : 
; 13   : void * nesvideo::getFrame() {
; 14   : 	return displaybuffer;
; 15   : }
; 16   : 
; 17   : void nesvideo::process_ppu_image(unsigned __int16 * ppu_image) {
; 18   : 	/*
; 19   : 		input is a buffer of 16 bits per pixel.
; 20   : 		pixel data is made up as
; 21   : 		[xxxxx]e[rgb][pppppppp]
; 22   : 		[rgb] is emphasis bits, [pppppppp] is pixel data. [xxxxx] is filler data we ignore (no need)
; 23   : 	*/
; 24   : 
; 25   : 	for (int x = 0; x < 61440; x++) {

	add	r9, 2
	cmp	r9, 122880				; 0001e000H
	jl	SHORT $LL656@main
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	r8d, 122880				; 0001e000H
	mov	rdx, QWORD PTR [r12]
	mov	rcx, QWORD PTR [rdi+32]
	call	memcpy

	lea	r9, QWORD PTR rect_scrn$242[rbp-256]
	mov	r8, r13
	lea	rdx, QWORD PTR rect$241[rbp-256]
	mov	rcx, rdi
	call	QWORD PTR __imp_SDL_SoftStretch

	xor	r9d, r9d
	mov	r8, QWORD PTR screen$1$[rbp-256]
	lea	rdx, QWORD PTR rect_scrn$242[rbp-256]
	mov	rcx, r13
	call	QWORD PTR __imp_SDL_UpperBlit

	xor	eax, eax
	mov	DWORD PTR [rsp+32], eax
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR screen$1$[rbp-256]
	call	QWORD PTR __imp_SDL_UpdateRect
	mov	r14, QWORD PTR $T2[rsp]
$LN10@main:

	test	bl, bl
	jne	$LL2@main

	lea	rdx, OFFSET FLAT:??_C@_0M@DMCACEHO@Cpu?5ticks?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	r13, QWORD PTR $T6[rsp]
	mov	edx, DWORD PTR [r13+32]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	rdx, OFFSET FLAT:??_C@_0M@EHKGBLHC@Ppu?5ticks?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, DWORD PTR [rsi+32]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	rdx, OFFSET FLAT:??_C@_0BA@PGOFLHGN@Cpu?5syncstate?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, DWORD PTR [r13+28]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

	lea	rdx, OFFSET FLAT:??_C@_0BA@DJAKDNAB@Ppu?5syncstate?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, DWORD PTR [rsi+28]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	r15d, DWORD PTR i$1$[rsp]
	npad	6
$LL6@main:

	mov	eax, 256				; 00000100H
	movzx	r11d, r15w
	imul	r11d, eax
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\bus\bus.cpp

; 121  : 	if (!processlayout) return addr & devicemask;

	cmp	BYTE PTR [rsi+400], 0
	jne	SHORT $LN664@main
	movzx	ebx, WORD PTR [rsi+412]
	and	bx, r11w
	xor	edi, edi
	jmp	SHORT $LN660@main
$LN664@main:

; 122  : 	word cleanaddr = 0;

	xor	edi, edi
	movzx	eax, di

; 123  : 	for (int i = 0; i < 16; i++) {

	mov	r8d, edi

; 122  : 	word cleanaddr = 0;

	lea	r10, QWORD PTR [rsi+416]
$LL663@main:

; 124  : 		if (pinout.pins[i] == -1) {

	movzx	r9d, BYTE PTR [r10]
	cmp	r9b, -1
	jne	SHORT $LN665@main

; 125  : 			cleanaddr |= 0x01 << i;	//-1 force signal enable.

	movzx	eax, ax
	bts	eax, r8d
	jmp	SHORT $LN661@main
$LN665@main:

; 126  : 		}
; 127  : 		else if (pinout.pins[i] == -2) {

	cmp	r9b, -2
	je	SHORT $LN661@main

; 128  : 			cleanaddr |= 0x00 << i; //-2 force signal disable.
; 129  : 		} else {
; 130  : 			cleanaddr |= ((addr >> i) & 0x01) << pinout.pins[i];

	movzx	edx, r11w
	movzx	ecx, r8w
	shr	dx, cl
	and	dx, 1
	movzx	ecx, r9b
	shl	dx, cl
	or	ax, dx
$LN661@main:

; 123  : 	for (int i = 0; i < 16; i++) {

	inc	r8d
	inc	r10
	cmp	r8d, 16
	jl	SHORT $LL663@main

; 131  : 		}
; 132  : 	}
; 133  : 	return cleanaddr & devicemask;

	movzx	ebx, WORD PTR [rsi+412]
	and	bx, ax
$LN660@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	edx, r15d
	shl	edx, 8
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_06OHPOBCPD@?5?$DN?$DN?$DO?$DO?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	movzx	edx, bx
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@G@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	inc	r15d
	cmp	r15d, 48				; 00000030H
	jl	$LL6@main
	xor	edx, edx
	mov	r8d, 264				; 00000108H
	lea	rcx, QWORD PTR vramdump$[rbp-256]
	call	memset
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 1079 : 		{	// construct unopened

	lea	rax, OFFSET FLAT:__ImageBase
	lea	rax, QWORD PTR ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@[rax]
	mov	QWORD PTR vramdump$[rbp-256], rax
	lea	rcx, QWORD PTR vramdump$[rbp-88]
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rbp-256], 3

; 1032 : 		}
; 1033 : 
; 1034 : 	void open(const string& _Str,
; 1035 : 		ios_base::openmode _Mode = ios_base::in,
; 1036 : 		int _Prot = (int)ios_base::_Openprot)
; 1037 : 		{	// open a C stream with specified mode
; 1038 : 		open(_Str.c_str(), _Mode, _Prot);
; 1039 : 		}
; 1040 : 
; 1041 :  #if _HAS_OLD_IOSTREAMS_MEMBERS
; 1042 : 	void open(const char *_Filename, ios_base::open_mode _Mode)
; 1043 : 		{	// open named file with specified mode (old style)
; 1044 : 		open(_Filename, static_cast<ios_base::openmode>(_Mode));
; 1045 : 		}
; 1046 :  #endif /* _HAS_OLD_IOSTREAMS_MEMBERS */
; 1047 : 
; 1048 : 	void close()
; 1049 : 		{	// close the C stream
; 1050 : 		if (_Filebuffer.close() == nullptr)
; 1051 : 			_Myios::setstate(ios_base::failbit);
; 1052 : 		}
; 1053 : 
; 1054 : private:
; 1055 : 	_Myfb _Filebuffer;	// the file buffer
; 1056 : 	};
; 1057 : 
; 1058 : template<class _Elem,
; 1059 : 	class _Traits> inline
; 1060 : 	void swap(basic_ifstream<_Elem, _Traits>& _Left,
; 1061 : 		basic_ifstream<_Elem, _Traits>& _Right)
; 1062 : 	{	// swap _Left and _Right basic_ifstreams
; 1063 : 	_Left.swap(_Right);
; 1064 : 	}
; 1065 : 
; 1066 : 		// CLASS TEMPLATE basic_ofstream
; 1067 : template<class _Elem,
; 1068 : 	class _Traits>
; 1069 : 	class basic_ofstream
; 1070 : 		: public basic_ostream<_Elem, _Traits>
; 1071 : 	{	// output stream associated with a C stream
; 1072 : public:
; 1073 : 	typedef basic_ostream<_Elem, _Traits> _Mybase;
; 1074 : 	typedef basic_filebuf<_Elem, _Traits> _Myfb;
; 1075 : 	typedef basic_ios<_Elem, _Traits> _Myios;
; 1076 : 
; 1077 : 	basic_ofstream()
; 1078 : 		: _Mybase(&_Filebuffer)

	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR vramdump$[rbp-248]
	lea	rcx, QWORD PTR vramdump$[rbp-256]
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1

; 1079 : 		{	// construct unopened

	mov	rax, QWORD PTR vramdump$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rbx, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR vramdump$[rbp+rcx-256], rbx
	mov	rax, QWORD PTR vramdump$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR vramdump$[rbp+rcx-260], edx
	lea	rax, QWORD PTR vramdump$[rbp-248]
	mov	QWORD PTR this$[rsp], rax

; 166  : 		: _Mysb()

	lea	rcx, QWORD PTR vramdump$[rbp-248]
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1

; 167  : 		{	// construct from pointer to C stream

	lea	r14, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR vramdump$[rbp-248], r14

; 717  : 		_Closef = _Which == _Openfl;

	mov	BYTE PTR vramdump$[rbp-124], 0

; 718  : 		_Wrotesome = false;

	mov	BYTE PTR vramdump$[rbp-135], 0

; 719  : 
; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	lea	rcx, QWORD PTR vramdump$[rbp-248]
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)
; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(
; 729  : 				_File,
; 730  : 				reinterpret_cast<char***>(&_Pb),
; 731  : 				reinterpret_cast<char***>(&_Pn),
; 732  : 				&_Nr);
; 733  : 			int *_Nw = _Nr;
; 734  : 
; 735  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);
; 736  : 			}
; 737  : 
; 738  : 		_Myfile = _File;

	mov	QWORD PTR vramdump$[rbp-120], rdi

; 739  : 		_State = _Stinit;

	mov	rax, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	QWORD PTR vramdump$[rbp-132], rax

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR vramdump$[rbp-144], rdi

; 1264 : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::out, _Prot) == nullptr)

	mov	r8d, 34					; 00000022H
	lea	rdx, OFFSET FLAT:??_C@_08EIBEEMIC@vram?4dmp@
	lea	rcx, QWORD PTR vramdump$[rbp-248]
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	xor	r8d, r8d
	test	rax, rax
	mov	rax, QWORD PTR vramdump$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR vramdump$[rbp-256]
	jne	SHORT $LN686@main

; 1265 : 			_Myios::setstate(ios_base::failbit);

	add	rcx, rax
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 1266 : 		else

	jmp	SHORT $LN687@main
$LN686@main:

; 1267 : 			_Myios::clear();	// added with C++11

	add	rcx, rax
	xor	edx, edx
	call	QWORD PTR __imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN687@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	r8d, 122880				; 0001e000H
	mov	rdx, QWORD PTR [rsi+224]
	lea	rcx, QWORD PTR vramdump$[rbp-256]
	call	QWORD PTR __imp_?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEBD_J@Z
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 1286 : 		if (_Filebuffer.close() == nullptr)

	lea	rcx, QWORD PTR vramdump$[rbp-248]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	rax, rax
	jne	SHORT $LN692@main

; 1287 : 			_Myios::setstate(ios_base::failbit);

	mov	rax, QWORD PTR vramdump$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR vramdump$[rbp-256]
	add	rcx, rax
	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN692@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	mov	rax, QWORD PTR [rsi]
	mov	edx, 1
	mov	rcx, rsi
	call	QWORD PTR [rax+16]
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 1247 : 		{	// destroy the object

	mov	rax, QWORD PTR vramdump$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR vramdump$[rbp+rcx-256], rbx
	mov	rax, QWORD PTR vramdump$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR vramdump$[rbp+rcx-260], edx

; 172  : 		{	// destroy the object

	mov	QWORD PTR vramdump$[rbp-248], r14

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR vramdump$[rbp-120], 0
	je	SHORT $LN705@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR vramdump$[rbp-224]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rcx, QWORD PTR vramdump$[rbp-136]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN705@main

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR vramdump$[rbp-104]
	mov	rcx, QWORD PTR vramdump$[rbp-112]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rax], rcx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR vramdump$[rbp-192]
	mov	QWORD PTR [rax], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	edx, ecx
	mov	rax, QWORD PTR vramdump$[rbp-168]
	mov	DWORD PTR [rax], edx
$LN705@main:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR vramdump$[rbp-124], 0
	je	SHORT $LN701@main

; 176  : 			close();

	lea	rcx, QWORD PTR vramdump$[rbp-248]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN701@main:

; 177  : 		}

	lea	rcx, QWORD PTR vramdump$[rbp-248]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1248 : 		}

	lea	rcx, QWORD PTR vramdump$[rbp-240]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR vramdump$[rbp-88]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1011 : 		{	// destroy the object

	mov	rax, QWORD PTR romload$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR romload$[rbp+rcx-256], rax
	mov	rax, QWORD PTR romload$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR romload$[rbp+rcx-260], edx

; 172  : 		{	// destroy the object

	mov	QWORD PTR romload$[rbp-240], r14

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR romload$[rbp-112], 0
	je	SHORT $LN722@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR romload$[rbp-216]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rcx, QWORD PTR romload$[rbp-128]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN722@main

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR romload$[rbp-96]
	mov	rcx, QWORD PTR romload$[rbp-104]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rax], rcx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR romload$[rbp-184]
	mov	QWORD PTR [rax], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	edx, ecx
	mov	rax, QWORD PTR romload$[rbp-160]
	mov	DWORD PTR [rax], edx
$LN722@main:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR romload$[rbp-116], 0
	je	SHORT $LN718@main

; 176  : 			close();

	lea	rcx, QWORD PTR romload$[rbp-240]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN718@main:

; 177  : 		}

	lea	rcx, QWORD PTR romload$[rbp-240]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1012 : 		}

	lea	rcx, QWORD PTR romload$[rbp-232]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR romload$[rbp-80]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\denveremu.cpp

	xor	eax, eax

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+768]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN755@main:
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\cpu\cpu2a03_fast.cpp

; 1739 : 		throw new std::runtime_error("cpu2a03_fast::coldboot() called without defined memory bus!\r\nPlease assign memory bus before calling coldboot()");

	mov	ecx, 24
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T228[rsp], rax
	mov	rcx, rax
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	mov	QWORD PTR $T230[rsp], rax
	lea	rdx, OFFSET FLAT:_TI3PEAVruntime_error@std@@
	lea	rcx, QWORD PTR $T230[rsp]
	call	_CxxThrowException
	int	3
$LN753@main:
main	ENDP
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$3 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 704				; 000002c0H
	mov	rcx, QWORD PTR $T9[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
main$dtor$3 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$11 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN332@main$dtor$
	and	DWORD PTR $T1[rbp], -2
	lea	rcx, QWORD PTR romload$[rbp]
	add	rcx, 176				; 000000b0H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN332@main$dtor$:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
main$dtor$11 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$12 PROC
	lea	rcx, QWORD PTR romload$[rdx]
	add	rcx, 24
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$12 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$14 PROC
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$14 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$7 PROC
	lea	rcx, QWORD PTR romload$[rdx]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
main$dtor$7 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$16 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN676@main$dtor$
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR vramdump$[rbp]
	add	rcx, 168				; 000000a8H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN676@main$dtor$:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
main$dtor$16 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$17 PROC
	lea	rcx, QWORD PTR vramdump$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$17 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$19 PROC
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$19 ENDP
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$10 PROC
	lea	rcx, QWORD PTR vramdump$[rdx]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
main$dtor$10 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$3 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 704				; 000002c0H
	mov	rcx, QWORD PTR $T9[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
main$dtor$3 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$11 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN332@main$dtor$
	and	DWORD PTR $T1[rbp], -2
	lea	rcx, QWORD PTR romload$[rbp]
	add	rcx, 176				; 000000b0H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN332@main$dtor$:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
main$dtor$11 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$12 PROC
	lea	rcx, QWORD PTR romload$[rdx]
	add	rcx, 24
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$12 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$14 PROC
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$14 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$7 PROC
	lea	rcx, QWORD PTR romload$[rdx]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
main$dtor$7 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$16 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN676@main$dtor$
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR vramdump$[rbp]
	add	rcx, 168				; 000000a8H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN676@main$dtor$:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
main$dtor$16 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$17 PROC
	lea	rcx, QWORD PTR vramdump$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$17 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$19 PROC
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
main$dtor$19 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
scaled$1$ = 64
$T16 = 64
$T14 = 64
$T11 = 64
$T9 = 64
$T230 = 72
$T2 = 72
i$1$ = 80
this$ = 88
$T228 = 88
$T6 = 88
$T4 = 96
buffer$1$ = 104
$T118 = 112
$T240 = 136
device$ = 144
device$ = 144
this$ = 144
rect$241 = 144
$T124 = 144
screen$1$ = 152
device$ = 152
device$ = 152
device$ = 152
$T1 = 160
rect_scrn$242 = 160
$T121 = 160
$T120 = 176
event$243 = 176
vramdump$ = 208
romload$ = 480
__$ArrayPad$ = 752
main$dtor$10 PROC
	lea	rcx, QWORD PTR vramdump$[rdx]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
main$dtor$10 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@fastclock@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@fastclock@@QEAAX_K@Z PROC		; fastclock::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@fastclock@@QEAAX_K@Z ENDP		; fastclock::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@bus@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@bus@@QEAAX_K@Z PROC			; bus::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax
	mov	QWORD PTR [rcx+32], rax
	ret	0
?__autoclassinit2@bus@@QEAAX_K@Z ENDP			; bus::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@cpu2a03_fast@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@cpu2a03_fast@@QEAAX_K@Z PROC		; cpu2a03_fast::__autoclassinit2, COMDAT
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+104]
	jmp	memset
?__autoclassinit2@cpu2a03_fast@@QEAAX_K@Z ENDP		; cpu2a03_fast::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@ppu@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@ppu@@QEAAX_K@Z PROC			; ppu::__autoclassinit2, COMDAT
	xor	edx, edx
	mov	r8d, 704				; 000002c0H
	jmp	memset
?__autoclassinit2@ppu@@QEAAX_K@Z ENDP			; ppu::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@apu@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@apu@@QEAAX_K@Z PROC			; apu::__autoclassinit2, COMDAT
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+120]
	jmp	memset
?__autoclassinit2@apu@@QEAAX_K@Z ENDP			; apu::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@nesvideo@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@nesvideo@@QEAAX_K@Z PROC		; nesvideo::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@nesvideo@@QEAAX_K@Z ENDP		; nesvideo::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@mainram@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@mainram@@QEAAX_K@Z PROC		; mainram::__autoclassinit2, COMDAT
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+80]
	jmp	memset
?__autoclassinit2@mainram@@QEAAX_K@Z ENDP		; mainram::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T2 = 32
this$ = 64
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
$LN20:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	lea	rdi, QWORD PTR [rcx+176]

; 1011 : 		{	// destroy the object

	mov	rax, QWORD PTR [rdi-176]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rcx+rdi-176], rax
	mov	rax, QWORD PTR [rdi-176]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR [rcx+rdi-180], edx

; 1012 : 		}

	lea	rbx, QWORD PTR [rdi-160]

; 172  : 		{	// destroy the object

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR [rbx+128], 0
	je	SHORT $LN12@vbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rbx+112]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN12@vbase

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	r8, QWORD PTR [rbx+144]
	mov	rdx, QWORD PTR [rbx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], rdx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rdx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r8d
$LN12@vbase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR [rbx+124], 0
	je	SHORT $LN8@vbase

; 176  : 			close();

	mov	rcx, rbx
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	npad	1
$LN8@vbase:

; 177  : 		}

	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1012 : 		}

	lea	rcx, QWORD PTR [rdi-152]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::__autoclassinit2, COMDAT
	xor	edx, edx
	mov	r8d, 272				; 00000110H
	jmp	memset
?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@rom@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@rom@@QEAAX_K@Z PROC			; rom::__autoclassinit2, COMDAT
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+88]
	jmp	memset
?__autoclassinit2@rom@@QEAAX_K@Z ENDP			; rom::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@vrom@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@vrom@@QEAAX_K@Z PROC			; vrom::__autoclassinit2, COMDAT
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+96]
	jmp	memset
?__autoclassinit2@vrom@@QEAAX_K@Z ENDP			; vrom::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T2 = 32
this$ = 64
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
$LN20:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	lea	rdi, QWORD PTR [rcx+168]

; 1247 : 		{	// destroy the object

	mov	rax, QWORD PTR [rdi-168]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rcx+rdi-168], rax
	mov	rax, QWORD PTR [rdi-168]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR [rcx+rdi-172], edx

; 1248 : 		}

	lea	rbx, QWORD PTR [rdi-160]

; 172  : 		{	// destroy the object

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR [rbx+128], 0
	je	SHORT $LN12@vbase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rbx+112]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN12@vbase

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	r8, QWORD PTR [rbx+144]
	mov	rdx, QWORD PTR [rbx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], rdx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rdx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r8d
$LN12@vbase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR [rbx+124], 0
	je	SHORT $LN8@vbase

; 176  : 			close();

	mov	rcx, rbx
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	npad	1
$LN8@vbase:

; 177  : 		}

	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1248 : 		}

	lea	rcx, QWORD PTR [rdi-152]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::__autoclassinit2, COMDAT
	xor	edx, edx
	mov	r8d, 264				; 00000108H
	jmp	memset
?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2459 : 		{	// destroy the string

$LN63:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1825 : 		return (_BUF_SIZE <= _Myres);

	mov	rdx, QWORD PTR [rcx+24]

; 2459 : 		{	// destroy the string

	mov	rbx, rcx

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	rdx, 16

; 3987 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN43@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN42@basic_stri

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN39@basic_stri

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN42@basic_stri:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN43@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rbx+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rbx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 2461 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN39@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN60@basic_stri:
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3976 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rcx+16], 0

; 2144 : 		}

	mov	rax, rcx

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 2144 : 		}

	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::close, COMDAT

; 1285 : 		{	// close the C stream

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1286 : 		if (_Filebuffer.close() == nullptr)

	add	rcx, 8
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	rax, rax
	jne	SHORT $LN2@close

; 1287 : 			_Myios::setstate(ios_base::failbit);

	mov	rax, QWORD PTR [rbx]
	xor	r8d, r8d
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, QWORD PTR [r8+2]
	add	rcx, rbx

; 1288 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx

; 1287 : 			_Myios::setstate(ios_base::failbit);

	rex_jmp	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN2@close:

; 1288 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z
_TEXT	SEGMENT
this$ = 48
_Filename$dead$ = 56
_Mode$dead$ = 64
_Prot$dead$ = 72
?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::open, COMDAT

; 1263 : 		{	// open a C stream with specified mode

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1264 : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::out, _Prot) == nullptr)

	lea	rdx, OFFSET FLAT:??_C@_08EIBEEMIC@vram?4dmp@
	add	rcx, 8
	mov	r8d, 34					; 00000022H
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	mov	rdx, QWORD PTR [rbx]
	xor	r8d, r8d
	movsxd	rcx, DWORD PTR [rdx+4]
	add	rcx, rbx
	test	rax, rax
	jne	SHORT $LN2@open

; 1265 : 			_Myios::setstate(ios_base::failbit);

	lea	edx, QWORD PTR [rax+2]

; 1268 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx

; 1265 : 			_Myios::setstate(ios_base::failbit);

	rex_jmp	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN2@open:

; 1266 : 		else
; 1267 : 			_Myios::clear();	// added with C++11

	xor	edx, edx

; 1268 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx

; 1266 : 		else
; 1267 : 			_Myios::clear();	// added with C++11

	rex_jmp	QWORD PTR __imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::open
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
$T2 = 32
this$ = 64
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT

; 1247 : 		{	// destroy the object

$LN17:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	rdi, rcx
	mov	rax, QWORD PTR [rcx-168]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rdx+rcx-168], rax
	mov	rax, QWORD PTR [rcx-168]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-168]
	mov	DWORD PTR [rdx+rcx-172], r8d

; 1248 : 		}

	lea	rbx, QWORD PTR [rcx-160]

; 172  : 		{	// destroy the object

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR [rbx+128], 0
	je	SHORT $LN9@basic_ofst
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rbx+112]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN9@basic_ofst

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	r8, QWORD PTR [rbx+144]
	mov	rdx, QWORD PTR [rbx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], rdx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rdx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r8d
$LN9@basic_ofst:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR [rbx+124], 0
	je	SHORT $LN5@basic_ofst

; 176  : 			close();

	mov	rcx, rbx
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	npad	1
$LN5@basic_ofst:

; 177  : 		}

	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1248 : 		}

	lea	rcx, QWORD PTR [rdi-152]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT

; 1079 : 		{	// construct unopened

$LN24:
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+104], rbx
	mov	rdi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	DWORD PTR $T1[rsp], 0
	lea	rax, OFFSET FLAT:??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 168				; 000000a8H
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rsp], 1

; 741  : 		}
; 742  : 
; 743  : 	bool _Endwrite()
; 744  : 		{	// put shift to initial conversion state, as needed
; 745  : 		if (_Pcvt == nullptr || !_Wrotesome)
; 746  : 			{
; 747  : 			return (true);
; 748  : 			}
; 749  : 
; 750  : 		// may have to put
; 751  : 		if (_Traits::eq_int_type(_Traits::eof(), overflow()))
; 752  : 			{
; 753  : 			return (false);
; 754  : 			}
; 755  : 
; 756  : 		constexpr size_t _Codecvt_temp_buf = 32;
; 757  : 		char _Str[_Codecvt_temp_buf];
; 758  : 		char * _Dest;
; 759  : 		switch (_Pcvt->unshift(_State, _Str, _Str + _Codecvt_temp_buf, _Dest))
; 760  : 			{	// test result of homing conversion
; 761  : 			case codecvt_base::ok:
; 762  : 				_Wrotesome = false;	// homed successfully
; 763  : 
; 764  : 			case codecvt_base::partial:	// fall through
; 765  : 				{	// put any generated bytes
; 766  : 				const auto _Count = static_cast<size_t>(_Dest - _Str);
; 767  : 				if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile)))
; 768  : 					{
; 769  : 					return (false);	// write failed
; 770  : 					}
; 771  : 
; 772  : 				return (!_Wrotesome);
; 773  : 				}
; 774  : 
; 775  : 			case codecvt_base::noconv:
; 776  : 				return (true);	// nothing to do
; 777  : 
; 778  : 			default:
; 779  : 				return (false);	// conversion failed
; 780  : 			}
; 781  : 		}
; 782  : 
; 783  : 	void _Initcvt(const _Cvt& _Newcvt)
; 784  : 		{	// initialize codecvt pointer
; 785  : 		if (_Newcvt.always_noconv())
; 786  : 			_Pcvt = nullptr;	// nothing to do
; 787  : 		else
; 788  : 			{	// set up for nontrivial codecvt facet
; 789  : 			_Pcvt = _STD addressof(_Newcvt);
; 790  : 			_Mysb::_Init();	// reset any buffering
; 791  : 			}
; 792  : 		}
; 793  : 
; 794  : private:
; 795  : 	const _Cvt *_Pcvt;	// pointer to codecvt facet (may be null)
; 796  : 	_Elem _Mychar;	// putback character, when _Ungetc fails
; 797  : 	bool _Wrotesome;	// true if homing sequence may be needed
; 798  : 	typename _Traits::state_type _State;	// current conversion state
; 799  : 	bool _Closef;	// true if C stream must be closed
; 800  : 	FILE *_Myfile;	// pointer to C stream
; 801  : 
; 802  : 	void _Reset_back()
; 803  : 		{	// restore buffer after putback
; 804  : 		if (_Mysb::eback() == &_Mychar)
; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);
; 806  : 		}
; 807  : 
; 808  : 	void _Set_back()
; 809  : 		{	// set up putback area
; 810  : 		if (_Mysb::eback() != &_Mychar)
; 811  : 			{	// save current get buffer
; 812  : 			_Set_eback = _Mysb::eback();
; 813  : 			_Set_egptr = _Mysb::egptr();
; 814  : 			}
; 815  : 		_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);
; 816  : 		}
; 817  : 
; 818  : 	_Elem *_Set_eback;	// saves eback() during one-element putback
; 819  : 	_Elem *_Set_egptr;	// saves egptr()
; 820  : 	};
; 821  : 
; 822  : template<class _Elem,
; 823  : 	class _Traits> inline
; 824  : 	void swap(basic_filebuf<_Elem, _Traits>& _Left,
; 825  : 		basic_filebuf<_Elem, _Traits>& _Right)
; 826  : 	{	// swap _Left and _Right basic_filebufs
; 827  : 	_Left.swap(_Right);
; 828  : 	}
; 829  : 
; 830  : 		// CLASS TEMPLATE basic_ifstream
; 831  : template<class _Elem,
; 832  : 	class _Traits>
; 833  : 	class basic_ifstream
; 834  : 		: public basic_istream<_Elem, _Traits>
; 835  : 	{	// input stream associated with a C stream
; 836  : public:
; 837  : 	typedef basic_istream<_Elem, _Traits> _Mybase;
; 838  : 	typedef basic_filebuf<_Elem, _Traits> _Myfb;
; 839  : 	typedef basic_ios<_Elem, _Traits> _Myios;
; 840  : 
; 841  : 	basic_ifstream()
; 842  : 		: _Mybase(&_Filebuffer)
; 843  : 		{	// construct unopened
; 844  : 		}
; 845  : 
; 846  : 	explicit basic_ifstream(const char *_Filename,
; 847  : 		ios_base::openmode _Mode = ios_base::in,
; 848  : 		int _Prot = (int)ios_base::_Openprot)
; 849  : 		: _Mybase(&_Filebuffer)
; 850  : 		{	// construct with named file and specified mode
; 851  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == nullptr)
; 852  : 			_Myios::setstate(ios_base::failbit);
; 853  : 		}
; 854  : 
; 855  : 	explicit basic_ifstream(const string& _Str,
; 856  : 		ios_base::openmode _Mode = ios_base::in,
; 857  : 		int _Prot = (int)ios_base::_Openprot)
; 858  : 		: basic_ifstream(_Str.c_str(), _Mode, _Prot)
; 859  : 		{	// construct with named file and specified mode
; 860  : 		}
; 861  : 
; 862  : 	explicit basic_ifstream(const wchar_t *_Filename,
; 863  : 		ios_base::openmode _Mode = ios_base::in,
; 864  : 		int _Prot = (int)ios_base::_Openprot)
; 865  : 		: _Mybase(&_Filebuffer)
; 866  : 		{	// construct with wide-named file (in standard as const std::filesystem::path::value_type *)
; 867  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == nullptr)
; 868  : 			_Myios::setstate(ios_base::failbit);
; 869  : 		}
; 870  : 
; 871  : 	explicit basic_ifstream(const wstring& _Str,
; 872  : 		ios_base::openmode _Mode = ios_base::in,
; 873  : 		int _Prot = (int)ios_base::_Openprot)
; 874  : 		: basic_ifstream(_Str.c_str(), _Mode, _Prot)
; 875  : 		{	// construct with wide-named file -- EXTENSION
; 876  : 		}
; 877  : 
; 878  : 	template<class _Path_ish = experimental::filesystem::path>
; 879  : 		explicit basic_ifstream(const _Identity_t<_Path_ish>& _Path,
; 880  : 		ios_base::openmode _Mode = ios_base::in,
; 881  : 		int _Prot = (int)ios_base::_Openprot)
; 882  : 		: basic_ifstream(_Path.c_str(), _Mode, _Prot)
; 883  : 		{	// construct with path-named file
; 884  : 		}
; 885  : 
; 886  :  #if _HAS_CXX17
; 887  : 	template<int = 0,
; 888  : 		class _Path_ish = filesystem::path>
; 889  : 		explicit basic_ifstream(const _Identity_t<_Path_ish>& _Path,
; 890  : 		ios_base::openmode _Mode = ios_base::in,
; 891  : 		int _Prot = (int)ios_base::_Openprot)
; 892  : 		: basic_ifstream(_Path.c_str(), _Mode, _Prot)
; 893  : 		{	// construct with path-named file
; 894  : 		}
; 895  :  #endif /* _HAS_CXX17 */
; 896  : 
; 897  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 898  : 	explicit basic_ifstream(const unsigned short *_Filename,
; 899  : 		ios_base::openmode _Mode = ios_base::in,
; 900  : 		int _Prot = (int)ios_base::_Openprot)
; 901  : 		: _Mybase(&_Filebuffer)
; 902  : 		{	// construct with wide-named file (in standard as const std::filesystem::path::value_type *)
; 903  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == 0)
; 904  : 			_Myios::setstate(ios_base::failbit);
; 905  : 		}
; 906  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 907  : 
; 908  : 	explicit basic_ifstream(FILE *_File)
; 909  : 		: _Mybase(&_Filebuffer),
; 910  : 			_Filebuffer(_File)
; 911  : 		{	// construct with specified C stream
; 912  : 		}
; 913  : 
; 914  : 	basic_ifstream(basic_ifstream&& _Right)
; 915  : 		: _Mybase(&_Filebuffer)
; 916  : 		{	// construct by moving _Right
; 917  : 		_Assign_rv(_STD move(_Right));
; 918  : 		}
; 919  : 
; 920  : 	basic_ifstream& operator=(basic_ifstream&& _Right)
; 921  : 		{	// move from _Right
; 922  : 		_Assign_rv(_STD move(_Right));
; 923  : 		return (*this);
; 924  : 		}
; 925  : 
; 926  : 	void _Assign_rv(basic_ifstream&& _Right)
; 927  : 		{	// assign by moving _Right
; 928  : 		if (this != _STD addressof(_Right))
; 929  : 			{	// different, worth moving
; 930  : 			_Filebuffer.close();
; 931  : 			this->swap(_Right);
; 932  : 			}
; 933  : 		}
; 934  : 
; 935  : 	void swap(basic_ifstream& _Right)
; 936  : 		{	// swap with _Right
; 937  : 		if (this != _STD addressof(_Right))
; 938  : 			{	// different, swap base and buffer
; 939  : 			_Mybase::swap(_Right);
; 940  : 			_Filebuffer.swap(_Right._Filebuffer);
; 941  : 			}
; 942  : 		}
; 943  : 
; 944  : 	basic_ifstream(const basic_ifstream&) = delete;
; 945  : 	basic_ifstream& operator=(const basic_ifstream&) = delete;
; 946  : 
; 947  : 	void open(const wchar_t *_Filename,
; 948  : 		ios_base::openmode _Mode = ios_base::in,
; 949  : 		int _Prot = (int)ios_base::_Openprot)
; 950  : 		{	// open a wide-named C stream (in standard as const std::filesystem::path::value_type *)
; 951  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == nullptr)
; 952  : 			_Myios::setstate(ios_base::failbit);
; 953  : 		else
; 954  : 			_Myios::clear();	// added with C++11
; 955  : 		}
; 956  : 
; 957  : 	void open(const wstring& _Str,
; 958  : 		ios_base::openmode _Mode = ios_base::in,
; 959  : 		int _Prot = (int)ios_base::_Openprot)
; 960  : 		{	// open a wide-named C stream -- EXTENSION
; 961  : 		open(_Str.c_str(), _Mode, _Prot);
; 962  : 		}
; 963  : 
; 964  : 	template<class _Path_ish = experimental::filesystem::path>
; 965  : 		void open(const _Identity_t<_Path_ish>& _Path,
; 966  : 		ios_base::openmode _Mode = ios_base::in,
; 967  : 		int _Prot = (int)ios_base::_Openprot)
; 968  : 		{	// open a path-named C stream
; 969  : 		open(_Path.c_str(), _Mode, _Prot);
; 970  : 		}
; 971  : 
; 972  :  #if _HAS_CXX17
; 973  : 	template<int = 0,
; 974  : 		class _Path_ish = filesystem::path>
; 975  : 		void open(const _Identity_t<_Path_ish>& _Path,
; 976  : 		ios_base::openmode _Mode = ios_base::in,
; 977  : 		int _Prot = (int)ios_base::_Openprot)
; 978  : 		{	// open a path-named C stream
; 979  : 		open(_Path.c_str(), _Mode, _Prot);
; 980  : 		}
; 981  :  #endif /* _HAS_CXX17 */
; 982  : 
; 983  :  #if _HAS_OLD_IOSTREAMS_MEMBERS
; 984  : 	void open(const wchar_t *_Filename, ios_base::open_mode _Mode)
; 985  : 		{	// open wide-named file (old style) (in standard as const std::filesystem::path::value_type *)
; 986  : 		open(_Filename, static_cast<ios_base::openmode>(_Mode));
; 987  : 		}
; 988  :  #endif /* _HAS_OLD_IOSTREAMS_MEMBERS */
; 989  : 
; 990  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 991  : 	void open(const unsigned short *_Filename,
; 992  : 		ios_base::openmode _Mode = ios_base::in,
; 993  : 		int _Prot = (int)ios_base::_Openprot)
; 994  : 		{	// open a wide-named C stream (in standard as const std::filesystem::path::value_type *)
; 995  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == 0)
; 996  : 			_Myios::setstate(ios_base::failbit);
; 997  : 		else
; 998  : 			_Myios::clear();	// added with C++11
; 999  : 		}
; 1000 : 
; 1001 :  #if _HAS_OLD_IOSTREAMS_MEMBERS
; 1002 : 	void open(const unsigned short *_Filename,
; 1003 : 		ios_base::open_mode _Mode)
; 1004 : 		{	// open wide-named file (old style) (in standard as const std::filesystem::path::value_type *)
; 1005 : 		open(_Filename, static_cast<ios_base::openmode>(_Mode));
; 1006 : 		}
; 1007 :  #endif /* _HAS_OLD_IOSTREAMS_MEMBERS */
; 1008 :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 1009 : 
; 1010 : 	virtual __CLR_OR_THIS_CALL ~basic_ifstream() noexcept
; 1011 : 		{	// destroy the object
; 1012 : 		}
; 1013 : 
; 1014 : 	_NODISCARD _Myfb *rdbuf() const
; 1015 : 		{	// return pointer to file buffer
; 1016 : 		return ((_Myfb *)&_Filebuffer);
; 1017 : 		}
; 1018 : 
; 1019 : 	_NODISCARD bool is_open() const
; 1020 : 		{	// test if C stream has been opened
; 1021 : 		return (_Filebuffer.is_open());
; 1022 : 		}
; 1023 : 
; 1024 : 	void open(const char *_Filename,
; 1025 : 		ios_base::openmode _Mode = ios_base::in,
; 1026 : 		int _Prot = (int)ios_base::_Openprot)
; 1027 : 		{	// open a C stream with specified mode
; 1028 : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == nullptr)
; 1029 : 			_Myios::setstate(ios_base::failbit);
; 1030 : 		else
; 1031 : 			_Myios::clear();	// added with C++11
; 1032 : 		}
; 1033 : 
; 1034 : 	void open(const string& _Str,
; 1035 : 		ios_base::openmode _Mode = ios_base::in,
; 1036 : 		int _Prot = (int)ios_base::_Openprot)
; 1037 : 		{	// open a C stream with specified mode
; 1038 : 		open(_Str.c_str(), _Mode, _Prot);
; 1039 : 		}
; 1040 : 
; 1041 :  #if _HAS_OLD_IOSTREAMS_MEMBERS
; 1042 : 	void open(const char *_Filename, ios_base::open_mode _Mode)
; 1043 : 		{	// open named file with specified mode (old style)
; 1044 : 		open(_Filename, static_cast<ios_base::openmode>(_Mode));
; 1045 : 		}
; 1046 :  #endif /* _HAS_OLD_IOSTREAMS_MEMBERS */
; 1047 : 
; 1048 : 	void close()
; 1049 : 		{	// close the C stream
; 1050 : 		if (_Filebuffer.close() == nullptr)
; 1051 : 			_Myios::setstate(ios_base::failbit);
; 1052 : 		}
; 1053 : 
; 1054 : private:
; 1055 : 	_Myfb _Filebuffer;	// the file buffer
; 1056 : 	};
; 1057 : 
; 1058 : template<class _Elem,
; 1059 : 	class _Traits> inline
; 1060 : 	void swap(basic_ifstream<_Elem, _Traits>& _Left,
; 1061 : 		basic_ifstream<_Elem, _Traits>& _Right)
; 1062 : 	{	// swap _Left and _Right basic_ifstreams
; 1063 : 	_Left.swap(_Right);
; 1064 : 	}
; 1065 : 
; 1066 : 		// CLASS TEMPLATE basic_ofstream
; 1067 : template<class _Elem,
; 1068 : 	class _Traits>
; 1069 : 	class basic_ofstream
; 1070 : 		: public basic_ostream<_Elem, _Traits>
; 1071 : 	{	// output stream associated with a C stream
; 1072 : public:
; 1073 : 	typedef basic_ostream<_Elem, _Traits> _Mybase;
; 1074 : 	typedef basic_filebuf<_Elem, _Traits> _Myfb;
; 1075 : 	typedef basic_ios<_Elem, _Traits> _Myios;
; 1076 : 
; 1077 : 	basic_ofstream()
; 1078 : 		: _Mybase(&_Filebuffer)

	lea	rbx, QWORD PTR [rdi+8]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1

; 1079 : 		{	// construct unopened

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rcx+rdi], rax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR [rcx+rdi-4], edx
	mov	QWORD PTR this$[rsp], rbx

; 166  : 		: _Mysb()

	mov	rcx, rbx
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1

; 167  : 		{	// construct from pointer to C stream

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 717  : 		_Closef = _Which == _Openfl;

	mov	BYTE PTR [rbx+124], 0

; 718  : 		_Wrotesome = false;

	mov	BYTE PTR [rbx+113], 0

; 719  : 
; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	mov	rcx, rbx
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)
; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(
; 729  : 				_File,
; 730  : 				reinterpret_cast<char***>(&_Pb),
; 731  : 				reinterpret_cast<char***>(&_Pn),
; 732  : 				&_Nr);
; 733  : 			int *_Nw = _Nr;
; 734  : 
; 735  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);
; 736  : 			}
; 737  : 
; 738  : 		_Myfile = _File;

	mov	QWORD PTR [rbx+128], 0

; 739  : 		_State = _Stinit;

	mov	rcx, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	QWORD PTR [rbx+116], rcx

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR [rbx+104], 0

; 1080 : 		}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	add	rcx, 168				; 000000a8H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$3@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	add	rcx, 168				; 000000a8H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$3@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z
_TEXT	SEGMENT
this$ = 48
_Filename$dead$ = 56
_Mode$dead$ = 64
_Prot$dead$ = 72
?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::open, COMDAT

; 1027 : 		{	// open a C stream with specified mode

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1028 : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == nullptr)

	lea	rdx, OFFSET FLAT:??_C@_06HOALFDNC@oc?4nes@
	add	rcx, 16
	mov	r8d, 33					; 00000021H
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	mov	rdx, QWORD PTR [rbx]
	xor	r8d, r8d
	movsxd	rcx, DWORD PTR [rdx+4]
	add	rcx, rbx
	test	rax, rax
	jne	SHORT $LN2@open

; 1029 : 			_Myios::setstate(ios_base::failbit);

	lea	edx, QWORD PTR [rax+2]

; 1032 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx

; 1029 : 			_Myios::setstate(ios_base::failbit);

	rex_jmp	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN2@open:

; 1030 : 		else
; 1031 : 			_Myios::clear();	// added with C++11

	xor	edx, edx

; 1032 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx

; 1030 : 		else
; 1031 : 			_Myios::clear();	// added with C++11

	rex_jmp	QWORD PTR __imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
?open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXPEBDHH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::open
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
$T2 = 32
this$ = 64
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT

; 1011 : 		{	// destroy the object

$LN17:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	rdi, rcx
	mov	rax, QWORD PTR [rcx-176]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rdx+rcx-176], rax
	mov	rax, QWORD PTR [rcx-176]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-176]
	mov	DWORD PTR [rdx+rcx-180], r8d

; 1012 : 		}

	lea	rbx, QWORD PTR [rcx-160]

; 172  : 		{	// destroy the object

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR [rbx+128], 0
	je	SHORT $LN9@basic_ifst
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rbx+112]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN9@basic_ifst

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	r8, QWORD PTR [rbx+144]
	mov	rdx, QWORD PTR [rbx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], rdx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rdx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r8d
$LN9@basic_ifst:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR [rbx+124], 0
	je	SHORT $LN5@basic_ifst

; 176  : 			close();

	mov	rcx, rbx
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	npad	1
$LN5@basic_ifst:

; 177  : 		}

	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1

; 1012 : 		}

	lea	rcx, QWORD PTR [rdi-152]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT

; 843  : 		{	// construct unopened

$LN24:
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+104], rbx
	mov	rdi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	DWORD PTR $T1[rsp], 0
	lea	rax, OFFSET FLAT:??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 176				; 000000b0H
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rsp], 1

; 741  : 		}
; 742  : 
; 743  : 	bool _Endwrite()
; 744  : 		{	// put shift to initial conversion state, as needed
; 745  : 		if (_Pcvt == nullptr || !_Wrotesome)
; 746  : 			{
; 747  : 			return (true);
; 748  : 			}
; 749  : 
; 750  : 		// may have to put
; 751  : 		if (_Traits::eq_int_type(_Traits::eof(), overflow()))
; 752  : 			{
; 753  : 			return (false);
; 754  : 			}
; 755  : 
; 756  : 		constexpr size_t _Codecvt_temp_buf = 32;
; 757  : 		char _Str[_Codecvt_temp_buf];
; 758  : 		char * _Dest;
; 759  : 		switch (_Pcvt->unshift(_State, _Str, _Str + _Codecvt_temp_buf, _Dest))
; 760  : 			{	// test result of homing conversion
; 761  : 			case codecvt_base::ok:
; 762  : 				_Wrotesome = false;	// homed successfully
; 763  : 
; 764  : 			case codecvt_base::partial:	// fall through
; 765  : 				{	// put any generated bytes
; 766  : 				const auto _Count = static_cast<size_t>(_Dest - _Str);
; 767  : 				if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile)))
; 768  : 					{
; 769  : 					return (false);	// write failed
; 770  : 					}
; 771  : 
; 772  : 				return (!_Wrotesome);
; 773  : 				}
; 774  : 
; 775  : 			case codecvt_base::noconv:
; 776  : 				return (true);	// nothing to do
; 777  : 
; 778  : 			default:
; 779  : 				return (false);	// conversion failed
; 780  : 			}
; 781  : 		}
; 782  : 
; 783  : 	void _Initcvt(const _Cvt& _Newcvt)
; 784  : 		{	// initialize codecvt pointer
; 785  : 		if (_Newcvt.always_noconv())
; 786  : 			_Pcvt = nullptr;	// nothing to do
; 787  : 		else
; 788  : 			{	// set up for nontrivial codecvt facet
; 789  : 			_Pcvt = _STD addressof(_Newcvt);
; 790  : 			_Mysb::_Init();	// reset any buffering
; 791  : 			}
; 792  : 		}
; 793  : 
; 794  : private:
; 795  : 	const _Cvt *_Pcvt;	// pointer to codecvt facet (may be null)
; 796  : 	_Elem _Mychar;	// putback character, when _Ungetc fails
; 797  : 	bool _Wrotesome;	// true if homing sequence may be needed
; 798  : 	typename _Traits::state_type _State;	// current conversion state
; 799  : 	bool _Closef;	// true if C stream must be closed
; 800  : 	FILE *_Myfile;	// pointer to C stream
; 801  : 
; 802  : 	void _Reset_back()
; 803  : 		{	// restore buffer after putback
; 804  : 		if (_Mysb::eback() == &_Mychar)
; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);
; 806  : 		}
; 807  : 
; 808  : 	void _Set_back()
; 809  : 		{	// set up putback area
; 810  : 		if (_Mysb::eback() != &_Mychar)
; 811  : 			{	// save current get buffer
; 812  : 			_Set_eback = _Mysb::eback();
; 813  : 			_Set_egptr = _Mysb::egptr();
; 814  : 			}
; 815  : 		_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);
; 816  : 		}
; 817  : 
; 818  : 	_Elem *_Set_eback;	// saves eback() during one-element putback
; 819  : 	_Elem *_Set_egptr;	// saves egptr()
; 820  : 	};
; 821  : 
; 822  : template<class _Elem,
; 823  : 	class _Traits> inline
; 824  : 	void swap(basic_filebuf<_Elem, _Traits>& _Left,
; 825  : 		basic_filebuf<_Elem, _Traits>& _Right)
; 826  : 	{	// swap _Left and _Right basic_filebufs
; 827  : 	_Left.swap(_Right);
; 828  : 	}
; 829  : 
; 830  : 		// CLASS TEMPLATE basic_ifstream
; 831  : template<class _Elem,
; 832  : 	class _Traits>
; 833  : 	class basic_ifstream
; 834  : 		: public basic_istream<_Elem, _Traits>
; 835  : 	{	// input stream associated with a C stream
; 836  : public:
; 837  : 	typedef basic_istream<_Elem, _Traits> _Mybase;
; 838  : 	typedef basic_filebuf<_Elem, _Traits> _Myfb;
; 839  : 	typedef basic_ios<_Elem, _Traits> _Myios;
; 840  : 
; 841  : 	basic_ifstream()
; 842  : 		: _Mybase(&_Filebuffer)

	lea	rbx, QWORD PTR [rdi+16]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1

; 843  : 		{	// construct unopened

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rcx+rdi], rax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR [rcx+rdi-4], edx
	mov	QWORD PTR this$[rsp], rbx

; 166  : 		: _Mysb()

	mov	rcx, rbx
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1

; 167  : 		{	// construct from pointer to C stream

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 717  : 		_Closef = _Which == _Openfl;

	mov	BYTE PTR [rbx+124], 0

; 718  : 		_Wrotesome = false;

	mov	BYTE PTR [rbx+113], 0

; 719  : 
; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	mov	rcx, rbx
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)
; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(
; 729  : 				_File,
; 730  : 				reinterpret_cast<char***>(&_Pb),
; 731  : 				reinterpret_cast<char***>(&_Pn),
; 732  : 				&_Nr);
; 733  : 			int *_Nw = _Nr;
; 734  : 
; 735  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);
; 736  : 			}
; 737  : 
; 738  : 		_Myfile = _File;

	mov	QWORD PTR [rbx+128], 0

; 739  : 		_State = _Stinit;

	mov	rcx, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	QWORD PTR [rbx+116], rcx

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR [rbx+104], 0

; 844  : 		}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	add	rcx, 176				; 000000b0H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 24
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$3@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	add	rcx, 176				; 000000b0H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 24
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$GSCopy$ = 48
this$ = 64
this$ = 96
$initVBases$dead$ = 104
?dtor$3@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
_TEXT	SEGMENT
this$ = 48
_Loc$ = 56
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT

; 709  : 		{	// set locale to argument (capture nontrivial codecvt facet)

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 710  : 		_Initcvt(_STD use_facet<_Cvt>(_Loc));

	mov	rcx, rdx
	call	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >

; 785  : 		if (_Newcvt.always_noconv())

	mov	rcx, rax

; 710  : 		_Initcvt(_STD use_facet<_Cvt>(_Loc));

	mov	rdi, rax

; 785  : 		if (_Newcvt.always_noconv())

	call	QWORD PTR __imp_?always_noconv@codecvt_base@std@@QEBA_NXZ
	test	al, al
	je	SHORT $LN4@imbue

; 786  : 			_Pcvt = nullptr;	// nothing to do

	mov	QWORD PTR [rbx+104], 0

; 711  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@imbue:

; 790  : 			_Mysb::_Init();	// reset any buffering

	mov	rcx, rbx
	mov	QWORD PTR [rbx+104], rdi

; 711  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 790  : 			_Mysb::_Init();	// reset any buffering

	rex_jmp	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
this$ = 48
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT

; 702  : 		{	// synchronize C stream with external file

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H

; 703  : 		return (_Myfile == nullptr

	cmp	QWORD PTR [rcx+128], 0
	mov	rbx, rcx
	je	SHORT $LN3@sync
	mov	rax, QWORD PTR [rcx]
	mov	edx, -1
	call	QWORD PTR [rax+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 703  : 		return (_Myfile == nullptr

	je	SHORT $LN3@sync
	mov	rcx, QWORD PTR [rbx+128]
	call	QWORD PTR __imp_fflush
	test	eax, eax
	jns	SHORT $LN3@sync
	mov	eax, -1

; 704  : 			|| _Traits::eq_int_type(_Traits::eof(), overflow())
; 705  : 			|| 0 <= _CSTD fflush(_Myfile) ? 0 : -1);
; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN3@sync:

; 703  : 		return (_Myfile == nullptr

	xor	eax, eax

; 704  : 			|| _Traits::eq_int_type(_Traits::eof(), overflow())
; 705  : 			|| 0 <= _CSTD fflush(_Myfile) ? 0 : -1);
; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
_TEXT	SEGMENT
this$ = 48
_Buffer$ = 56
_Count$ = 64
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT

; 689  : 		{	// offer _Buffer to C stream

$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	r9, r8

; 690  : 		if (_Myfile == nullptr || _CSTD setvbuf(_Myfile, (char *)_Buffer,

	mov	rcx, QWORD PTR [rcx+128]
	test	rcx, rcx
	je	SHORT $LN4@setbuf
	test	rdx, rdx
	jne	SHORT $LN6@setbuf
	test	r8, r8
	jne	SHORT $LN6@setbuf
	lea	r8d, QWORD PTR [r9+4]
	jmp	SHORT $LN7@setbuf
$LN6@setbuf:
	xor	r8d, r8d
$LN7@setbuf:
	call	QWORD PTR __imp_setvbuf
	test	eax, eax
	jne	SHORT $LN4@setbuf

; 694  : 		else
; 695  : 			{	// new buffer, reinitialize pointers
; 696  : 			_Init(_Myfile, _Openfl);

	mov	rdx, QWORD PTR [rbx+128]
	lea	r8d, QWORD PTR [rax+1]
	mov	rcx, rbx
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 697  : 			return (this);

	mov	rax, rbx

; 698  : 			}
; 699  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@setbuf:

; 691  : 			_Buffer == nullptr && _Count == 0 ? _IONBF : _IOFBF,
; 692  : 			(size_t)_Count * sizeof (_Elem)) != 0)
; 693  : 			return (nullptr);	// failed

	xor	eax, eax

; 698  : 			}
; 699  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 32
__$ArrayPad$ = 40
this$ = 80
__$ReturnUdt$ = 88
_Pos$ = 96
__formal$ = 104
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT

; 675  : 		{	// change position to _Pos

$LN22:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 55   : 		return (_Myoff + _Fpos);

	mov	rax, QWORD PTR [r8+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 675  : 		{	// change position to _Pos

	mov	rsi, r8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 55   : 		return (_Myoff + _Fpos);

	add	rax, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 675  : 		{	// change position to _Pos

	mov	rbx, rdx

; 676  : 		off_type _Off = static_cast<off_type>(_Pos);
; 677  : 
; 678  : 		if (_Myfile == nullptr || !_Endwrite() || _CSTD fsetpos(_Myfile, &_Off) != 0)

	cmp	QWORD PTR [rcx+128], 0
	mov	rdi, rcx
	mov	QWORD PTR _Off$[rsp], rax
	je	SHORT $LN3@seekpos
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN3@seekpos
	mov	rcx, QWORD PTR [rdi+128]
	lea	rdx, QWORD PTR _Off$[rsp]
	call	QWORD PTR __imp_fsetpos
	test	eax, eax
	jne	SHORT $LN3@seekpos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rdi+112]

; 679  : 			{
; 680  : 			return (pos_type(-1));	// report failure
; 681  : 			}
; 682  : 
; 683  : 		_State = _Pos.state();

	mov	rdx, QWORD PTR [rsi+16]
	mov	QWORD PTR [rdi+116], rdx

; 804  : 		if (_Mysb::eback() == &_Mychar)

	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN12@seekpos

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR [rdi+136]
	mov	r8, QWORD PTR [rdi+144]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], rdx

; 252  : 		*_IGnext = _Next;
; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rcx, QWORD PTR [rdi+56]
	mov	QWORD PTR [rcx], rdx
	mov	rcx, QWORD PTR [rdi+80]
	mov	DWORD PTR [rcx], r8d
	mov	rdx, QWORD PTR [rdi+116]
$LN12@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 37   : 		: _Myoff(_Fileposition), _Fpos(0), _Mystate(_State)

	mov	rcx, QWORD PTR _Off$[rsp]
	mov	QWORD PTR [rbx], rcx
	mov	QWORD PTR [rbx+8], 0
	mov	QWORD PTR [rbx+16], rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 685  : 		return (pos_type(_State, _Off));	// return new position

	jmp	SHORT $LN20@seekpos
$LN3@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	xor	eax, eax
	mov	QWORD PTR [rbx], -1
	mov	QWORD PTR [rbx+8], 0
	mov	QWORD PTR [rbx+16], rax
$LN20@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 686  : 		}

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Fileposition$ = 32
__$ArrayPad$ = 40
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
_Way$ = 120
__formal$ = 128
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT

; 652  : 		{	// change position by _Off

$LN23:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rcx+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 657  : 			&& _Pcvt == nullptr)	// not converting

	lea	r14, QWORD PTR [rcx+112]
	mov	ebp, r9d
	mov	rsi, r8
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	QWORD PTR [rax], r14
	jne	SHORT $LN2@seekoff
	cmp	r9d, 1
	jne	SHORT $LN2@seekoff
	cmp	QWORD PTR [rcx+104], 0
	jne	SHORT $LN2@seekoff

; 658  : 			{
; 659  : 			_Off -= static_cast<off_type>(sizeof(_Elem));	// back up over _Elem bytes

	dec	rsi
$LN2@seekoff:

; 660  : 			}
; 661  : 
; 662  : 		if (_Myfile == nullptr || !_Endwrite()
; 663  : 			|| ((_Off != 0 || _Way != ios_base::cur)
; 664  : 				&& _CSTD _fseeki64(_Myfile, _Off, _Way) != 0)
; 665  : 			|| _CSTD fgetpos(_Myfile, &_Fileposition) != 0)

	cmp	QWORD PTR [rcx+128], 0
	je	$LN4@seekoff
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN4@seekoff
	test	rsi, rsi
	jne	SHORT $LN6@seekoff
	cmp	ebp, 1
	je	SHORT $LN5@seekoff
$LN6@seekoff:
	mov	rcx, QWORD PTR [rbx+128]
	mov	r8d, ebp
	mov	rdx, rsi
	call	QWORD PTR __imp__fseeki64
	test	eax, eax
	jne	SHORT $LN4@seekoff
$LN5@seekoff:
	mov	rcx, QWORD PTR [rbx+128]
	lea	rdx, QWORD PTR _Fileposition$[rsp]
	call	QWORD PTR __imp_fgetpos
	test	eax, eax
	jne	SHORT $LN4@seekoff
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	cmp	QWORD PTR [rax], r14
	jne	SHORT $LN13@seekoff

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR [rbx+136]
	mov	r8, QWORD PTR [rbx+144]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rax], rdx

; 252  : 		*_IGnext = _Next;
; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rcx, QWORD PTR [rbx+56]
	mov	QWORD PTR [rcx], rdx
	mov	rcx, QWORD PTR [rbx+80]
	mov	DWORD PTR [rcx], r8d
$LN13@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 671  : 		return (pos_type(_State, _Fileposition));	// return new position

	mov	rcx, QWORD PTR [rbx+116]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 37   : 		: _Myoff(_Fileposition), _Fpos(0), _Mystate(_State)

	mov	rdx, QWORD PTR _Fileposition$[rsp]
	mov	QWORD PTR [rdi], rdx
	mov	QWORD PTR [rdi+16], rcx
	mov	QWORD PTR [rdi+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 671  : 		return (pos_type(_State, _Fileposition));	// return new position

	jmp	SHORT $LN21@seekoff
$LN4@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	xor	eax, eax
	mov	QWORD PTR [rdi], -1
	mov	QWORD PTR [rdi+8], 0
	mov	QWORD PTR [rdi+16], rax
$LN21@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 672  : 		}

	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsputn, COMDAT

; 612  : 		{	// put _Count characters to stream

$LN21:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 613  : 		if _CONSTEXPR_IF (sizeof(_Elem) == 1)
; 614  : 			{
; 615  : 			if (_Pcvt)

	cmp	QWORD PTR [rcx+104], 0
	mov	rbx, r8
	mov	r14, rdx
	mov	rdi, rcx
	je	SHORT $LN4@xsputn

; 641  : 			}
; 642  : 		else
; 643  : 			{	// non-chars always get element-by-element processing
; 644  : 			return (_Mysb::xsputn(_Ptr, _Count));
; 645  : 			}
; 646  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14

; 616  : 				{	// if we need a nontrivial codecvt transform, do the default expensive thing
; 617  : 				return (_Mysb::xsputn(_Ptr, _Count));

	rex_jmp	QWORD PTR __imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
$LN4@xsputn:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 312  : 		return (*_IPnext != nullptr ? *_IPcount : 0);

	mov	rax, QWORD PTR [rcx+64]
	mov	QWORD PTR [rsp+48], rbp
	mov	QWORD PTR [rsp+56], rsi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 620  : 			const streamsize _Start_count = _Count;

	mov	rsi, rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 312  : 		return (*_IPnext != nullptr ? *_IPcount : 0);

	mov	r9, QWORD PTR [rax]
	test	r9, r9
	je	SHORT $LN11@xsputn
	mov	rax, QWORD PTR [rcx+88]
	mov	ecx, DWORD PTR [rax]
	jmp	SHORT $LN12@xsputn
$LN11@xsputn:
	xor	ecx, ecx
$LN12@xsputn:
	movsxd	rbp, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 622  : 			if (0 < _Count && 0 < _Size)

	test	rbx, rbx
	jle	SHORT $LN7@xsputn
	test	ecx, ecx
	jle	SHORT $LN5@xsputn

; 624  : 				if (_Count < _Size)

	cmp	rbx, rbp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	rcx, r9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 624  : 				if (_Count < _Size)

	cmovl	rbp, rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	r8, rbp
	call	memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 286  : 		*_IPcount -= _Off;

	mov	rax, QWORD PTR [rdi+88]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 630  : 				_Ptr += _Size;

	add	r14, rbp

; 631  : 				_Count -= _Size;

	sub	rbx, rbp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 286  : 		*_IPcount -= _Off;

	sub	DWORD PTR [rax], ebp

; 287  : 		*_IPnext += _Off;

	mov	rcx, QWORD PTR [rdi+64]
	movsxd	rax, ebp
	add	QWORD PTR [rcx], rax
$LN5@xsputn:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 635  : 			if (0 < _Count && _Myfile)

	test	rbx, rbx
	jle	SHORT $LN7@xsputn
	mov	r9, QWORD PTR [rdi+128]
	test	r9, r9
	je	SHORT $LN7@xsputn

; 636  : 				{	// open C stream, attempt write
; 637  : 				_Count -= _CSTD fwrite(_Ptr, sizeof(_Elem), static_cast<size_t>(_Count), _Myfile);

	mov	r8, rbx
	mov	edx, 1
	mov	rcx, r14
	call	QWORD PTR __imp_fwrite
	sub	rbx, rax
$LN7@xsputn:

; 638  : 				}
; 639  : 
; 640  : 			return (_Start_count - _Count);

	mov	rbp, QWORD PTR [rsp+48]
	sub	rsi, rbx

; 641  : 			}
; 642  : 		else
; 643  : 			{	// non-chars always get element-by-element processing
; 644  : 			return (_Mysb::xsputn(_Ptr, _Count));
; 645  : 			}
; 646  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn, COMDAT

; 574  : 		{	// get _Count characters from stream

$LN21:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 575  : 		if _CONSTEXPR_IF (sizeof(_Elem) == 1)
; 576  : 			{
; 577  : 			if (_Pcvt)

	cmp	QWORD PTR [rcx+104], 0
	mov	rbx, r8
	mov	r14, rdx
	mov	rdi, rcx
	je	SHORT $LN4@xsgetn

; 604  : 			}
; 605  : 		else
; 606  : 			{	// non-chars always get element-by-element processing
; 607  : 			return (_Mysb::xsgetn(_Ptr, _Count));
; 608  : 			}
; 609  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14

; 578  : 				{	// if we need a nontrivial codecvt transform, do the default expensive thing
; 579  : 				return (_Mysb::xsgetn(_Ptr, _Count));

	rex_jmp	QWORD PTR __imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
$LN4@xsgetn:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 281  : 		return (*_IGnext != nullptr ? *_IGcount : 0);

	mov	rax, QWORD PTR [rcx+56]
	mov	QWORD PTR [rsp+48], rbp
	mov	QWORD PTR [rsp+56], rsi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 582  : 			const streamsize _Start_count = _Count;

	mov	rsi, rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 281  : 		return (*_IGnext != nullptr ? *_IGcount : 0);

	mov	rdx, QWORD PTR [rax]
	test	rdx, rdx
	je	SHORT $LN11@xsgetn
	mov	rax, QWORD PTR [rcx+80]
	mov	ecx, DWORD PTR [rax]
	jmp	SHORT $LN12@xsgetn
$LN11@xsgetn:
	xor	ecx, ecx
$LN12@xsgetn:
	movsxd	rbp, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 584  : 			if (0 < _Count && 0 < _Size)

	test	rbx, rbx
	jle	SHORT $LN7@xsgetn
	test	ecx, ecx
	jle	SHORT $LN5@xsgetn

; 586  : 				if (_Count < _Size)

	cmp	rbx, rbp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	rcx, r14
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 586  : 				if (_Count < _Size)

	cmovl	rbp, rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	r8, rbp
	call	memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 245  : 		*_IGcount -= _Off;

	mov	rax, QWORD PTR [rdi+80]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 592  : 				_Ptr += _Size;

	add	r14, rbp

; 593  : 				_Count -= _Size;

	sub	rbx, rbp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 245  : 		*_IGcount -= _Off;

	sub	DWORD PTR [rax], ebp

; 246  : 		*_IGnext += _Off;

	mov	rcx, QWORD PTR [rdi+56]
	movsxd	rax, ebp
	add	QWORD PTR [rcx], rax
$LN5@xsgetn:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 597  : 			if (0 < _Count && _Myfile)

	test	rbx, rbx
	jle	SHORT $LN7@xsgetn
	cmp	QWORD PTR [rdi+128], 0
	je	SHORT $LN7@xsgetn

; 598  : 				{	// open C stream, attempt read
; 599  : 				_Reset_back();	// revert from _Mychar buffer

	mov	rcx, rdi
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 600  : 				_Count -= _CSTD fread(_Ptr, sizeof(_Elem), static_cast<size_t>(_Count), _Myfile);

	mov	r9, QWORD PTR [rdi+128]
	mov	r8, rbx
	mov	edx, 1
	mov	rcx, r14
	call	QWORD PTR __imp_fread
	sub	rbx, rax
$LN7@xsgetn:

; 601  : 				}
; 602  : 
; 603  : 			return (_Start_count - _Count);

	mov	rbp, QWORD PTR [rsp+48]
	sub	rsi, rbx

; 604  : 			}
; 605  : 		else
; 606  : 			{	// non-chars always get element-by-element processing
; 607  : 			return (_Mysb::xsgetn(_Ptr, _Count));
; 608  : 			}
; 609  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
$T76 = 64
_Src$77 = 72
_Dest$78 = 80
_Ch$79 = 88
_Str$ = 96
__$ArrayPad$ = 128
this$ = 160
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT

; 508  : 		{	// get an element from stream, point past it

$LN532:
	mov	rax, rsp
	push	rbp
	lea	rbp, QWORD PTR [rax-95]
	sub	rsp, 144				; 00000090H
	mov	QWORD PTR $T76[rbp-57], -2
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rdi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-57], rax
	mov	rdi, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rcx+56]
	mov	rcx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 509  : 		if (_Mysb::gptr() != nullptr && _Mysb::gptr() < _Mysb::egptr())

	test	rcx, rcx
	je	SHORT $LN524@uflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rdx, QWORD PTR [rdi+80]
	movsxd	r8, DWORD PTR [rdx]
	lea	rax, QWORD PTR [rcx+r8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 509  : 		if (_Mysb::gptr() != nullptr && _Mysb::gptr() < _Mysb::egptr())

	cmp	rcx, rax
	jae	SHORT $LN524@uflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 269  : 		--*_IGcount;

	lea	eax, DWORD PTR [r8-1]
	mov	DWORD PTR [rdx], eax

; 270  : 		return ((*_IGnext)++);

	mov	rcx, QWORD PTR [rdi+56]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	eax, BYTE PTR [rdx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 511  : 			return (_Traits::to_int_type(*_Mysb::_Gninc()));	// return buffered

	jmp	$LN498@uflow
$LN524@uflow:

; 512  : 			}
; 513  : 
; 514  : 		if (_Myfile == nullptr)

	cmp	QWORD PTR [rdi+128], 0
	jne	SHORT $LN10@uflow

; 515  : 			{
; 516  : 			return (_Traits::eof());	// no open C stream, fail

	mov	eax, -1
	jmp	$LN498@uflow
$LN10@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	r8, QWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rdi+112]
	cmp	QWORD PTR [r8], rax
	jne	SHORT $LN37@uflow

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR [rdi+144]
	mov	rcx, QWORD PTR [rdi+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [r8], rcx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rdi+56]
	mov	QWORD PTR [rax], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	edx, ecx
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax], edx
$LN37@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 520  : 		if (_Pcvt == nullptr)

	cmp	QWORD PTR [rdi+104], 0
	jne	SHORT $LN11@uflow

; 61   : 	if ((_Meta = _CSTD fgetc(_File)) == EOF)

	mov	rcx, QWORD PTR [rdi+128]
	call	QWORD PTR __imp_fgetc
	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	ebx, al
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 61   : 	if ((_Meta = _CSTD fgetc(_File)) == EOF)

	jne	$LN434@uflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 541  : 		return (EOF);

	mov	ebx, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 523  : 			return (_Fgetc(_Ch, _Myfile) ? _Traits::to_int_type(_Ch) : _Traits::eof());

	jmp	$LN434@uflow
$LN11@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

	mov	QWORD PTR _Str$[rbp-41], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR _Str$[rbp-33], 15
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR _Str$[rbp-57], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 532  : 			int _Meta = _CSTD fgetc(_Myfile);

	mov	rcx, QWORD PTR [rdi+128]
	call	QWORD PTR __imp_fgetc
	mov	r8d, eax

; 533  : 
; 534  : 			if (_Meta == EOF)

	cmp	eax, -1
	je	$LN513@uflow
$LL2@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3229 : 		const size_type _Old_size = _My_data._Mysize;

	mov	rcx, QWORD PTR _Str$[rbp-41]
	mov	rdx, QWORD PTR _Str$[rbp-33]
	cmp	rcx, rdx

; 3230 : 		if (_Old_size < _My_data._Myres)

	jae	SHORT $LN134@uflow

; 3231 : 			{
; 3232 : 			_My_data._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR _Str$[rbp-41], rax

; 1803 : 		value_type * _Result = _Bx._Buf;

	lea	rax, QWORD PTR _Str$[rbp-57]

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	rdx, 16

; 1804 : 		if (_Large_string_engaged())

	cmovae	rax, QWORD PTR _Str$[rbp-57]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rax+rcx], r8b
	mov	BYTE PTR [rax+rcx+1], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3236 : 			return;

	jmp	SHORT $LN133@uflow
$LN134@uflow:

; 3237 : 			}
; 3238 : 
; 3239 : 		_Reallocate_grow_by(1,

	movzx	r9d, r8b
	lea	rcx, QWORD PTR _Str$[rbp-57]
	call	??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
$LN133@uflow:

; 1814 : 		const value_type * _Result = _Bx._Buf;

	lea	rdx, QWORD PTR _Str$[rbp-57]

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR _Str$[rbp-33], 16

; 1815 : 		if (_Large_string_engaged())

	cmovae	rdx, QWORD PTR _Str$[rbp-57]

; 1814 : 		const value_type * _Result = _Bx._Buf;

	lea	r8, QWORD PTR _Str$[rbp-57]

; 1815 : 		if (_Large_string_engaged())

	cmovae	r8, QWORD PTR _Str$[rbp-57]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 543  : 			switch (_Pcvt->in(_State, _Str.data(), _Str.data() + _Str.size(), _Src, &_Ch, &_Ch + 1, _Dest))

	mov	r9, QWORD PTR _Str$[rbp-41]
	add	r9, rdx
	lea	rax, QWORD PTR _Dest$78[rbp-57]
	mov	QWORD PTR [rsp+56], rax
	lea	rax, QWORD PTR _Ch$79[rbp-56]
	mov	QWORD PTR [rsp+48], rax
	lea	rax, QWORD PTR _Ch$79[rbp-57]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR _Src$77[rbp-57]
	mov	QWORD PTR [rsp+32], rax
	lea	rdx, QWORD PTR [rdi+116]
	mov	rcx, QWORD PTR [rdi+104]
	call	QWORD PTR __imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
	test	eax, eax
	js	SHORT $LN513@uflow
	cmp	eax, 1
	jg	$LN514@uflow

; 544  : 				{	// test result of converting one element
; 545  : 				case codecvt_base::partial:
; 546  : 				case codecvt_base::ok:
; 547  : 					if (_Dest != &_Ch)

	lea	rax, QWORD PTR _Ch$79[rbp-57]
	cmp	QWORD PTR _Dest$78[rbp-57], rax
	lea	rax, QWORD PTR _Str$[rbp-57]
	jne	$LN515@uflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR _Str$[rbp-33], 16

; 1815 : 		if (_Large_string_engaged())

	cmovae	rax, QWORD PTR _Str$[rbp-57]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 558  : 					_Str.erase(0, static_cast<size_t>(_Src - _Str.data()));	// partial, discard used input

	mov	r10, QWORD PTR _Src$77[rbp-57]
	sub	r10, rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1851 : 		return (_Min_value(_Size, _Mysize - _Off));

	mov	r8, QWORD PTR _Str$[rbp-41]
	cmp	r8, r10
	cmovb	r10, r8

; 1803 : 		value_type * _Result = _Bx._Buf;

	lea	rcx, QWORD PTR _Str$[rbp-57]

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR _Str$[rbp-33], 16

; 1804 : 		if (_Large_string_engaged())

	cmovae	rcx, QWORD PTR _Str$[rbp-57]

; 2848 : 		const size_type _New_size = _Old_size - _Count;

	sub	r8, r10

; 2849 : 		_My_data._Mysize = _New_size;

	mov	QWORD PTR _Str$[rbp-41], r8

; 2850 : 		_Traits::move(_Erase_at, _Erase_at + _Count, _New_size - _Off + 1); // move suffix + null up

	inc	r8
	lea	rdx, QWORD PTR [rcx+r10]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 495  : 		return (static_cast<char *>(_CSTD memmove(_First1, _First2, _Count)));

	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 532  : 			int _Meta = _CSTD fgetc(_Myfile);

	mov	rcx, QWORD PTR [rdi+128]
	call	QWORD PTR __imp_fgetc
	mov	r8d, eax

; 533  : 
; 534  : 			if (_Meta == EOF)

	cmp	eax, -1
	jne	$LL2@uflow
$LN513@uflow:

; 564  : 
; 565  : 				default:
; 566  : 					return (_Traits::eof());	// conversion failed

	mov	ebx, -1
$LN22@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

	mov	rdx, QWORD PTR _Str$[rbp-33]
	cmp	rdx, 16

; 3987 : 		if (_My_data._Large_string_engaged())

	jb	$LN434@uflow

; 3988 : 			{
; 3989 : 			const pointer _Ptr = _My_data._Bx._Ptr;
; 3990 : 			auto& _Al = this->_Getal();
; 3991 : 			_Alty_traits::destroy(_Al, _STD addressof(_My_data._Bx._Ptr));
; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR _Str$[rbp-57]
	mov	rax, rcx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	$LN433@uflow

; 115  : 	_Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 116  : 
; 117  : 	const uintptr_t * const _Ptr_user = reinterpret_cast<uintptr_t *>(_Ptr);
; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN433@uflow
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN515@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR _Str$[rbp-33], 16

; 1815 : 		if (_Large_string_engaged())

	cmovae	rax, QWORD PTR _Str$[rbp-57]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 549  : 						auto _Nleft = _Str.data() + _Str.size() - _Src;

	mov	rbx, QWORD PTR _Str$[rbp-41]
	mov	rcx, QWORD PTR _Src$77[rbp-57]
	sub	rbx, rcx
	add	rbx, rax

; 550  : 						while (0 < _Nleft)

	test	rbx, rbx
	jle	SHORT $LN527@uflow
$LL7@uflow:

; 551  : 							{
; 552  : 							_CSTD ungetc(_Src[--_Nleft], _Myfile);

	dec	rbx
	movsx	ecx, BYTE PTR [rbx+rcx]
	mov	rdx, QWORD PTR [rdi+128]
	call	QWORD PTR __imp_ungetc

; 550  : 						while (0 < _Nleft)

	test	rbx, rbx
	jle	SHORT $LN527@uflow
	mov	rcx, QWORD PTR _Src$77[rbp-57]
	jmp	SHORT $LL7@uflow
$LN527@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	ebx, BYTE PTR _Ch$79[rbp-57]
	jmp	$LN22@uflow
$LN514@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 543  : 			switch (_Pcvt->in(_State, _Str.data(), _Str.data() + _Str.size(), _Src, &_Ch, &_Ch + 1, _Dest))

	cmp	eax, 3
	jne	$LN513@uflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1803 : 		value_type * _Result = _Bx._Buf;

	lea	rax, QWORD PTR _Str$[rbp-57]

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR _Str$[rbp-33], 16

; 1804 : 		if (_Large_string_engaged())

	cmovae	rax, QWORD PTR _Str$[rbp-57]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 563  : 					return (static_cast<int_type>(_Str.front()));

	movsx	ebx, BYTE PTR [rax]
	jmp	$LN22@uflow
$LN433@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN434@uflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 569  : 		}

	mov	eax, ebx
$LN498@uflow:
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-57]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rbp
	ret	0
$LN529@uflow:
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T76 = 64
_Src$77 = 72
_Dest$78 = 80
_Ch$79 = 88
_Str$ = 96
__$ArrayPad$ = 128
this$ = 160
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
	lea	rcx, QWORD PTR _Str$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T76 = 64
_Src$77 = 72
_Dest$78 = 80
_Ch$79 = 88
_Str$ = 96
__$ArrayPad$ = 128
this$ = 160
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
	lea	rcx, QWORD PTR _Str$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
this$ = 48
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT

; 493  : 		{	// get an element from stream, but don't point past it

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rcx+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 493  : 		{	// get an element from stream, but don't point past it

	mov	rbx, rcx

; 496  : 			&& _Mysb::gptr() < _Mysb::egptr())

	mov	rcx, QWORD PTR [rax]
	test	rcx, rcx
	je	SHORT $LN2@underflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [rbx+80]
	movsxd	rdx, DWORD PTR [rax]
	add	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 496  : 			&& _Mysb::gptr() < _Mysb::egptr())

	cmp	rcx, rdx
	jae	SHORT $LN2@underflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	eax, BYTE PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 505  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@underflow:

; 498  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow()))

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	mov	QWORD PTR [rsp+48], rdi
	call	QWORD PTR [rax+56]
	mov	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 498  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow()))

	jne	SHORT $LN4@underflow
	mov	rdi, QWORD PTR [rsp+48]

; 505  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@underflow:

; 499  : 			return (_Meta);	// uflow failed, return EOF
; 500  : 		else
; 501  : 			{	// get a char, don't point past it
; 502  : 			pbackfail(_Meta);

	mov	rax, QWORD PTR [rbx]
	mov	edx, edi
	mov	rcx, rbx
	call	QWORD PTR [rax+32]

; 503  : 			return (_Meta);

	mov	eax, edi
	mov	rdi, QWORD PTR [rsp+48]

; 505  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
_TEXT	SEGMENT
this$ = 48
_Meta$ = 56
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT

; 468  : 		{	// put an element back to stream

$LN73:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rcx+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 468  : 		{	// put an element back to stream

	mov	edi, edx
	mov	rbx, rcx

; 471  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)

	mov	esi, edi
	mov	rdx, QWORD PTR [rax]
	test	rdx, rdx
	je	SHORT $LN2@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 471  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)

	cmp	QWORD PTR [rax], rdx
	jae	SHORT $LN2@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	mov	ecx, edi
	cmp	edi, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 471  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)

	je	SHORT $LN4@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	eax, BYTE PTR [rdx-1]
	cmp	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 471  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)

	jne	SHORT $LN2@pbackfail
$LN4@pbackfail:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 263  : 		++*_IGcount;

	mov	rax, QWORD PTR [rbx+80]
	inc	DWORD PTR [rax]

; 264  : 		return (--*_IGnext);

	mov	rax, QWORD PTR [rbx+56]
	dec	QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 476  : 			return (_Traits::not_eof(_Meta));

	xor	eax, eax
	cmp	ecx, -1
	cmove	ecx, eax
	mov	eax, ecx

; 490  : 	}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@pbackfail:

; 478  : 		else if (_Myfile == nullptr || _Traits::eq_int_type(_Traits::eof(), _Meta))

	mov	rdx, QWORD PTR [rbx+128]
	test	rdx, rdx
	je	SHORT $LN7@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	esi, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 478  : 		else if (_Myfile == nullptr || _Traits::eq_int_type(_Traits::eof(), _Meta))

	je	SHORT $LN7@pbackfail

; 479  : 			return (_Traits::eof());	// no open C stream or EOF, fail
; 480  : 		else if (_Pcvt == nullptr && _Ungetc(_Traits::to_char_type(_Meta), _Myfile))

	cmp	QWORD PTR [rbx+104], 0
	jne	SHORT $LN68@pbackfail

; 129  : 	return (_CSTD ungetc((unsigned char)_Byte, _File) != EOF);

	movzx	ecx, sil
	call	QWORD PTR __imp_ungetc
	cmp	eax, -1

; 479  : 			return (_Traits::eof());	// no open C stream or EOF, fail
; 480  : 		else if (_Pcvt == nullptr && _Ungetc(_Traits::to_char_type(_Meta), _Myfile))

	jne	SHORT $LN70@pbackfail
$LN68@pbackfail:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	r8, QWORD PTR [rbx+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 482  : 		else if (_Mysb::gptr() != &_Mychar)

	lea	rdx, QWORD PTR [rbx+112]
	cmp	QWORD PTR [r8], rdx
	je	SHORT $LN7@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	r9, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 484  : 			_Mychar = _Traits::to_char_type(_Meta);

	mov	BYTE PTR [rdx], sil

; 810  : 		if (_Mysb::eback() != &_Mychar)

	mov	rax, QWORD PTR [r9]
	cmp	rax, rdx
	je	SHORT $LN69@pbackfail

; 811  : 			{	// save current get buffer
; 812  : 			_Set_eback = _Mysb::eback();

	mov	QWORD PTR [rbx+136], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [rbx+80]
	movsxd	rcx, DWORD PTR [rax]
	add	rcx, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 813  : 			_Set_egptr = _Mysb::egptr();

	mov	QWORD PTR [rbx+144], rcx
$LN69@pbackfail:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [r9], rdx

; 252  : 		*_IGnext = _Next;
; 253  : 		*_IGcount = (int)(_Last - _Next);

	mov	ecx, ebx
	mov	rax, QWORD PTR [rbx+56]
	sub	ecx, edx
	add	ecx, 113				; 00000071H
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], ecx
$LN70@pbackfail:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 490  : 	}

	mov	eax, edi
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@pbackfail:
	mov	rbx, QWORD PTR [rsp+64]
	mov	eax, -1
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Dest$ = 64
_Src$ = 72
_Ch$ = 80
_Str$ = 88
__$ArrayPad$ = 120
this$ = 144
_Meta$ = 152
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT

; 408  : 		{	// put an element to stream

$LN70:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	edi, edx
	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	edx, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 409  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	jne	SHORT $LN4@overflow

; 410  : 			{
; 411  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

	xor	eax, eax
	jmp	$LN1@overflow
$LN4@overflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rdx, QWORD PTR [rcx+64]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 414  : 		if (_Mysb::pptr() != nullptr && _Mysb::pptr() < _Mysb::epptr())

	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN5@overflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 258  : 		return (*_IPnext + *_IPcount);

	mov	rdx, QWORD PTR [rcx+88]
	movsxd	r8, DWORD PTR [rdx]
	add	r8, rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 414  : 		if (_Mysb::pptr() != nullptr && _Mysb::pptr() < _Mysb::epptr())

	cmp	rax, r8
	jae	SHORT $LN5@overflow

; 415  : 			{	// room in buffer, store it
; 416  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
	mov	BYTE PTR [rax], dil

; 417  : 			return (_Meta);

	mov	eax, edi
	jmp	$LN1@overflow
$LN5@overflow:

; 418  : 			}
; 419  : 
; 420  : 		if (_Myfile == nullptr)

	cmp	QWORD PTR [rcx+128], 0
	mov	QWORD PTR [rsp+160], rsi
	je	$LN12@overflow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	r8, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rcx+112]
	cmp	QWORD PTR [r8], rax
	jne	SHORT $LN43@overflow

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR [rcx+144]
	mov	rcx, QWORD PTR [rcx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [r8], rcx

; 252  : 		*_IGnext = _Next;
; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	edx, ecx
	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], edx
$LN43@overflow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 426  : 		if (_Pcvt == nullptr)

	mov	rcx, QWORD PTR [rbx+104]
	test	rcx, rcx
	jne	SHORT $LN7@overflow

; 105  : 	return (_CSTD fputc(_Byte, _File) != EOF);

	mov	rdx, QWORD PTR [rbx+128]
	movsx	ecx, dil
	call	QWORD PTR __imp_fputc

; 427  : 			{	// no codecvt facet, put as is
; 428  : 			return (_Fputc(_Traits::to_char_type(_Meta), _Myfile) ? _Meta : _Traits::eof());

	mov	ecx, -1

; 105  : 	return (_CSTD fputc(_Byte, _File) != EOF);

	cmp	eax, ecx

; 427  : 			{	// no codecvt facet, put as is
; 428  : 			return (_Fputc(_Traits::to_char_type(_Meta), _Myfile) ? _Meta : _Traits::eof());

	cmovne	ecx, edi
	mov	eax, ecx
	jmp	$LN67@overflow
$LN7@overflow:

; 437  : 		switch (_Pcvt->out(_State, &_Ch, &_Ch + 1, _Src, _Str, _Str + _Codecvt_temp_buf, _Dest))

	lea	rax, QWORD PTR _Dest$[rsp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 521  : 		return (static_cast<char>(_Meta));

	mov	BYTE PTR _Ch$[rsp], dil
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 437  : 		switch (_Pcvt->out(_State, &_Ch, &_Ch + 1, _Src, _Str, _Str + _Codecvt_temp_buf, _Dest))

	mov	QWORD PTR [rsp+56], rax
	lea	rdx, QWORD PTR [rbx+116]
	lea	rax, QWORD PTR _Str$[rsp+32]
	mov	QWORD PTR [rsp+48], rax
	lea	r9, QWORD PTR _Ch$[rsp+1]
	lea	rax, QWORD PTR _Str$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	r8, QWORD PTR _Ch$[rsp]
	lea	rax, QWORD PTR _Src$[rsp]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR __imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
	test	eax, eax
	js	SHORT $LN12@overflow
	cmp	eax, 1
	jle	SHORT $LN8@overflow
	cmp	eax, 3
	jne	SHORT $LN12@overflow

; 105  : 	return (_CSTD fputc(_Byte, _File) != EOF);

	movsx	ecx, BYTE PTR _Ch$[rsp]
	mov	rdx, QWORD PTR [rbx+128]
	call	QWORD PTR __imp_fputc

; 452  : 					}
; 453  : 
; 454  : 				return (_Traits::eof());	// conversion failed
; 455  : 				}
; 456  : 
; 457  : 			case codecvt_base::noconv:
; 458  : 				// no conversion, put as is
; 459  : 				return (_Fputc(_Ch, _Myfile) ? _Meta : _Traits::eof());

	mov	ecx, -1

; 105  : 	return (_CSTD fputc(_Byte, _File) != EOF);

	cmp	eax, ecx

; 452  : 					}
; 453  : 
; 454  : 				return (_Traits::eof());	// conversion failed
; 455  : 				}
; 456  : 
; 457  : 			case codecvt_base::noconv:
; 458  : 				// no conversion, put as is
; 459  : 				return (_Fputc(_Ch, _Myfile) ? _Meta : _Traits::eof());

	cmovne	ecx, edi
	mov	eax, ecx
	jmp	SHORT $LN67@overflow
$LN8@overflow:

; 438  : 			{	// test result of converting one element
; 439  : 			case codecvt_base::partial:
; 440  : 			case codecvt_base::ok:
; 441  : 				{	// converted something, try to put it out
; 442  : 				const auto _Count = static_cast<size_t>(_Dest - _Str);

	mov	rsi, QWORD PTR _Dest$[rsp]
	lea	rax, QWORD PTR _Str$[rsp]
	sub	rsi, rax

; 443  : 				if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile)))

	je	SHORT $LN9@overflow
	mov	r9, QWORD PTR [rbx+128]
	lea	rcx, QWORD PTR _Str$[rsp]
	mov	r8, rsi
	mov	edx, 1
	call	QWORD PTR __imp_fwrite
	cmp	rsi, rax
	jne	SHORT $LN12@overflow
$LN9@overflow:

; 444  : 					{
; 445  : 					return (_Traits::eof());	// write failed
; 446  : 					}
; 447  : 
; 448  : 				_Wrotesome = true;	// write succeeded
; 449  : 				if (_Src != &_Ch)

	lea	rax, QWORD PTR _Ch$[rsp]
	mov	BYTE PTR [rbx+113], 1
	cmp	QWORD PTR _Src$[rsp], rax

; 450  : 					{
; 451  : 					return (_Meta);	// converted whole element

	mov	eax, edi
	jne	SHORT $LN67@overflow
$LN12@overflow:

; 460  : 
; 461  : 			default:
; 462  : 				return (_Traits::eof());	// conversion failed

	mov	eax, -1
$LN67@overflow:
	mov	rsi, QWORD PTR [rsp+160]
$LN1@overflow:

; 463  : 			}
; 464  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+168]
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT

; 402  : 		if (_Myfile)

	mov	rcx, QWORD PTR [rcx+128]
	test	rcx, rcx
	je	SHORT $LN2@Unlock

; 403  : 			_CSTD _unlock_file(_Myfile);

	rex_jmp	QWORD PTR __imp__unlock_file
$LN2@Unlock:

; 404  : 		}

	ret	0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT

; 396  : 		if (_Myfile)

	mov	rcx, QWORD PTR [rcx+128]
	test	rcx, rcx
	je	SHORT $LN2@Lock

; 397  : 			_CSTD _lock_file(_Myfile);

	rex_jmp	QWORD PTR __imp__lock_file
$LN2@Lock:

; 398  : 		}

	ret	0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
$T2 = 32
this$ = 64
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT

; 172  : 		{	// destroy the object

$LN14:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	rbx, rcx
	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rcx], rax

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR [rcx+128], 0
	je	SHORT $LN6@basic_file
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rbx+112]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN6@basic_file

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	r8, QWORD PTR [rbx+144]
	mov	rdx, QWORD PTR [rbx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], rdx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rdx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r8d
$LN6@basic_file:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR [rbx+124], 0
	je	SHORT $LN3@basic_file

; 176  : 			close();

	mov	rcx, rbx
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	npad	1
$LN3@basic_file:

; 177  : 		}

	mov	rcx, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	xor	eax, eax
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], 0
	mov	QWORD PTR [rcx+16], rax

; 34   : 		}

	mov	rax, rcx
	ret	0
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
	ret	0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rdi, QWORD PTR [rcx-168]
	mov	ebx, edx
	mov	rcx, rdi
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 264				; 00000108H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rdi, QWORD PTR [rcx-176]
	mov	ebx, edx
	mov	rcx, rdi
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 272				; 00000110H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T2 = 32
this$ = 64
__flags$ = 72
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN19:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	edi, edx
	mov	rbx, rcx

; 172  : 		{	// destroy the object

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rcx], rax

; 173  : 		if (_Myfile != nullptr)

	cmp	QWORD PTR [rcx+128], 0
	je	SHORT $LN10@scalar
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	r8, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rcx+112]
	cmp	QWORD PTR [r8], rax
	jne	SHORT $LN10@scalar

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR [rcx+144]
	mov	rcx, QWORD PTR [rcx+136]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [r8], rcx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	edx, ecx
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], edx
$LN10@scalar:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 175  : 		if (_Closef)

	cmp	BYTE PTR [rbx+124], 0
	je	SHORT $LN6@scalar

; 176  : 			close();

	mov	rcx, rbx
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	npad	1
$LN6@scalar:

; 177  : 		}

	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
	test	dil, 1
	je	SHORT $LN16@scalar
	mov	edx, 152				; 00000098H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN16@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 1862 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16
	setae	al

; 1826 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1814 : 		const value_type * _Result = _Bx._Buf;
; 1815 : 		if (_Large_string_engaged())

	jb	SHORT $LN8@Myptr

; 1816 : 			{
; 1817 : 			_Result = _Unfancy(_Bx._Ptr);
; 1818 : 			}
; 1819 : 
; 1820 : 		return (_Result);

	mov	rax, QWORD PTR [rcx]

; 1821 : 		}

	ret	0
$LN8@Myptr:

; 1816 : 			{
; 1817 : 			_Result = _Unfancy(_Bx._Ptr);
; 1818 : 			}
; 1819 : 
; 1820 : 		return (_Result);

	mov	rax, rcx

; 1821 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1803 : 		value_type * _Result = _Bx._Buf;
; 1804 : 		if (_Large_string_engaged())

	jb	SHORT $LN8@Myptr

; 1805 : 			{
; 1806 : 			_Result = _Unfancy(_Bx._Ptr);
; 1807 : 			}
; 1808 : 
; 1809 : 		return (_Result);

	mov	rax, QWORD PTR [rcx]

; 1810 : 		}

	ret	0
$LN8@Myptr:

; 1805 : 			{
; 1806 : 			_Result = _Unfancy(_Bx._Ptr);
; 1807 : 			}
; 1808 : 
; 1809 : 		return (_Result);

	mov	rax, rcx

; 1810 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 2048 : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 2049 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 2043 : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 2044 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 2038 : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 2039 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 2033 : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 2034 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT

; 2023 : 		_Get_data()._Orphan_all();
; 2024 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 1784 : 		_Mysize(0),

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 1785 : 		_Myres(0)

	mov	QWORD PTR [rcx+24], rax

; 1911 : 		}

	mov	rax, rcx
	ret	0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 3984 : 		{	// initialize buffer, deallocating any storage

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1825 : 		return (_BUF_SIZE <= _Myres);

	mov	rdx, QWORD PTR [rcx+24]

; 3984 : 		{	// initialize buffer, deallocating any storage

	mov	rbx, rcx

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	rdx, 16

; 3985 : 		this->_Orphan_all();
; 3986 : 		auto& _My_data = this->_Get_data();
; 3987 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN41@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN40@Tidy_deall

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN37@Tidy_deall

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, r8
$LN40@Tidy_deall:

; 207  : 	::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN41@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rbx+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rbx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 4000 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN37@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN46@Tidy_deall:
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 3975 : 		auto& _My_data = this->_Get_data();
; 3976 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rcx+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3981 : 		}

	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3307 : 		const size_type _Alloc_max = _Alty_traits::max_size(this->_Getal());
; 3308 : 		const size_type _Storage_max = // can always store small string
; 3309 : 			_Max_value(_Alloc_max, static_cast<size_type>(this->_BUF_SIZE));
; 3310 : 		return (_Min_value(

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 3311 : 			static_cast<size_type>((numeric_limits<difference_type>::max)()),
; 3312 : 			_Storage_max - 1 // -1 is for null terminator and/or npos
; 3313 : 			));
; 3314 : 
; 3315 : 		}

	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 33   : 	return (_Left < _Right ? _Right : _Left);

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	cmovb	rcx, rdx
	mov	rax, rcx

; 34   : 	}

	ret	0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3302 : 		return (this->_Get_data()._Mysize);

	mov	rax, QWORD PTR [rcx+16]

; 3303 : 		}

	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1815 : 		if (_Large_string_engaged())

	jb	SHORT $LN14@data

; 3285 : 		return (this->_Get_data()._Myptr());

	mov	rax, QWORD PTR [rcx]

; 3286 : 		}

	ret	0
$LN14@data:

; 3285 : 		return (this->_Get_data()._Myptr());

	mov	rax, rcx

; 3286 : 		}

	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ
_TEXT	SEGMENT
this$ = 8
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front, COMDAT

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1804 : 		if (_Large_string_engaged())

	jb	SHORT $LN30@front

; 3260 : 		return (*begin());

	mov	rax, QWORD PTR [rcx]

; 3261 : 		}

	ret	0
$LN30@front:

; 3260 : 		return (*begin());

	mov	rax, rcx

; 3261 : 		}

	ret	0
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back, COMDAT

; 3228 : 		auto& _My_data = this->_Get_data();
; 3229 : 		const size_type _Old_size = _My_data._Mysize;

	mov	r8, QWORD PTR [rcx+16]

; 3230 : 		if (_Old_size < _My_data._Myres)

	mov	r9, QWORD PTR [rcx+24]
	cmp	r8, r9
	jae	SHORT $LN2@push_back

; 3231 : 			{
; 3232 : 			_My_data._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [r8+1]
	mov	QWORD PTR [rcx+16], rax

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	r9, 16

; 1804 : 		if (_Large_string_engaged())

	jb	SHORT $LN9@push_back
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN9@push_back:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rcx+r8], dl
	mov	BYTE PTR [rcx+r8+1], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3246 : 		}

	ret	0
$LN2@push_back:

; 3233 : 			_Elem * const _Ptr = _My_data._Myptr();
; 3234 : 			_Traits::assign(_Ptr[_Old_size], _Ch);
; 3235 : 			_Traits::assign(_Ptr[_Old_size + 1], _Elem());
; 3236 : 			return;
; 3237 : 			}
; 3238 : 
; 3239 : 		_Reallocate_grow_by(1,

	movzx	r9d, dl
	jmp	??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z
_TEXT	SEGMENT
this$dead$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
_Ch$ = 80
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z PROC ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator(), COMDAT

; 3241 : 				const _Elem _Ch) {

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	rdx, rax
	mov	rcx, rbx
	mov	r8, r9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3241 : 				const _Elem _Ch) {

	mov	rdi, r9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	call	memcpy

; 506  : 		_Left = _Right;

	movzx	eax, BYTE PTR _Ch$[rsp]
	mov	BYTE PTR [rdi+rbx], al
	mov	BYTE PTR [rdi+rbx+1], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3245 : 			}, _Ch);

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ENDP ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$dead$ = 56
_Count$ = 64
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 2841 : 		{	// erase elements [_Off, _Off + _Count)

$LN26:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rcx

; 1830 : 		if (_Mysize < _Off)

	mov	r8, QWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility

; 24   : 	return (_Right < _Left ? _Right : _Left);

	cmp	r8, rax
	cmovb	rax, r8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1804 : 		if (_Large_string_engaged())

	jb	SHORT $LN16@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN16@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 2848 : 		const size_type _New_size = _Old_size - _Count;

	sub	r8, rax

; 2849 : 		_My_data._Mysize = _New_size;
; 2850 : 		_Traits::move(_Erase_at, _Erase_at + _Count, _New_size - _Off + 1); // move suffix + null up

	lea	rdx, QWORD PTR [rax+rcx]
	mov	QWORD PTR [rbx+16], r8
	inc	r8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 495  : 		return (static_cast<char *>(_CSTD memmove(_First1, _First2, _Count)));

	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 2851 : 		return (*this);

	mov	rax, rbx

; 2852 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT

; 809  : 		{	// set up putback area

	mov	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rcx, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 810  : 		if (_Mysb::eback() != &_Mychar)

	mov	rax, QWORD PTR [rcx]
	lea	r9, QWORD PTR [r8+112]
	cmp	rax, r9
	je	SHORT $LN13@Set_back

; 811  : 			{	// save current get buffer
; 812  : 			_Set_eback = _Mysb::eback();

	mov	QWORD PTR [r8+136], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [r8+80]
	movsxd	rdx, DWORD PTR [rax]
	mov	rax, QWORD PTR [r8+56]
	add	rdx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 813  : 			_Set_egptr = _Mysb::egptr();

	mov	QWORD PTR [r8+144], rdx
$LN13@Set_back:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [rcx], r9

; 252  : 		*_IGnext = _Next;
; 253  : 		*_IGcount = (int)(_Last - _Next);

	mov	ecx, r8d
	mov	rax, QWORD PTR [r8+56]
	sub	ecx, r9d
	add	ecx, 113				; 00000071H
	mov	QWORD PTR [rax], r9
	mov	rax, QWORD PTR [r8+80]
	mov	DWORD PTR [rax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 816  : 		}

	ret	0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	r9, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 804  : 		if (_Mysb::eback() == &_Mychar)

	lea	rax, QWORD PTR [rcx+112]
	cmp	QWORD PTR [r9], rax
	jne	SHORT $LN2@Reset_back

; 805  : 			_Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

	mov	rdx, QWORD PTR [rcx+136]
	mov	r8, QWORD PTR [rcx+144]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	QWORD PTR [r9], rdx

; 252  : 		*_IGnext = _Next;
; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r8d, edx
	mov	rax, QWORD PTR [rcx+56]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR [rcx+80]
	mov	DWORD PTR [rax], r8d
$LN2@Reset_back:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 806  : 		}

	ret	0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Newcvt$ = 56
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT

; 784  : 		{	// initialize codecvt pointer

$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx

; 785  : 		if (_Newcvt.always_noconv())

	mov	rcx, rdx
	call	QWORD PTR __imp_?always_noconv@codecvt_base@std@@QEBA_NXZ
	test	al, al
	je	SHORT $LN2@Initcvt

; 786  : 			_Pcvt = nullptr;	// nothing to do

	mov	QWORD PTR [rbx+104], 0

; 791  : 			}
; 792  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Initcvt:

; 787  : 		else
; 788  : 			{	// set up for nontrivial codecvt facet
; 789  : 			_Pcvt = _STD addressof(_Newcvt);
; 790  : 			_Mysb::_Init();	// reset any buffering

	mov	rcx, rbx
	mov	QWORD PTR [rbx+104], rdi

; 791  : 			}
; 792  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 787  : 		else
; 788  : 			{	// set up for nontrivial codecvt facet
; 789  : 			_Pcvt = _STD addressof(_Newcvt);
; 790  : 			_Mysb::_Init();	// reset any buffering

	rex_jmp	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
_TEXT	SEGMENT
_Dest$ = 48
_Str$ = 56
__$ArrayPad$ = 88
this$ = 112
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT

; 744  : 		{	// put shift to initial conversion state, as needed

$LN22:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 745  : 		if (_Pcvt == nullptr || !_Wrotesome)

	cmp	QWORD PTR [rcx+104], 0
	mov	rbx, rcx
	je	$LN5@Endwrite
	cmp	BYTE PTR [rcx+113], 0
	je	SHORT $LN5@Endwrite

; 751  : 		if (_Traits::eq_int_type(_Traits::eof(), overflow()))

	mov	rax, QWORD PTR [rcx]
	mov	edx, -1
	call	QWORD PTR [rax+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 751  : 		if (_Traits::eq_int_type(_Traits::eof(), overflow()))

	je	SHORT $LN19@Endwrite

; 752  : 			{
; 753  : 			return (false);
; 754  : 			}
; 755  : 
; 756  : 		constexpr size_t _Codecvt_temp_buf = 32;
; 757  : 		char _Str[_Codecvt_temp_buf];
; 758  : 		char * _Dest;
; 759  : 		switch (_Pcvt->unshift(_State, _Str, _Str + _Codecvt_temp_buf, _Dest))

	mov	rcx, QWORD PTR [rbx+104]
	lea	rax, QWORD PTR _Dest$[rsp]
	lea	rdx, QWORD PTR [rbx+116]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR _Str$[rsp+32]
	lea	r8, QWORD PTR _Str$[rsp]
	call	QWORD PTR __imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
	test	eax, eax
	je	SHORT $LN7@Endwrite
	sub	eax, 1
	je	SHORT $LN8@Endwrite
	sub	eax, 2
	je	SHORT $LN5@Endwrite
$LN19@Endwrite:

; 773  : 				}
; 774  : 
; 775  : 			case codecvt_base::noconv:
; 776  : 				return (true);	// nothing to do
; 777  : 
; 778  : 			default:
; 779  : 				return (false);	// conversion failed
; 780  : 			}
; 781  : 		}

	xor	al, al
	jmp	SHORT $LN1@Endwrite
$LN7@Endwrite:

; 760  : 			{	// test result of homing conversion
; 761  : 			case codecvt_base::ok:
; 762  : 				_Wrotesome = false;	// homed successfully

	mov	BYTE PTR [rbx+113], 0
$LN8@Endwrite:

; 763  : 
; 764  : 			case codecvt_base::partial:	// fall through
; 765  : 				{	// put any generated bytes
; 766  : 				const auto _Count = static_cast<size_t>(_Dest - _Str);

	mov	rdi, QWORD PTR _Dest$[rsp]
	lea	rax, QWORD PTR _Str$[rsp]
	sub	rdi, rax

; 767  : 				if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile)))

	je	SHORT $LN9@Endwrite
	mov	r9, QWORD PTR [rbx+128]
	lea	rcx, QWORD PTR _Str$[rsp]
	mov	r8, rdi
	mov	edx, 1
	call	QWORD PTR __imp_fwrite
	cmp	rdi, rax
	jne	SHORT $LN19@Endwrite
$LN9@Endwrite:

; 768  : 					{
; 769  : 					return (false);	// write failed
; 770  : 					}
; 771  : 
; 772  : 				return (!_Wrotesome);

	cmp	BYTE PTR [rbx+113], 0
	sete	al
	jmp	SHORT $LN1@Endwrite
$LN5@Endwrite:

; 746  : 			{
; 747  : 			return (true);

	mov	al, 1
$LN1@Endwrite:

; 773  : 				}
; 774  : 
; 775  : 			case codecvt_base::noconv:
; 776  : 				return (true);	// nothing to do
; 777  : 
; 778  : 			default:
; 779  : 				return (false);	// conversion failed
; 780  : 			}
; 781  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
_Pb$1 = 32
_Pn$2 = 40
_Nr$3 = 48
__$ArrayPad$ = 56
this$ = 80
_File$ = 88
_Which$ = 96
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT

; 714  : 		{	// initialize to C stream _File after {new, open, close}

$LN13:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 715  : 		__PURE_APPDOMAIN_GLOBAL static _Myst _Stinit;	// initial state
; 716  : 
; 717  : 		_Closef = _Which == _Openfl;

	cmp	r8d, 1

; 718  : 		_Wrotesome = false;

	mov	BYTE PTR [rcx+113], 0
	mov	rdi, rdx
	mov	rbx, rcx
	sete	al
	mov	BYTE PTR [rcx+124], al

; 719  : 
; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)

	xor	esi, esi
	test	rdi, rdi
	je	SHORT $LN2@Init

; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(

	lea	r9, QWORD PTR _Nr$3[rsp]
	mov	QWORD PTR _Pb$1[rsp], rsi
	lea	r8, QWORD PTR _Pn$2[rsp]
	mov	QWORD PTR _Pn$2[rsp], rsi
	lea	rdx, QWORD PTR _Pb$1[rsp]
	mov	QWORD PTR _Nr$3[rsp], rsi
	mov	rcx, rdi
	call	QWORD PTR __imp__get_stream_buffer_pointers
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\streambuf

; 330  : 		_IGfirst = _Gf;

	mov	rax, QWORD PTR _Pb$1[rsp]
	mov	QWORD PTR [rbx+24], rax

; 331  : 		_IPfirst = _Pf;

	mov	QWORD PTR [rbx+32], rax

; 332  : 		_IGnext = _Gn;

	mov	rax, QWORD PTR _Pn$2[rsp]
	mov	QWORD PTR [rbx+56], rax

; 333  : 		_IPnext = _Pn;

	mov	QWORD PTR [rbx+64], rax

; 334  : 		_IGcount = _Gc;

	mov	rax, QWORD PTR _Nr$3[rsp]
	mov	QWORD PTR [rbx+80], rax

; 335  : 		_IPcount = _Pc;

	mov	QWORD PTR [rbx+88], rax
$LN2@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 739  : 		_State = _Stinit;

	mov	rax, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	QWORD PTR [rbx+116], rax
	mov	QWORD PTR [rbx+128], rdi

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR [rbx+104], rsi

; 741  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
_TEXT	SEGMENT
this$ = 48
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT

; 379  : 		{	// close the C stream

$LN19:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 380  : 		basic_filebuf *_Ans = this;
; 381  : 		if (_Myfile == nullptr)

	cmp	QWORD PTR [rcx+128], 0
	mov	rbx, rcx
	jne	SHORT $LN2@close

; 382  : 			_Ans = nullptr;

	xor	edi, edi
	mov	esi, edi

; 383  : 		else

	jmp	SHORT $LN5@close
$LN2@close:

; 384  : 			{	// put any homing sequence and close file
; 385  : 			if (!_Endwrite())

	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite

; 386  : 				_Ans = nullptr;
; 387  : 			if (_CSTD fclose(_Myfile) != 0)

	mov	rcx, QWORD PTR [rbx+128]
	xor	edi, edi
	test	al, al
	mov	rsi, rbx
	cmove	rsi, rdi
	call	QWORD PTR __imp_fclose
	test	eax, eax
	cmovne	rsi, rdi
$LN5@close:

; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	mov	rcx, rbx
	mov	BYTE PTR [rbx+124], 0
	mov	BYTE PTR [rbx+113], 0
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)
; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(
; 729  : 				_File,
; 730  : 				reinterpret_cast<char***>(&_Pb),
; 731  : 				reinterpret_cast<char***>(&_Pn),
; 732  : 				&_Nr);
; 733  : 			int *_Nw = _Nr;
; 734  : 
; 735  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);
; 736  : 			}
; 737  : 
; 738  : 		_Myfile = _File;
; 739  : 		_State = _Stinit;

	mov	rcx, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit

; 388  : 				_Ans = nullptr;
; 389  : 			}
; 390  : 		_Init(nullptr, _Closefl);
; 391  : 		return (_Ans);

	mov	rax, rsi

; 392  : 		}

	mov	rsi, QWORD PTR [rsp+64]

; 739  : 		_State = _Stinit;

	mov	QWORD PTR [rbx+116], rcx
	mov	QWORD PTR [rbx+128], rdi

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR [rbx+104], rdi

; 392  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
_TEXT	SEGMENT
$T5 = 32
$T1 = 40
this$ = 80
_Filename$ = 88
_Mode$ = 96
_Prot$dead$ = 104
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT

; 286  : 		{	// open a C stream with specified mode

$LN26:
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T5[rsp], -2
	mov	QWORD PTR [rsp+80], rbx
	mov	eax, r8d
	mov	r9, rdx
	mov	rbx, rcx

; 287  : 		FILE *_File;
; 288  : 		if (_Myfile != nullptr || (_File = _Fiopen(_Filename, _Mode, _Prot)) == nullptr)

	cmp	QWORD PTR [rcx+128], 0
	jne	$LN3@open
	mov	r8d, 64					; 00000040H
	mov	edx, eax
	mov	rcx, r9
	call	QWORD PTR __imp_?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z
	test	rax, rax
	je	$LN3@open

; 290  : 
; 291  : 		_Init(_File, _Openfl);

	mov	r8d, 1
	mov	rdx, rax
	mov	rcx, rbx
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 292  : 		_Initcvt(_STD use_facet<_Cvt>(_Mysb::getloc()));

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rbx
	call	QWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ
	npad	1
	mov	rcx, rax
	call	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	mov	rdi, rax

; 785  : 		if (_Newcvt.always_noconv())

	mov	rcx, rax
	call	QWORD PTR __imp_?always_noconv@codecvt_base@std@@QEBA_NXZ
	test	al, al
	je	SHORT $LN7@open

; 786  : 			_Pcvt = nullptr;	// nothing to do

	mov	QWORD PTR [rbx+104], 0

; 787  : 		else

	jmp	SHORT $LN8@open
$LN7@open:

; 788  : 			{	// set up for nontrivial codecvt facet
; 789  : 			_Pcvt = _STD addressof(_Newcvt);

	mov	QWORD PTR [rbx+104], rdi

; 790  : 			_Mysb::_Init();	// reset any buffering

	mov	rcx, rbx
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ
	npad	1
$LN8@open:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale

; 409  : 		if (_Ptr != nullptr)

	mov	rcx, QWORD PTR $T1[rsp+8]
	test	rcx, rcx
	je	SHORT $LN21@open

; 410  : 			delete _Ptr->_Decref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	rax, rax
	je	SHORT $LN21@open
	mov	r8, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	QWORD PTR [r8]
	npad	1
$LN21@open:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream

; 293  : 		return (this);	// open succeeded

	mov	rax, rbx

; 294  : 		}

	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN3@open:

; 289  : 			return (nullptr);	// open failed

	xor	eax, eax

; 294  : 		}

	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T1 = 40
this$ = 80
_Filename$ = 88
_Mode$ = 96
_Prot$dead$ = 104
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T1 = 40
this$ = 80
_Filename$ = 88
_Mode$ = 96
_Prot$dead$ = 104
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\fstream
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
$T1 = 32
this$GSCopy$ = 40
this$ = 64
_File$dead$ = 72
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT

; 167  : 		{	// construct from pointer to C stream

$LN17:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T1[rsp], -2
	mov	rbx, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx

; 166  : 		: _Mysb()

	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1

; 167  : 		{	// construct from pointer to C stream

	lea	rax, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 717  : 		_Closef = _Which == _Openfl;

	mov	BYTE PTR [rbx+124], 0

; 718  : 		_Wrotesome = false;

	mov	BYTE PTR [rbx+113], 0

; 719  : 
; 720  : 		_Mysb::_Init();	// initialize stream buffer base object

	mov	rcx, rbx
	call	QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 721  : 
; 722  : 		if (_File != nullptr && sizeof (_Elem) == 1)
; 723  : 			{	// point inside C stream with [first, first + count) buffer
; 724  : 			_Elem **_Pb = nullptr;
; 725  : 			_Elem **_Pn = nullptr;
; 726  : 			int *_Nr = nullptr;
; 727  : 
; 728  : 			::_get_stream_buffer_pointers(
; 729  : 				_File,
; 730  : 				reinterpret_cast<char***>(&_Pb),
; 731  : 				reinterpret_cast<char***>(&_Pn),
; 732  : 				&_Nr);
; 733  : 			int *_Nw = _Nr;
; 734  : 
; 735  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);
; 736  : 			}
; 737  : 
; 738  : 		_Myfile = _File;

	xor	eax, eax
	mov	QWORD PTR [rbx+128], rax

; 739  : 		_State = _Stinit;

	mov	rcx, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	QWORD PTR [rbx+116], rcx

; 740  : 		_Pcvt = nullptr;	// pointer to codecvt facet

	mov	QWORD PTR [rbx+104], rax

; 168  : 		_Init(_File, _Newfl);
; 169  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
this$ = 64
_File$dead$ = 72
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
this$ = 64
_File$dead$ = 72
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN28:
	sub	rsp, 40					; 00000028H

; 182  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdx+39]

; 94   : 	if (_Block_size <= _Bytes)

	mov	rax, -1
	cmp	rcx, rdx
	cmovbe	rcx, rax

; 52   : 		return (::operator new(_Bytes));

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN15@allocate

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));
; 998  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN15@allocate:

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN6@allocate:

; 188  : 	if (_Bytes != 0)

	test	rdx, rdx
	je	SHORT $LN7@allocate

; 52   : 		return (::operator new(_Bytes));

	mov	rcx, rdx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));
; 998  : 		}

	add	rsp, 40					; 00000028H

; 52   : 		return (::operator new(_Bytes));

	jmp	??2@YAPEAX_K@Z				; operator new
$LN7@allocate:

; 193  : 	return (nullptr);

	xor	eax, eax

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));
; 998  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN26@allocate:
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 990  : 		{	// deallocate object at _Ptr

$LN20:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN15@deallocate

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN12@deallocate

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rax, rcx
$LN15@deallocate:

; 207  : 	::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);
; 993  : 		}

	add	rsp, 40					; 00000028H

; 207  : 	::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN12@deallocate:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN18@deallocate:
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT

; 53   : 			// TRANSITION, ABI: We currently always set _Fpos to 0 but older .objs containing old basic_filebuf
; 54   : 			// would set _Fpos.
; 55   : 		return (_Myoff + _Fpos);

	mov	rax, QWORD PTR [rcx+8]
	add	rax, QWORD PTR [rcx]

; 56   : 		}

	ret	0
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ PROC ; std::fpos<_Mbstatet>::state, COMDAT

; 43   : 		return (_Mystate);

	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 44   : 		}

	ret	0
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ENDP ; std::fpos<_Mbstatet>::state
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Fileposition$ = 24
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z PROC	; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 37   : 		: _Myoff(_Fileposition), _Fpos(0), _Mystate(_State)

	mov	QWORD PTR [rcx], r8

; 39   : 		}

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	mov	QWORD PTR [rcx+16], rdx
	ret	0
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ENDP	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 307  : 		return (_Myval2);

	mov	rax, rcx

; 308  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 302  : 		return (_Myval2);

	mov	rax, rcx

; 303  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 297  : 		return (*this);

	mov	rax, rcx

; 298  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 292  : 		return (*this);

	mov	rax, rcx

; 293  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEADXZ
_TEXT	SEGMENT
this$ = 8
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT

; 1652 : 		return (const_cast<reference>(_Mybase::operator*()));

	mov	rax, QWORD PTR [rcx]

; 1653 : 		}

	ret	0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
this$ = 8
_Off$dead$ = 16
_Size$ = 24
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility

; 24   : 	return (_Right < _Left ? _Right : _Left);

	cmp	QWORD PTR [rcx+16], r8
	cmovb	r8, QWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1851 : 		return (_Min_value(_Size, _Mysize - _Off));

	mov	rax, r8

; 1852 : 		}

	ret	0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Off$dead$ = 16
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 1830 : 		if (_Mysize < _Off)
; 1831 : 			{
; 1832 : 			_Xran();
; 1833 : 			}
; 1834 : 		}

	ret	0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, -1

; 893  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT

; 1825 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1804 : 		if (_Large_string_engaged())

	jb	SHORT $LN24@begin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

	mov	rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1416 : 		: _Ptr(_Parg)

	mov	QWORD PTR [rdx], rax

; 3073 : 		auto _My_data = _STD addressof(this->_Get_data());
; 3074 : 		return (iterator(_Refancy<pointer>(_My_data->_Myptr()), _My_data));
; 3075 : 		}

	mov	rax, rdx
	ret	0
$LN24@begin:

; 1416 : 		: _Ptr(_Parg)

	mov	QWORD PTR [rdx], rcx

; 3073 : 		auto _My_data = _STD addressof(this->_Get_data());
; 3074 : 		return (iterator(_Refancy<pointer>(_My_data->_Myptr()), _My_data));
; 3075 : 		}

	mov	rax, rdx
	ret	0
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ
_TEXT	SEGMENT
this$ = 8
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT

; 1423 : #if _ITERATOR_DEBUG_LEVEL >= 1
; 1424 : 		_STL_VERIFY(_Ptr, "cannot dereference value-initialized string iterator");
; 1425 : 		const auto _Mycont = static_cast<const _Mystr *>(this->_Getcont());
; 1426 : 		_STL_VERIFY(_Mycont, "cannot dereference string iterator because the iterator was"
; 1427 : 			" invalidated (e.g. reallocation occurred, or the string was destroyed)");
; 1428 : 		const auto _Contptr = _Mycont->_Myptr();
; 1429 : 		const auto _Rawptr = _Unfancy(_Ptr);
; 1430 : 		_STL_VERIFY(_Contptr <= _Rawptr && _Rawptr < _Contptr + _Mycont->_Mysize,
; 1431 : 			"cannot dereference string iterator because it is out of range (e.g. an end iterator)");
; 1432 : #endif /* _ITERATOR_DEBUG_LEVEL >= 1 */
; 1433 : 
; 1434 : 		_Analysis_assume_(_Ptr);
; 1435 : 		return (*_Ptr);

	mov	rax, QWORD PTR [rcx]

; 1436 : 		}

	ret	0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pstring$dead$ = 24
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 1416 : 		: _Ptr(_Parg)

	mov	QWORD PTR [rcx], rdx

; 1648 : 		}

	mov	rax, rcx
	ret	0
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 1845 : 		{	// report an out_of_range error

$LN4:
	sub	rsp, 40					; 00000028H

; 1846 : 		_Xout_of_range("invalid string position");

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN3@Xran:
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pstring$dead$ = 24
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 1416 : 		: _Ptr(_Parg)

	mov	QWORD PTR [rcx], rdx

; 1418 : 		this->_Adopt(_Pstring);
; 1419 : 		}

	mov	rax, rcx
	ret	0
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 346  : 	return (_Ptr);

	mov	rax, rcx

; 347  : 	}

	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 40
_Psave$18 = 64
_Lock$19 = 72
_Psave_guard$20 = 80
__$ArrayPad$ = 88
_Loc$ = 112
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,_Mbstatet> >, COMDAT

; 505  : 	{	// get facet reference from locale

$LN72:
	mov	r11, rsp
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	QWORD PTR [r11-72], -2
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11+24], rsi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rcx

; 506  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR [r11-32]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 507  : 		const locale::facet *_Psave =
; 508  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

	mov	rax, QWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
	mov	QWORD PTR _Psave$18[rsp], rax

; 509  : 
; 510  : 		const size_t _Id = _Facet::id;

	mov	rcx, QWORD PTR __imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	rdi, rax

; 436  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

	mov	rax, QWORD PTR [rsi+8]
	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN15@use_facet
	mov	rcx, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [rcx+rdi*8]

; 437  : 			? _Ptr->_Facetvec[_Id] : nullptr;	// null if id off end
; 438  : 		if (_Facptr != nullptr || !_Ptr->_Xparent)

	test	rbx, rbx
	jne	SHORT $LN61@use_facet
	jmp	SHORT $LN65@use_facet
$LN15@use_facet:

; 436  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

	xor	ebx, ebx
$LN65@use_facet:

; 437  : 			? _Ptr->_Facetvec[_Id] : nullptr;	// null if id off end
; 438  : 		if (_Facptr != nullptr || !_Ptr->_Xparent)

	cmp	BYTE PTR [rax+36], 0
	je	SHORT $LN12@use_facet

; 439  : 			return (_Facptr);	// found facet or not transparent
; 440  : 		else
; 441  : 			{	// look in current locale
; 442  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

	call	QWORD PTR __imp_?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ

; 443  : 			return (_Id < _Ptr0->_Facetcount

	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN66@use_facet
	mov	rax, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [rax+rdi*8]
$LN12@use_facet:

; 511  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 512  : 
; 513  : 		if (_Pf == nullptr)

	test	rbx, rbx
	jne	SHORT $LN61@use_facet
$LN66@use_facet:

; 514  : 			{
; 515  : 			if (_Psave != nullptr)

	mov	rbx, QWORD PTR _Psave$18[rsp]
	test	rbx, rbx
	jne	SHORT $LN61@use_facet

; 516  : 				{
; 517  : 				_Pf = _Psave;	// lazy facet already allocated
; 518  : 				}
; 519  : 			else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1))

	mov	rdx, rsi
	lea	rcx, QWORD PTR _Psave$18[rsp]
	call	QWORD PTR __imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	cmp	rax, -1
	je	SHORT $LN70@use_facet

; 523  :  #else /* _HAS_EXCEPTIONS */
; 524  : 				abort();	// lazy disallowed
; 525  :  #endif /* _HAS_EXCEPTIONS */
; 526  : 				}
; 527  : 			else
; 528  : 				{	// queue up lazy facet for destruction
; 529  : 				auto _Pfmod = const_cast<locale::facet *>(_Psave);

	mov	rbx, QWORD PTR _Psave$18[rsp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	QWORD PTR _Psave_guard$20[rsp], rbx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale

; 535  : 				_Facet_Register(_Pfmod);

	mov	rcx, rbx
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 536  :  #endif /* defined(_M_CEE) */
; 537  : 
; 538  : 				_Pfmod->_Incref();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]

; 539  : 				_Facetptr<_Facet>::_Psave = _Psave;

	mov	rbx, QWORD PTR _Psave$18[rsp]
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
$LN61@use_facet:

; 540  : 				_Pf = _Psave;
; 541  : 
; 542  : 				(void) _Psave_guard.release();
; 543  : 				}
; 544  : 			}
; 545  : 
; 546  : 		return (static_cast<const _Facet&>(*_Pf));	// should be dynamic_cast

	lea	rcx, QWORD PTR _Lock$19[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rax, rbx

; 547  : 	_END_LOCK()
; 548  : 	}	// end of use_facet body

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
$LN70@use_facet:

; 520  : 				{
; 521  :  #if _HAS_EXCEPTIONS
; 522  : 				_THROW(bad_cast{});	// lazy disallowed

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_cast@std@@QEAA@XZ		; std::bad_cast::bad_cast
	lea	rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
	int	3
$LN67@use_facet:
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
_Psave$18 = 64
_Lock$19 = 72
_Psave_guard$20 = 80
__$ArrayPad$ = 88
_Loc$ = 112
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Lock$19[rdx]
	rex_jmp	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
$T1 = 40
_Psave$18 = 64
_Lock$19 = 72
_Psave_guard$20 = 80
__$ArrayPad$ = 88
_Loc$ = 112
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Psave_guard$20[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
_Psave$18 = 64
_Lock$19 = 72
_Psave_guard$20 = 80
__$ArrayPad$ = 88
_Loc$ = 112
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Lock$19[rdx]
	rex_jmp	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
_Psave$18 = 64
_Lock$19 = 72
_Psave_guard$20 = 80
__$ArrayPad$ = 88
_Loc$ = 112
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Psave_guard$20[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 1785 : 		_Myres(0)

	mov	QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 279  : 		}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$dead$ = 16
??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	ret	0
??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
_TEXT	SEGMENT
this$ = 80
_Size_increase$dead$ = 88
_Fn$dead$ = 96
<_Args_0>$ = 104
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>, COMDAT

; 3919 : 		{	// reallocate to increase size by _Size_increase elements, new buffer prepared by

$LN132:
	push	rbx
	push	rbp
	push	rsi
	push	r12
	sub	rsp, 40					; 00000028H

; 3920 : 			// _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 3921 : 		auto& _My_data = this->_Get_data();
; 3922 : 		const size_type _Old_size = _My_data._Mysize;

	mov	rbp, QWORD PTR [rcx+16]

; 3923 : 		if (max_size() - _Old_size < _Size_increase)

	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbx
	movzx	r12d, r9b
	sub	rax, rbp
	mov	rsi, rcx
	cmp	rax, 1
	jb	$LN130@Reallocate

; 3926 : 			}
; 3927 : 
; 3928 : 		const size_type _New_size = _Old_size + _Size_increase;
; 3929 : 		const size_type _Old_capacity = _My_data._Myres;

	mov	QWORD PTR [rsp+96], r14
	mov	r14, QWORD PTR [rcx+24]
	mov	QWORD PTR [rsp+32], r15
	lea	r15, QWORD PTR [rbp+1]

; 3869 : 		const size_type _Masked = _Requested | this->_ALLOC_MASK;

	mov	rcx, r15
	or	rcx, 15
	cmp	rcx, rbx

; 3870 : 		if (_Masked > _Max)

	ja	SHORT $LN24@Reallocate

; 3871 : 			{	// the mask overflows, settle for max_size()
; 3872 : 			return (_Max);
; 3873 : 			}
; 3874 : 
; 3875 : 		const size_type _Old = _My_data._Myres;
; 3876 : 		if (_Old > _Max - _Old / 2)

	mov	rdx, r14
	mov	rax, rbx
	shr	rdx, 1
	sub	rax, rdx
	cmp	r14, rax
	ja	SHORT $LN24@Reallocate

; 3877 : 			{	// similarly, geometric overflows
; 3878 : 			return (_Max);
; 3879 : 			}
; 3880 : 
; 3881 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	lea	rax, QWORD PTR [rdx+r14]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility

; 33   : 	return (_Left < _Right ? _Right : _Left);

	mov	rbx, rcx
	cmp	rcx, rax
	cmovb	rbx, rax
$LN24@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3932 : 		const pointer _New_ptr = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, rbx
	mov	QWORD PTR [rsp+88], rdi
	add	rax, 1
	mov	rdx, -1
	cmovb	rax, rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 182  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN57@Reallocate

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rax+39]

; 94   : 	if (_Block_size <= _Bytes)

	cmp	rcx, rax
	cmovbe	rcx, rdx

; 52   : 		return (::operator new(_Bytes));

	call	??2@YAPEAX_K@Z				; operator new

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN103@Reallocate

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 184  : 		return (_Allocate_manually_vector_aligned<_Traits>(_Bytes));

	jmp	SHORT $LN56@Reallocate
$LN57@Reallocate:

; 185  : 		}
; 186  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 187  : 
; 188  : 	if (_Bytes != 0)

	test	rax, rax
	je	SHORT $LN58@Reallocate

; 52   : 		return (::operator new(_Bytes));

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 190  : 		return (_Traits::_Allocate(_Bytes));

	jmp	SHORT $LN56@Reallocate
$LN58@Reallocate:

; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);

	xor	edi, edi
$LN56@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3934 : 		_My_data._Mysize = _New_size;

	mov	QWORD PTR [rsi+16], r15

; 3935 : 		_My_data._Myres = _New_capacity;
; 3936 : 		_Elem * const _Raw_new = _Unfancy(_New_ptr);
; 3937 : 		if (this->_BUF_SIZE <= _Old_capacity)

	mov	r8, rbp
	mov	QWORD PTR [rsi+24], rbx
	mov	rcx, rdi
	cmp	r14, 16
	jb	SHORT $LN3@Reallocate

; 3938 : 			{
; 3939 : 			const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	rbx, QWORD PTR [rsi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	rdx, rbx
	call	memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3941 : 			_Al.deallocate(_Old_ptr, _Old_capacity + 1);

	lea	rdx, QWORD PTR [r14+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rdi+rbp], r12b
	mov	BYTE PTR [rdi+rbp+1], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN106@Reallocate

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rbx, rcx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rbx-8]
	cmp	rax, 31
	ja	SHORT $LN103@Reallocate

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rbx, rcx
$LN106@Reallocate:

; 207  : 	::operator delete(_Ptr, _Bytes);

	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3944 : 		else

	jmp	SHORT $LN4@Reallocate
$LN103@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN3@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd

; 471  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

	mov	rdx, rsi
	call	memcpy

; 506  : 		_Left = _Right;

	mov	BYTE PTR [rdi+rbp], r12b
	mov	BYTE PTR [rdi+rbp+1], 0
$LN4@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3950 : 		return (*this);

	mov	QWORD PTR [rsi], rdi
	mov	rax, rsi
	mov	rdi, QWORD PTR [rsp+88]
	mov	r14, QWORD PTR [rsp+96]
	mov	r15, QWORD PTR [rsp+32]

; 3951 : 		}

	add	rsp, 40					; 00000028H
	pop	r12
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN130@Reallocate:

; 3924 : 			{
; 3925 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
	int	3
$LN128@Reallocate:
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))
; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	ret	0
??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z PROC ; std::addressof<std::codecvt<char,char,_Mbstatet> const >, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ENDP ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z PROC		; std::_Refancy<char *,0>, COMDAT

; 363  : 	return (_Ptr);

	mov	rax, rcx

; 364  : 	}

	ret	0
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ENDP		; std::_Refancy<char *,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx

; 67   :         : _Data()

	lea	rdx, QWORD PTR [rbx+8]

; 68   :     {

	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rbx], rcx
	xor	ecx, ecx
	mov	QWORD PTR [rdx], rcx
	mov	QWORD PTR [rdx+8], rcx

; 69   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp___std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT

; 2312 : 		return (this->_Myptr());

	mov	rax, QWORD PTR [rcx]

; 2322 : 		pointer _Ans = get();
; 2323 : 		this->_Myptr() = pointer();

	mov	QWORD PTR [rcx], 0

; 2324 : 		return (_Ans);
; 2325 : 		}

	ret	0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T11 = 32
this$ = 64
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT

; 2293 : 		{	// destroy the object

$LN27:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T11[rsp], -2

; 2312 : 		return (this->_Myptr());

	mov	rcx, QWORD PTR [rcx]

; 2294 : 		if (get() != pointer())

	test	rcx, rcx
	je	SHORT $LN21@unique_ptr

; 2084 : 		delete _Ptr;

	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax]
	npad	1
$LN21@unique_ptr:

; 2295 : 			{
; 2296 : 			this->get_deleter()(get());
; 2297 : 			}
; 2298 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 1784 : 		_Mysize(0),

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 1785 : 		_Myres(0)

	mov	QWORD PTR [rcx+24], rax

; 1787 : 		}

	mov	rax, rcx
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4003 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 4004 : 		_Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen:
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Requested$ = 16
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 3867 : 		const size_type _Max = max_size();
; 3868 : 		auto& _My_data = this->_Get_data();
; 3869 : 		const size_type _Masked = _Requested | this->_ALLOC_MASK;

	or	rdx, 15
	mov	r9, 9223372036854775807			; 7fffffffffffffffH
	cmp	rdx, r9

; 3870 : 		if (_Masked > _Max)

	ja	SHORT $LN25@Calculate_

; 3871 : 			{	// the mask overflows, settle for max_size()
; 3872 : 			return (_Max);
; 3873 : 			}
; 3874 : 
; 3875 : 		const size_type _Old = _My_data._Myres;

	mov	r8, QWORD PTR [rcx+24]

; 3876 : 		if (_Old > _Max - _Old / 2)

	mov	rax, r9
	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	r8, rax
	ja	SHORT $LN25@Calculate_

; 3881 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	lea	rax, QWORD PTR [rcx+r8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility

; 33   : 	return (_Left < _Right ? _Right : _Left);

	cmp	rdx, rax
	cmovb	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring

; 3881 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	mov	rax, rdx

; 3882 : 		}

	ret	0
$LN25@Calculate_:

; 3877 : 			{	// similarly, geometric overflows
; 3878 : 			return (_Max);

	mov	rax, r9

; 3882 : 		}

	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAPEAV_Facet_base@2@XZ PROC ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Myptr, COMDAT

; 2159 : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 2160 : 		}

	ret	0
?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAPEAV_Facet_base@2@XZ ENDP ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?get_deleter@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::get_deleter, COMDAT

; 2149 : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 2150 : 		}

	ret	0
?get_deleter@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::get_deleter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ?get@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?get@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::get, COMDAT

; 2312 : 		return (this->_Myptr());

	mov	rax, QWORD PTR [rcx]

; 2313 : 		}

	ret	0
?get@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T3 = 32
this$dead$ = 64
_Ptr$ = 72
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT

; 2081 : 		{	// delete a pointer

$LN8:

; 2082 : 		static_assert(0 < sizeof (_Ty),
; 2083 : 			"can't delete an incomplete type");
; 2084 : 		delete _Ptr;

	test	rdx, rdx
	je	SHORT $LN5@operator
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T3[rsp], -2

; 2081 : 		{	// delete a pointer

	mov	r8, rdx

; 2082 : 		static_assert(0 < sizeof (_Ty),
; 2083 : 			"can't delete an incomplete type");
; 2084 : 		delete _Ptr;

	mov	rax, QWORD PTR [rdx]
	mov	edx, 1
	mov	rcx, r8
	call	QWORD PTR [rax]
	npad	1

; 2085 : 		}

	add	rsp, 56					; 00000038H
$LN5@operator:
	ret	0
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 1857 : 			{	// user-provided, for fancy pointers
; 1858 : 			}

	mov	rax, rcx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAPEAV_Facet_base@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_second, COMDAT

; 302  : 		return (_Myval2);

	mov	rax, rcx

; 303  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAPEAV_Facet_base@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT

; 292  : 		return (*this);

	mov	rax, rcx

; 293  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAAEBQEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAAEBQEAV_Facet_base@2@XZ PROC ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Myptr, COMDAT

; 2164 : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 2165 : 		}

	ret	0
?_Myptr@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEBAAEBQEAV_Facet_base@2@XZ ENDP ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEBAAEBQEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEBAAEBQEAV_Facet_base@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_second, COMDAT

; 307  : 		return (_Myval2);

	mov	rax, rcx

; 308  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEBAAEBQEAV_Facet_base@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory

; 2213 : 		}

	mov	rax, rcx
	ret	0
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1575 : 	}

	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory
;	COMDAT ??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::_Facet_base *>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory

; 2145 : 		}

	mov	rax, rcx
	ret	0
??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> >::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::_Facet_base *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
<_Val2_0>$ = 24
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax

; 278  : 		{	// construct from forwarded values
; 279  : 		}

	mov	rax, rcx
	ret	0
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1575 : 	}

	ret	0
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
END
