; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27050.0 

include listing.inc

INCLUDELIB OLDNAMES

?ntscpalette@@3QBEB DB 04dH				; ntscpalette
	DB	04dH
	DB	04dH
	DB	01H
	DB	017H
	DB	04bH
	DB	0dH
	DB	0cH
	DB	060H
	DB	01fH
	DB	05H
	DB	05eH
	DB	031H
	DB	02H
	DB	045H
	DB	03bH
	DB	03H
	DB	022H
	DB	03aH
	DB	08H
	DB	03H
	DB	02dH
	DB	011H
	DB	00H
	DB	01bH
	DB	01cH
	DB	00H
	DB	0aH
	DB	026H
	DB	00H
	DB	00H
	DB	02bH
	DB	00H
	DB	00H
	DB	029H
	DB	08H
	DB	00H
	DB	022H
	DB	029H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	09cH
	DB	09cH
	DB	09cH
	DB	01aH
	DB	045H
	DB	099H
	DB	033H
	DB	032H
	DB	0b9H
	DB	053H
	DB	024H
	DB	0b5H
	DB	06fH
	DB	01dH
	DB	08fH
	DB	07fH
	DB	01fH
	DB	057H
	DB	07dH
	DB	029H
	DB	020H
	DB	06aH
	DB	03aH
	DB	00H
	DB	04cH
	DB	04dH
	DB	00H
	DB	02dH
	DB	05dH
	DB	00H
	DB	016H
	DB	066H
	DB	04H
	DB	0cH
	DB	063H
	DB	02aH
	DB	0dH
	DB	057H
	DB	062H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	064H
	DB	099H
	DB	0fcH
	DB	084H
	DB	082H
	DB	0ffH
	DB	0aaH
	DB	070H
	DB	0ffH
	DB	0ccH
	DB	068H
	DB	0f1H
	DB	0deH
	DB	06aH
	DB	0afH
	DB	0dcH
	DB	077H
	DB	06bH
	DB	0c5H
	DB	08cH
	DB	039H
	DB	0a2H
	DB	0a3H
	DB	021H
	DB	07cH
	DB	0b7H
	DB	024H
	DB	05eH
	DB	0c1H
	DB	041H
	DB	04fH
	DB	0beH
	DB	078H
	DB	051H
	DB	0afH
	DB	0bdH
	DB	037H
	DB	037H
	DB	037H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	0bbH
	DB	0d3H
	DB	0fdH
	DB	0caH
	DB	0c9H
	DB	0ffH
	DB	0dbH
	DB	0c1H
	DB	0ffH
	DB	0e9H
	DB	0bdH
	DB	0f9H
	DB	0f1H
	DB	0beH
	DB	0ddH
	DB	0f0H
	DB	0c4H
	DB	0beH
	DB	0e7H
	DB	0ceH
	DB	0a6H
	DB	0d7H
	DB	0d8H
	DB	099H
	DB	0c6H
	DB	0e0H
	DB	09aH
	DB	0b8H
	DB	0e5H
	DB	0aaH
	DB	0b1H
	DB	0e3H
	DB	0c4H
	DB	0b2H
	DB	0ddH
	DB	0e3H
	DB	0a5H
	DB	0a5H
	DB	0a5H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
PUBLIC	??0nesvideo@@QEAA@XZ				; nesvideo::nesvideo
PUBLIC	?process_ppu_image@nesvideo@@QEAAXPEAG@Z	; nesvideo::process_ppu_image
PUBLIC	?getFrame@nesvideo@@QEAAPEAXXZ			; nesvideo::getFrame
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0nesvideo@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$??0nesvideo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?process_ppu_image@nesvideo@@QEAAXPEAG@Z DD imagerel $LN11
	DD	imagerel $LN11+160
	DD	imagerel $unwind$?process_ppu_image@nesvideo@@QEAAXPEAG@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?process_ppu_image@nesvideo@@QEAAXPEAG@Z DD 081401H
	DD	047414H
	DD	03640fH
	DD	02540aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0nesvideo@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp
;	COMDAT ?getFrame@nesvideo@@QEAAPEAXXZ
_TEXT	SEGMENT
this$ = 8
?getFrame@nesvideo@@QEAAPEAXXZ PROC			; nesvideo::getFrame, COMDAT

; 14   : 	return displaybuffer;

	mov	rax, QWORD PTR [rcx]

; 15   : }

	ret	0
?getFrame@nesvideo@@QEAAPEAXXZ ENDP			; nesvideo::getFrame
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp
;	COMDAT ?process_ppu_image@nesvideo@@QEAAXPEAG@Z
_TEXT	SEGMENT
this$ = 8
ppu_image$ = 16
?process_ppu_image@nesvideo@@QEAAXPEAG@Z PROC		; nesvideo::process_ppu_image, COMDAT

; 17   : void nesvideo::process_ppu_image(unsigned __int16 * ppu_image) {

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	mov	esi, 65528				; 0000fff8H
	lea	rdi, OFFSET FLAT:?ntscpalette@@3QBEB
	mov	r11, rdx
	mov	rbx, rcx
	xor	r10d, r10d
	lea	ebp, QWORD PTR [rsi+4]
	npad	4
$LL4@process_pp:

; 18   : 	/*
; 19   : 		input is a buffer of 16 bits per pixel.
; 20   : 		pixel data is made up as
; 21   : 		[xxxxx]e[rgb][pppppppp]
; 22   : 		[rgb] is emphasis bits, [pppppppp] is pixel data. [xxxxx] is filler data we ignore (no need)
; 23   : 	*/
; 24   : 
; 25   : 	for (int x = 0; x < 61440; x++) {
; 26   : 		unsigned __int8 pixel = ppu_image[x] & 0x3F;

	movzx	r8d, BYTE PTR [r10+r11]

; 27   : 		
; 28   : 		__int32 idx = pixel * 3;
; 29   : 
; 30   : 		unsigned __int16 framepixel = ((ntscpalette[idx] >> 3) << 11) |
; 31   : 			((ntscpalette[idx + 1] >> 2) << 5) |

	mov	eax, r8d
	and	r8d, 63					; 0000003fH
	and	eax, 63					; 0000003fH
	lea	rdx, QWORD PTR [rax+rax*2]
	movzx	eax, BYTE PTR [rdx+rdi+1]
	movzx	r9d, BYTE PTR [rdx+rdi]
	and	r9w, si
	shl	r9w, 5
	or	r9w, ax
	lea	rax, QWORD PTR [r8+r8*2]
	movzx	eax, BYTE PTR [rax+rdi+2]
	and	r9w, bp
	shr	al, 3
	movzx	ecx, al

; 32   : 			((ntscpalette[idx + 2] >> 3));
; 33   : 
; 34   : 		displaybuffer[x] = framepixel;

	mov	rax, QWORD PTR [rbx]
	shl	r9w, 3
	or	r9w, cx
	mov	WORD PTR [r10+rax], r9w
	add	r10, 2
	cmp	r10, 122880				; 0001e000H
	jl	SHORT $LL4@process_pp

; 35   : 	}
; 36   : }

	mov	rbx, QWORD PTR [rsp+8]
	mov	rbp, QWORD PTR [rsp+16]
	mov	rsi, QWORD PTR [rsp+24]
	mov	rdi, QWORD PTR [rsp+32]
	ret	0
?process_ppu_image@nesvideo@@QEAAXPEAG@Z ENDP		; nesvideo::process_ppu_image
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nightorius.phibian\source\repos\denveremu\denveremu\video\nesvideo.cpp
;	COMDAT ??0nesvideo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0nesvideo@@QEAA@XZ PROC				; nesvideo::nesvideo, COMDAT

; 5    : nesvideo::nesvideo() {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 6    : 	displaybuffer = (unsigned __int16 *)malloc(122880); // buffer is 256x240 16 bits.

	mov	ecx, 122880				; 0001e000H
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [rbx], rax

; 7    : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0nesvideo@@QEAA@XZ ENDP				; nesvideo::nesvideo
_TEXT	ENDS
END
