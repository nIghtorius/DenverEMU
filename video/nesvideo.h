/*

	nesvideo.h:
		Class for converting "PPU" buffers to usable display data.

*/

#pragma once

#include <cstdint>
#include "../3rdparty/hqx/HQ2x.h"
#include "../3rdparty/hqx/HQ3x.h"

static const std::uint8_t ntscpalette[] = {
  0x4d, 0x4d, 0x4d, 0x01, 0x17, 0x4b, 0x0d, 0x0c, 0x60, 0x1f, 0x05, 0x5e, 0x31, 0x02, 0x45, 0x3b,
  0x03, 0x22, 0x3a, 0x08, 0x03, 0x2d, 0x11, 0x00, 0x1b, 0x1c, 0x00, 0x0a, 0x26, 0x00, 0x00, 0x2b,
  0x00, 0x00, 0x29, 0x08, 0x00, 0x22, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x9c, 0x9c, 0x9c, 0x1a, 0x45, 0x99, 0x33, 0x32, 0xb9, 0x53, 0x24, 0xb5, 0x6f, 0x1d, 0x8f, 0x7f,
  0x1f, 0x57, 0x7d, 0x29, 0x20, 0x6a, 0x3a, 0x00, 0x4c, 0x4d, 0x00, 0x2d, 0x5d, 0x00, 0x16, 0x66,
  0x04, 0x0c, 0x63, 0x2a, 0x0d, 0x57, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfe, 0xff, 0xff, 0x64, 0x99, 0xfc, 0x84, 0x82, 0xff, 0xaa, 0x70, 0xff, 0xcc, 0x68, 0xf1, 0xde,
  0x6a, 0xaf, 0xdc, 0x77, 0x6b, 0xc5, 0x8c, 0x39, 0xa2, 0xa3, 0x21, 0x7c, 0xb7, 0x24, 0x5e, 0xc1,
  0x41, 0x4f, 0xbe, 0x78, 0x51, 0xaf, 0xbd, 0x37, 0x37, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfe, 0xff, 0xff, 0xbb, 0xd3, 0xfd, 0xca, 0xc9, 0xff, 0xdb, 0xc1, 0xff, 0xe9, 0xbd, 0xf9, 0xf1,
  0xbe, 0xdd, 0xf0, 0xc4, 0xbe, 0xe7, 0xce, 0xa6, 0xd7, 0xd8, 0x99, 0xc6, 0xe0, 0x9a, 0xb8, 0xe5,
  0xaa, 0xb1, 0xe3, 0xc4, 0xb2, 0xdd, 0xe3, 0xa5, 0xa5, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

class nesvideo {
private:
	std::uint32_t* displaybuffer;	// 32bit
	std::uint32_t* displaybufferx;
	HQ2x	hq2x;
	HQ3x	hq3x;

public:
	nesvideo();
	~nesvideo();
	void process_ppu_image(std::uint16_t* ppu_image);
	void add_overscan_borders();

	// upscalers.
	void hq2x_image();
	void hq3x_image();

	// frame getters
	void* getFrame();
	void* getFramex();
};